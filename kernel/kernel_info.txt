acct.c:100:static int check_free_space(struct bsd_acct_struct *acct, struct file *file)
acct.c:196:static int acct_on(struct filename *pathname)
acct.c:290:void acct_auto_close_mnt(struct vfsmount *m)
acct.c:311:void acct_auto_close(struct super_block *sb)
acct.c:325:void acct_exit_ns(struct pid_namespace *ns)
acct.c:352:static comp_t encode_comp_t(unsigned long value)
acct.c:394:static comp2_t encode_comp2_t(u64 value)
acct.c:427:static u32 encode_float(u64 value)
acct.c:573:void acct_collect(long exitcode, int group_dead)
acct.c:612:static void acct_process_in_ns(struct pid_namespace *ns)
acct.c:643:void acct_process(void)
async.c:85:static async_cookie_t lowest_in_progress(struct async_domain *domain)
async.c:109:static void async_run_entry_fn(struct work_struct *work)
async.c:148:static async_cookie_t __async_schedule(async_func_t func, void *data, struct async_domain *domain)
async.c:207:async_cookie_t async_schedule(async_func_t func, void *data)
async.c:237:void async_synchronize_full(void)
async.c:252:void async_unregister_domain(struct async_domain *domain)
async.c:268:void async_synchronize_full_domain(struct async_domain *domain)
async.c:283:void async_synchronize_cookie_domain(async_cookie_t cookie, struct async_domain *domain)
async.c:312:void async_synchronize_cookie(async_cookie_t cookie)
async.c:323:bool current_is_async(void)
audit.c:182:static void audit_set_pid(struct audit_buffer *ab, pid_t pid)
audit.c:190:void audit_panic(const char *message)
audit.c:208:static inline int audit_rate_check(void)
audit.c:245:void audit_log_lost(const char *message)
audit.c:298:static int audit_do_config_change(char *function_name, int *to_change, int new)
audit.c:323:static int audit_set_rate_limit(int limit)
audit.c:328:static int audit_set_backlog_limit(int limit)
audit.c:333:static int audit_set_enabled(int state)
audit.c:346:static int audit_set_failure(int state)
audit.c:365:static void audit_hold_skb(struct sk_buff *skb)
audit.c:378:static void audit_printk_skb(struct sk_buff *skb)
audit.c:393:static void kauditd_send_skb(struct sk_buff *skb)
audit.c:426:static void flush_hold_queue(void)
audit.c:450:static int kauditd_thread(void *dummy)
audit.c:482:int audit_send_list(void *_dest)
audit.c:525:static int audit_send_reply_thread(void *arg)
audit.c:581:static int audit_netlink_ok(struct sk_buff *skb, u16 msg_type)
audit.c:623:static int audit_log_common_recv_msg(struct audit_buffer **ab, u16 msg_type)
audit.c:643:int is_audit_feature_set(int i)
audit.c:649:static int audit_get_feature(struct sk_buff *skb)
audit.c:673:static int audit_set_feature(struct sk_buff *skb)
audit.c:731:static int audit_receive_msg(struct sk_buff *skb, struct nlmsghdr *nlh)
audit.c:970:static void audit_receive_skb(struct sk_buff *skb)
audit.c:994:static void audit_receive(struct sk_buff  *skb)
audit.c:1059:static void audit_buffer_free(struct audit_buffer *ab)
audit.c:1139:unsigned int audit_serial(void)
audit.c:1168:static void wait_for_auditd(unsigned long sleep_time)
audit.c:1263:static inline int audit_expand(struct audit_buffer *ab, int extra)
audit.c:1331:void audit_log_format(struct audit_buffer *ab, const char *fmt, ...)
audit.c:1422:int audit_string_contains_control(const char *string, size_t len)
audit.c:1463:void audit_log_untrustedstring(struct audit_buffer *ab, const char *string)
audit.c:1492:void audit_log_session_info(struct audit_buffer *ab)
audit.c:1500:void audit_log_key(struct audit_buffer *ab, char *key)
audit.c:1509:void audit_log_cap(struct audit_buffer *ab, char *prefix, kernel_cap_t *cap)
audit.c:1520:void audit_log_fcaps(struct audit_buffer *ab, struct audit_names *name)
audit.c:1668:int audit_log_task_context(struct audit_buffer *ab)
audit.c:1696:void audit_log_task_info(struct audit_buffer *ab, struct task_struct *tsk)
audit.c:1752:void audit_log_link_denied(const char *operation, struct path *link)
audit.c:1788:void audit_log_end(struct audit_buffer *ab)
audit.c:1847:void audit_log_secctx(struct audit_buffer *ab, u32 secid)
audit.h:229:static inline int audit_hash_ino(u32 ino)
audit.h:314:static inline int audit_signal_info(int sig, struct task_struct *t)
audit_tree.c:91:static inline void get_tree(struct audit_tree *tree)
audit_tree.c:96:static inline void put_tree(struct audit_tree *tree)
audit_tree.c:108:static void free_chunk(struct audit_chunk *chunk)
audit_tree.c:119:void audit_put_chunk(struct audit_chunk *chunk)
audit_tree.c:125:static void __put_chunk(struct rcu_head *rcu)
audit_tree.c:131:static void audit_tree_destroy_watch(struct fsnotify_mark *entry)
audit_tree.c:171:static void insert_hash(struct audit_chunk *chunk)
audit_tree.c:183:struct audit_chunk *audit_tree_lookup(const struct inode *inode)
audit_tree.c:198:int audit_tree_match(struct audit_chunk *chunk, struct audit_tree *tree)
audit_tree.c:216:static void untag_chunk(struct node *p)
audit_tree.c:315:static int create_chunk(struct inode *inode, struct audit_tree *tree)
audit_tree.c:354:static int tag_chunk(struct inode *inode, struct audit_tree *tree)
audit_tree.c:452:static void audit_log_remove_rule(struct audit_krule *rule)
audit_tree.c:468:static void kill_rules(struct audit_tree *tree)
audit_tree.c:491:static void prune_one(struct audit_tree *victim)
audit_tree.c:507:static void trim_marked(struct audit_tree *tree)
audit_tree.c:552:int audit_remove_tree_rule(struct audit_krule *rule)
audit_tree.c:576:static int compare_root(struct vfsmount *mnt, void *arg)
audit_tree.c:581:void audit_trim_trees(void)
audit_tree.c:629:int audit_make_tree(struct audit_krule *rule, char *pathname, u32 op)
audit_tree.c:643:void audit_put_tree(struct audit_tree *tree)
audit_tree.c:648:static int tag_mount(struct vfsmount *mnt, void *arg)
audit_tree.c:654:int audit_add_tree_rule(struct audit_krule *rule)
audit_tree.c:718:int audit_tag_tree(char *old, char *new)
audit_tree.c:817:static int prune_tree_thread(void *unused)
audit_tree.c:840:static void audit_schedule_prune(void)
audit_tree.c:849:void audit_kill_trees(struct list_head *list)
audit_tree.c:876:static void evict_chunk(struct audit_chunk *chunk)
audit_tree.c:923:static void audit_tree_freeing_mark(struct fsnotify_mark *entry, struct fsnotify_group *group)
audit_watch.c:69:static void audit_free_parent(struct audit_parent *parent)
audit_watch.c:75:static void audit_watch_free_mark(struct fsnotify_mark *entry)
audit_watch.c:83:static void audit_get_parent(struct audit_parent *parent)
audit_watch.c:89:static void audit_put_parent(struct audit_parent *parent)
audit_watch.c:111:void audit_get_watch(struct audit_watch *watch)
audit_watch.c:116:void audit_put_watch(struct audit_watch *watch)
audit_watch.c:126:static void audit_remove_watch(struct audit_watch *watch)
audit_watch.c:134:char *audit_watch_path(struct audit_watch *watch)
audit_watch.c:139:int audit_watch_compare(struct audit_watch *watch, unsigned long ino, dev_t dev)
audit_watch.c:189:int audit_to_watch(struct audit_krule *krule, char *path, int len, u32 op)
audit_watch.c:238:static void audit_watch_log_rule_change(struct audit_krule *r, struct audit_watch *w, char *op)
audit_watch.c:335:static void audit_remove_parent_watches(struct audit_parent *parent)
audit_watch.c:359:static int audit_get_nd(struct audit_watch *watch, struct path *parent)
audit_watch.c:410:int audit_add_watch(struct audit_krule *krule, struct list_head **list)
audit_watch.c:450:void audit_remove_watch_rule(struct audit_krule *krule)
auditfilter.c:70:static inline void audit_free_rule(struct audit_entry *e)
auditfilter.c:89:void audit_free_rule_rcu(struct rcu_head *head)
auditfilter.c:117:char *audit_unpack_string(void **bufp, size_t *remain, size_t len)
auditfilter.c:178:int audit_match_class(int class, unsigned syscall)
auditfilter.c:188:static inline int audit_match_class_bits(int class, u32 *mask)
auditfilter.c:200:static int audit_match_signal(struct audit_entry *entry)
auditfilter.c:305:static u32 audit_to_op(u32 op)
auditfilter.c:314:static int audit_field_valid(struct audit_entry *entry, struct audit_field *f)
auditfilter.c:546:static inline size_t audit_pack_string(void **bufp, const char *str)
auditfilter.c:616:static int audit_compare_rule(struct audit_krule *a, struct audit_krule *b)
auditfilter.c:724:struct audit_entry *audit_dupe_rule(struct audit_krule *old)
auditfilter.c:837:static inline int audit_add_rule(struct audit_entry *entry)
auditfilter.c:922:static inline int audit_del_rule(struct audit_entry *entry)
auditfilter.c:975:static void audit_list_rules(int pid, int seq, struct sk_buff_head *q)
auditfilter.c:1003:static void audit_log_rule_change(char *action, struct audit_krule *rule, int res)
auditfilter.c:1032:int audit_receive_filter(int type, int pid, int seq, void *data, size_t datasz)
auditfilter.c:1090:int audit_comparator(u32 left, u32 op, u32 right)
auditfilter.c:1115:int audit_uid_comparator(kuid_t left, u32 op, kuid_t right)
auditfilter.c:1138:int audit_gid_comparator(kgid_t left, u32 op, kgid_t right)
auditfilter.c:1165:int parent_len(const char *path)
auditfilter.c:1199:int audit_compare_dname_path(const char *dname, const char *path, int parentlen)
auditfilter.c:1275:int audit_filter_user(int type)
auditfilter.c:1294:int audit_filter_type(int type)
auditfilter.c:1322:static int update_lsm_rule(struct audit_krule *r)
auditfilter.c:1357:int audit_update_lsm_rules(void)
auditsc.c:122:static inline int open_arg(int flags, int mask)
auditsc.c:130:static int audit_match_perm(struct audit_context *ctx, int mask)
auditsc.c:173:static int audit_match_filetype(struct audit_context *ctx, int val)
auditsc.c:201:static void audit_set_auditable(struct audit_context *ctx)
auditsc.c:209:static int put_tree_ref(struct audit_context *ctx, struct audit_chunk *chunk)
auditsc.c:230:static int grow_tree_refs(struct audit_context *ctx)
auditsc.c:277:static void free_tree_refs(struct audit_context *ctx)
auditsc.c:286:static int match_tree_refs(struct audit_context *ctx, struct audit_tree *tree)
auditsc.c:792:void audit_filter_inodes(struct task_struct *tsk, struct audit_context *ctx)
auditsc.c:845:static inline void audit_free_names(struct audit_context *context)
auditsc.c:886:static inline void audit_free_aux(struct audit_context *context)
auditsc.c:923:int audit_alloc(struct task_struct *tsk)
auditsc.c:950:static inline void audit_free_context(struct audit_context *context)
auditsc.c:1174:static void show_special(struct audit_context *context, int *call_panic)
auditsc.c:1274:static void audit_log_exit(struct audit_context *context, struct task_struct *tsk)
auditsc.c:1405:void __audit_free(struct task_struct *tsk)
auditsc.c:1533:static inline void handle_one(const struct inode *inode)
auditsc.c:1563:static void handle_path(const struct dentry *dentry)
auditsc.c:1678:void __audit_getname(struct filename *name)
auditsc.c:1717:void audit_putname(struct filename *name)
auditsc.c:1950:static int audit_set_loginuid_perm(kuid_t loginuid)
auditsc.c:1995:int audit_set_loginuid(kuid_t loginuid)
auditsc.c:2027:void __audit_mq_open(int oflag, umode_t mode, struct mq_attr *attr)
auditsc.c:2075:void __audit_mq_notify(mqd_t mqdes, const struct sigevent *notification)
auditsc.c:2094:void __audit_mq_getsetattr(mqd_t mqdes, struct mq_attr *mqstat)
auditsc.c:2107:void __audit_ipc_obj(struct kern_ipc_perm *ipcp)
auditsc.c:2127:void __audit_ipc_set_perm(unsigned long qbytes, uid_t uid, gid_t gid, umode_t mode)
auditsc.c:2138:void __audit_bprm(struct linux_binprm *bprm)
auditsc.c:2153:int __audit_socketcall(int nargs, unsigned long *args)
auditsc.c:2171:void __audit_fd_pair(int fd1, int fd2)
auditsc.c:2185:int __audit_sockaddr(int len, void *a)
auditsc.c:2201:void __audit_ptrace(struct task_struct *t)
auditsc.c:2221:int __audit_signal_info(int sig, struct task_struct *t)
auditsc.c:2342:void __audit_mmap_fd(int fd, int flags)
auditsc.c:2350:static void audit_log_task(struct audit_buffer *ab)
auditsc.c:2370:static void audit_log_abend(struct audit_buffer *ab, char *reason, long signr)
auditsc.c:2384:void audit_core_dumps(long signr)
auditsc.c:2401:void __audit_seccomp(unsigned long syscall, long signr, int code)
auditsc.c:2417:struct list_head *audit_killed_trees(void)
backtracetest.c:20:static void backtrace_test_normal(void)
backtracetest.c:30:static void backtrace_test_irq_callback(unsigned long data)
backtracetest.c:38:static void backtrace_test_irq(void)
backtracetest.c:49:static void backtrace_test_saved(void)
backtracetest.c:66:static void backtrace_test_saved(void)
backtracetest.c:72:static int backtrace_regression_test(void)
backtracetest.c:84:static void exitf(void)
bounds.c:16:void foo(void)
capability.c:43:static void warn_legacy_capability_use(void)
capability.c:72:static void warn_deprecated_v2(void)
capability.c:90:static int cap_validate_magic(cap_user_header_t header, unsigned *tocopy)
capability.c:322:bool has_capability(struct task_struct *t, int cap)
capability.c:364:bool has_capability_noaudit(struct task_struct *t, int cap)
capability.c:380:bool ns_capable(struct user_namespace *ns, int cap)
capability.c:407:bool file_ns_capable(const struct file *file, struct user_namespace *ns, int cap)
capability.c:429:bool capable(int cap)
capability.c:449:bool inode_capable(const struct inode *inode, int cap)
cgroup.c:226:static inline bool cgroup_is_dead(const struct cgroup *cgrp)
cgroup.c:240:bool cgroup_is_descendant(struct cgroup *cgrp, struct cgroup *ancestor)
cgroup.c:251:static int cgroup_is_releasable(const struct cgroup *cgrp)
cgroup.c:259:static int notify_on_release(const struct cgroup *cgrp)
cgroup.c:319:static bool cgroup_lock_live_group(struct cgroup *cgrp)
cgroup.c:404:static void __put_css_set(struct css_set *cset, int taskexit)
cgroup.c:448:static inline void get_css_set(struct css_set *cset)
cgroup.c:453:static inline void put_css_set(struct css_set *cset)
cgroup.c:458:static inline void put_css_set_taskexit(struct css_set *cset)
cgroup.c:582:static void free_cgrp_cset_links(struct list_head *links_to_free)
cgroup.c:600:static int allocate_cgrp_cset_links(int count, struct list_head *tmp_links)
cgroup.c:844:static void cgroup_free_fn(struct work_struct *work)
cgroup.c:878:static void cgroup_free_rcu(struct rcu_head *head)
cgroup.c:886:static void cgroup_diput(struct dentry *dentry, struct inode *inode)
cgroup.c:917:static void remove_dir(struct dentry *d)
cgroup.c:926:static void cgroup_rm_file(struct cgroup *cgrp, const struct cftype *cft)
cgroup.c:958:static void cgroup_clear_dir(struct cgroup *cgrp, unsigned long subsys_mask)
cgroup.c:976:static void cgroup_d_remove_dir(struct dentry *dentry)
cgroup.c:1095:static int cgroup_show_options(struct seq_file *seq, struct dentry *dentry)
cgroup.c:1138:static int parse_cgroupfs_options(char *data, struct cgroup_sb_opts *opts)
cgroup.c:1288:static int cgroup_remount(struct super_block *sb, int *flags, char *data)
cgroup.c:1355:static void init_cgroup_housekeeping(struct cgroup *cgrp)
cgroup.c:1370:static void init_cgroup_root(struct cgroupfs_root *root)
cgroup.c:1383:static int cgroup_init_root_id(struct cgroupfs_root *root, int start, int end)
cgroup.c:1399:static void cgroup_exit_root_id(struct cgroupfs_root *root)
cgroup.c:1410:static int cgroup_test_super(struct super_block *sb, void *data)
cgroup.c:1462:static void cgroup_free_root(struct cgroupfs_root *root)
cgroup.c:1473:static int cgroup_set_super(struct super_block *sb, void *data)
cgroup.c:1499:static int cgroup_get_rootdir(struct super_block *sb)
cgroup.c:1769:int cgroup_path(const struct cgroup *cgrp, char *buf, int buflen)
cgroup.c:1820:int task_cgroup_path(struct task_struct *task, char *buf, size_t buflen)
cgroup.c:1869:struct task_struct *cgroup_taskset_first(struct cgroup_taskset *tset)
cgroup.c:1888:struct task_struct *cgroup_taskset_next(struct cgroup_taskset *tset)
cgroup.c:1921:int cgroup_taskset_size(struct cgroup_taskset *tset)
cgroup.c:2136:static int attach_task_by_pid(struct cgroup *cgrp, u64 pid, bool threadgroup)
cgroup.c:2217:int cgroup_attach_task_all(struct task_struct *from, struct task_struct *tsk)
cgroup.c:2417:static int cgroup_map_add(struct cgroup_map_cb *cb, const char *key, u64 value)
cgroup.c:2423:static int cgroup_seqfile_show(struct seq_file *m, void *arg)
cgroup.c:2446:static int cgroup_file_open(struct inode *inode, struct file *file)
cgroup.c:2493:static int cgroup_file_release(struct inode *inode, struct file *file)
cgroup.c:2566:static inline int xattr_enabled(struct dentry *dentry)
cgroup.c:2572:static bool is_valid_xattr(const char *name)
cgroup.c:2590:static int cgroup_removexattr(struct dentry *dentry, const char *name)
cgroup.c:2609:static ssize_t cgroup_listxattr(struct dentry *dentry, char *buf, size_t size)
cgroup.c:2702:static umode_t cgroup_file_mode(const struct cftype *cft)
cgroup.c:2720:static int cgroup_add_file(struct cgroup *cgrp, struct cftype *cft)
cgroup.c:2809:static void cgroup_cfts_prepare(void)
cgroup.c:2821:static int cgroup_cfts_commit(struct cftype *cfts, bool is_add)
cgroup.c:2896:int cgroup_add_cftypes(struct cgroup_subsys *ss, struct cftype *cfts)
cgroup.c:2930:int cgroup_rm_cftypes(struct cftype *cfts)
cgroup.c:2958:int cgroup_task_count(const struct cgroup *cgrp)
cgroup.c:2976:static void cgroup_enable_task_cg_lists(void)
cgroup.c:3194:static void css_advance_task_iter(struct css_task_iter *it)
cgroup.c:3256:struct task_struct *css_task_iter_next(struct css_task_iter *it)
cgroup.c:3287:void css_task_iter_end(struct css_task_iter *it)
cgroup.c:3320:static inline int started_after(void *p1, void *p2)
cgroup.c:3455:static void cgroup_transfer_one_task(struct task_struct *task, void *data)
cgroup.c:3469:int cgroup_transfer_tasks(struct cgroup *to, struct cgroup *from)
cgroup.c:3523:static void *pidlist_allocate(int count)
cgroup.c:3530:static void pidlist_free(void *p)
cgroup.c:3542:static int pidlist_uniq(pid_t *list, int length)
cgroup.c:3568:static int cmppid(const void *a, const void *b)
cgroup.c:3683:int cgroupstats_build(struct cgroupstats *stats, struct dentry *dentry)
cgroup.c:3735:static void *cgroup_pidlist_start(struct seq_file *s, loff_t *pos)
cgroup.c:3771:static void cgroup_pidlist_stop(struct seq_file *s, void *v)
cgroup.c:3777:static void *cgroup_pidlist_next(struct seq_file *s, void *v, loff_t *pos)
cgroup.c:3795:static int cgroup_pidlist_show(struct seq_file *s, void *v)
cgroup.c:3811:static void cgroup_release_pid_array(struct cgroup_pidlist *l)
cgroup.c:3836:static int cgroup_pidlist_release(struct inode *inode, struct file *file)
cgroup.c:3863:static int cgroup_pidlist_open(struct file *file, enum cgroup_filetype type)
cgroup.c:3888:static int cgroup_tasks_open(struct inode *unused, struct file *file)
cgroup.c:3892:static int cgroup_procs_open(struct inode *unused, struct file *file)
cgroup.c:3922:static void cgroup_dput(struct cgroup *cgrp)
cgroup.c:3936:static void cgroup_event_remove(struct work_struct *work)
cgroup.c:4204:static int cgroup_populate_dir(struct cgroup *cgrp, unsigned long subsys_mask)
cgroup.c:4250:static void css_free_work_fn(struct work_struct *work)
cgroup.c:4263:static void css_free_rcu_fn(struct rcu_head *rcu_head)
cgroup.c:4276:static void css_release(struct percpu_ref *ref)
cgroup.c:4301:static int online_css(struct cgroup_subsys_state *css)
cgroup.c:4319:static void offline_css(struct cgroup_subsys_state *css)
cgroup.c:4518:static int cgroup_mkdir(struct inode *dir, struct dentry *dentry, umode_t mode)
cgroup.c:4530:static void css_killed_work_fn(struct work_struct *work)
cgroup.c:4565:static void css_killed_ref_fn(struct percpu_ref *ref)
cgroup.c:4583:static void kill_css(struct cgroup_subsys_state *css)
cgroup.c:4630:static int cgroup_destroy_locked(struct cgroup *cgrp)
cgroup.c:4737:static void cgroup_destroy_css_killed(struct cgroup *cgrp)
cgroup.c:4753:static int cgroup_rmdir(struct inode *unused_dir, struct dentry *dentry)
cgroup.c:4937:void cgroup_unload_subsys(struct cgroup_subsys *ss)
cgroup.c:5120:int proc_cgroup_show(struct seq_file *m, void *v)
cgroup.c:5173:static int proc_cgroupstats_show(struct seq_file *m, void *v)
cgroup.c:5195:static int cgroupstats_open(struct inode *inode, struct file *file)
cgroup.c:5223:void cgroup_fork(struct task_struct *child)
cgroup.c:5242:void cgroup_post_fork(struct task_struct *child)
cgroup.c:5322:void cgroup_exit(struct task_struct *tsk, int run_callbacks)
cgroup.c:5364:static void check_for_release(struct cgroup *cgrp)
cgroup.c:5410:static void cgroup_release_agent(struct work_struct *work)
cgroup.c:5519:struct cgroup_subsys_state *css_from_id(int id, struct cgroup_subsys *ss)
cgroup.c:5545:static void debug_css_free(struct cgroup_subsys_state *css)
cgroup.c:5625:static u64 releasable_read(struct cgroup_subsys_state *css, struct cftype *cft)
cgroup_freezer.c:63:bool cgroup_freezing(struct task_struct *task)
cgroup_freezer.c:110:static int freezer_css_online(struct cgroup_subsys_state *css)
cgroup_freezer.c:145:static void freezer_css_offline(struct cgroup_subsys_state *css)
cgroup_freezer.c:159:static void freezer_css_free(struct cgroup_subsys_state *css)
cgroup_freezer.c:219:static void freezer_fork(struct task_struct *task)
cgroup_freezer.c:257:static void update_if_frozen(struct cgroup_subsys_state *css)
cgroup_freezer.c:322:static void freeze_cgroup(struct freezer *freezer)
cgroup_freezer.c:333:static void unfreeze_cgroup(struct freezer *freezer)
cgroup_freezer.c:389:static void freezer_change_state(struct freezer *freezer, bool freeze)
compat.c:55:static int compat_get_timex(struct timex *txc, struct compat_timex __user *utp)
compat.c:85:static int compat_put_timex(struct compat_timex __user *utp, struct timex *txc)
compat.c:148:int get_compat_timeval(struct timeval *tv, const struct compat_timeval __user *ctv)
compat.c:156:int put_compat_timeval(const struct timeval *tv, struct compat_timeval __user *ctv)
compat.c:164:int get_compat_timespec(struct timespec *ts, const struct compat_timespec __user *cts)
compat.c:172:int put_compat_timespec(const struct timespec *ts, struct compat_timespec __user *cts)
compat.c:180:int compat_get_timeval(struct timeval *tv, const void __user *utv)
compat.c:189:int compat_put_timeval(const struct timeval *tv, void __user *utv)
compat.c:198:int compat_get_timespec(struct timespec *ts, const void __user *uts)
compat.c:207:int compat_put_timespec(const struct timespec *ts, void __user *uts)
compat.c:216:static long compat_nanosleep_restart(struct restart_block *restart)
compat.c:326:static compat_clock_t clock_t_to_compat_clock_t(clock_t x)
compat.c:379:static inline void compat_sig_setmask(sigset_t *blocked, compat_sigset_word set)
compat.c:494:int put_compat_rusage(const struct rusage *r, struct compat_rusage __user *ru)
compat.c:797:static long compat_clock_nanosleep_restart(struct restart_block *restart)
context_tracking.c:32:void context_tracking_cpu_set(int cpu)
context_tracking.c:49:void context_tracking_user_enter(void)
context_tracking.c:159:void context_tracking_user_exit(void)
cpu.c:33:void cpu_maps_update_begin(void)
cpu.c:38:void cpu_maps_update_done(void)
cpu.c:66:void get_online_cpus(void)
cpu.c:78:void put_online_cpus(void)
cpu.c:116:void cpu_hotplug_begin(void)
cpu.c:130:void cpu_hotplug_done(void)
cpu.c:143:void cpu_hotplug_disable(void)
cpu.c:150:void cpu_hotplug_enable(void)
cpu.c:180:static int cpu_notify(unsigned long val, void *v)
cpu.c:187:static void cpu_notify_nofail(unsigned long val, void *v)
cpu.c:213:void clear_tasks_mm_cpumask(int cpu)
cpu.c:242:static inline void check_for_tasks(int cpu)
cpu.c:386:static int _cpu_up(unsigned int cpu, int tasks_frozen)
cpu.c:439:int cpu_up(unsigned int cpu)
cpu.c:475:int disable_nonboot_cpus(void)
cpu.c:615:void notify_cpu_starting(unsigned int cpu)
cpu.c:677:void set_cpu_possible(unsigned int cpu, bool possible)
cpu.c:685:void set_cpu_present(unsigned int cpu, bool present)
cpu.c:693:void set_cpu_online(unsigned int cpu, bool online)
cpu.c:701:void set_cpu_active(unsigned int cpu, bool active)
cpu.c:709:void init_cpu_present(const struct cpumask *src)
cpu.c:714:void init_cpu_possible(const struct cpumask *src)
cpu.c:719:void init_cpu_online(const struct cpumask *src)
cpu/idle.c:16:void cpu_idle_poll_ctrl(bool enable)
cpu/idle.c:42:static inline int cpu_idle_poll(void)
cpu/idle.c:68:static void cpu_idle_loop(void)
cpu/idle.c:121:void cpu_startup_entry(enum cpuhp_state state)
cpu_pm.c:28:static int cpu_pm_notify(enum cpu_pm_event event, int nr_to_call, int *nr_calls)
cpu_pm.c:48:int cpu_pm_register_notifier(struct notifier_block *nb)
cpu_pm.c:70:int cpu_pm_unregister_notifier(struct notifier_block *nb)
cpu_pm.c:98:int cpu_pm_enter(void)
cpu_pm.c:129:int cpu_pm_exit(void)
cpu_pm.c:157:int cpu_cluster_pm_enter(void)
cpu_pm.c:191:int cpu_cluster_pm_exit(void)
cpu_pm.c:204:static int cpu_pm_suspend(void)
cpu_pm.c:216:static void cpu_pm_resume(void)
cpu_pm.c:227:static int cpu_pm_init(void)
cpuset.c:131:static inline bool task_has_mempolicy(struct task_struct *task)
cpuset.c:136:static inline bool task_has_mempolicy(struct task_struct *task)
cpuset.c:156:static inline bool is_cpuset_online(const struct cpuset *cs)
cpuset.c:161:static inline int is_cpu_exclusive(const struct cpuset *cs)
cpuset.c:166:static inline int is_mem_exclusive(const struct cpuset *cs)
cpuset.c:171:static inline int is_mem_hardwall(const struct cpuset *cs)
cpuset.c:176:static inline int is_sched_load_balance(const struct cpuset *cs)
cpuset.c:181:static inline int is_memory_migrate(const struct cpuset *cs)
cpuset.c:186:static inline int is_spread_page(const struct cpuset *cs)
cpuset.c:191:static inline int is_spread_slab(const struct cpuset *cs)
cpuset.c:313:static void guarantee_online_cpus(struct cpuset *cs, struct cpumask *pmask)
cpuset.c:331:static void guarantee_online_mems(struct cpuset *cs, nodemask_t *pmask)
cpuset.c:364:static int is_cpuset_subset(const struct cpuset *p, const struct cpuset *q)
cpuset.c:397:static void free_trial_cpuset(struct cpuset *trial)
cpuset.c:423:static int validate_change(struct cpuset *cur, struct cpuset *trial)
cpuset.c:490:static int cpusets_overlap(struct cpuset *a, struct cpuset *b)
cpuset.c:754:static void rebuild_sched_domains_locked(void)
cpuset.c:780:static void rebuild_sched_domains_locked(void)
cpuset.c:785:void rebuild_sched_domains(void)
cpuset.c:842:static void cpuset_change_cpumask(struct task_struct *tsk, void *data)
cpuset.c:863:static void update_tasks_cpumask(struct cpuset *cs, struct ptr_heap *heap)
cpuset.c:1065:static void cpuset_change_nodemask(struct task_struct *p, void *data)
cpuset.c:1096:static void update_tasks_nodemask(struct cpuset *cs, struct ptr_heap *heap)
cpuset.c:1241:int current_cpuset_is_being_rebound(void)
cpuset.c:1246:static int update_relax_domain_level(struct cpuset *cs, s64 val)
cpuset.c:1273:static void cpuset_change_flag(struct task_struct *tsk, void *data)
cpuset.c:1293:static void update_tasks_flags(struct cpuset *cs, struct ptr_heap *heap)
cpuset.c:1405:static void fmeter_init(struct fmeter *fmp)
cpuset.c:1414:static void fmeter_update(struct fmeter *fmp)
cpuset.c:1432:static void fmeter_markevent(struct fmeter *fmp)
cpuset.c:1441:static int fmeter_getrate(struct fmeter *fmp)
cpuset.c:1739:static size_t cpuset_sprintf_cpulist(char *page, struct cpuset *cs)
cpuset.c:1750:static size_t cpuset_sprintf_memlist(char *page, struct cpuset *cs)
cpuset.c:1796:static u64 cpuset_read_u64(struct cgroup_subsys_state *css, struct cftype *cft)
cpuset.c:1827:static s64 cpuset_read_s64(struct cgroup_subsys_state *css, struct cftype *cft)
cpuset.c:1969:static int cpuset_css_online(struct cgroup_subsys_state *css)
cpuset.c:2029:static void cpuset_css_offline(struct cgroup_subsys_state *css)
cpuset.c:2044:static void cpuset_css_free(struct cgroup_subsys_state *css)
cpuset.c:2104:static void remove_tasks_in_empty_cpuset(struct cpuset *cs)
cpuset.c:2133:static void cpuset_hotplug_update_tasks(struct cpuset *cs)
cpuset.c:2217:static void cpuset_hotplug_workfn(struct work_struct *work)
cpuset.c:2274:void cpuset_update_active_cpus(bool cpu_online)
cpuset.c:2332:void cpuset_cpus_allowed(struct task_struct *tsk, struct cpumask *pmask)
cpuset.c:2344:void cpuset_cpus_allowed_fallback(struct task_struct *tsk)
cpuset.c:2372:void cpuset_init_current_mems_allowed(void)
cpuset.c:2387:nodemask_t cpuset_mems_allowed(struct task_struct *tsk)
cpuset.c:2408:int cpuset_nodemask_valid_mems_allowed(nodemask_t *nodemask)
cpuset.c:2487:int __cpuset_node_allowed_softwall(int node, gfp_t gfp_mask)
cpuset.c:2544:int __cpuset_node_allowed_hardwall(int node, gfp_t gfp_mask)
cpuset.c:2586:static int cpuset_spread_node(int *rotor)
cpuset.c:2597:int cpuset_mem_spread_node(void)
cpuset.c:2606:int cpuset_slab_spread_node(void)
cpuset.c:2644:void cpuset_print_task_mems_allowed(struct task_struct *tsk)
cpuset.c:2690:void __cpuset_memory_pressure_bump(void)
cpuset.c:2707:int proc_cpuset_show(struct seq_file *m, void *unused_v)
cpuset.c:2744:void cpuset_task_status_allowed(struct seq_file *m, struct task_struct *task)
cred.c:59:static inline void set_cred_subscribers(struct cred *cred, int n)
cred.c:66:static inline int read_cred_subscribers(const struct cred *cred)
cred.c:75:static inline void alter_cred_subscribers(const struct cred *_cred, int n)
cred.c:87:static void put_cred_rcu(struct rcu_head *rcu)
cred.c:126:void __put_cred(struct cred *cred)
cred.c:148:void exit_creds(struct task_struct *tsk)
cred.c:198:struct cred *cred_alloc_blank(void)
cred.c:235:struct cred *prepare_creds(void)
cred.c:284:struct cred *prepare_exec_creds(void)
cred.c:314:int copy_creds(struct task_struct *p, unsigned long clone_flags)
cred.c:375:static bool cred_cap_issubset(const struct cred *set, const struct cred *subset)
cred.c:414:int commit_creds(struct cred *new)
cred.c:491:void abort_creds(struct cred *new)
cred.c:541:void revert_creds(const struct cred *old)
cred.c:586:struct cred *prepare_kernel_cred(struct task_struct *daemon)
cred.c:644:int set_security_override(struct cred *new, u32 secid)
cred.c:660:int set_security_override_from_ctx(struct cred *new, const char *secctx)
cred.c:682:int set_create_files_as(struct cred *new, struct inode *inode)
cred.c:692:bool creds_are_invalid(const struct cred *cred)
cred.c:753:void __invalid_creds(const struct cred *cred, const char *file, unsigned line)
cred.c:797:void validate_creds_for_do_exit(struct task_struct *tsk)
debug/debug_core.h:80:static inline int kdb_stub(struct kgdb_state *ks)
debug/debug_core.c:222:static void kgdb_flush_swbreak_addr(unsigned long addr)
debug/debug_core.c:238:int dbg_activate_sw_breakpoints(void)
debug/debug_core.c:262:int dbg_set_sw_break(unsigned long addr)
debug/debug_core.c:303:int dbg_deactivate_sw_breakpoints(void)
debug/debug_core.c:325:int dbg_remove_sw_break(unsigned long addr)
debug/debug_core.c:339:int kgdb_isremovedbreak(unsigned long addr)
debug/debug_core.c:351:int dbg_remove_all_break(void)
debug/debug_core.c:384:static int kgdb_io_ready(int print_wait)
debug/debug_core.c:403:static int kgdb_reenter_check(struct kgdb_state *ks)
debug/debug_core.c:450:static void dbg_touch_watchdogs(void)
debug/debug_core.c:720:int kgdb_nmicallback(int cpu, void *regs)
debug/debug_core.c:739:int kgdb_nmicallin(int cpu, int trapnr, void *regs, atomic_t *send_ready)
debug/debug_core.c:786:static void sysrq_handle_dbg(int key)
debug/debug_core.c:865:static void kgdb_register_callbacks(void)
debug/debug_core.c:886:static void kgdb_unregister_callbacks(void)
debug/debug_core.c:916:static void kgdb_tasklet_bpt(unsigned long ing)
debug/debug_core.c:924:void kgdb_schedule_breakpoint(void)
debug/debug_core.c:935:static void kgdb_initial_breakpoint(void)
debug/debug_core.c:949:int kgdb_register_io_module(struct kgdb_io *new_dbg_io_ops)
debug/debug_core.c:994:void kgdb_unregister_io_module(struct kgdb_io *old_dbg_io_ops)
debug/debug_core.c:1017:int dbg_io_get_char(void)
debug/debug_core.c:1037:void kgdb_breakpoint(void)
debug/kdb/kdb_bp.c:27:static void kdb_setsinglestep(struct pt_regs *regs)
debug/kdb/kdb_bp.c:40:static char *kdb_bptype(kdb_bp_t *bp)
debug/kdb/kdb_bp.c:48:static int kdb_parsebp(int argc, const char **argv, int *nextargp, kdb_bp_t *bp)
debug/kdb/kdb_bp.c:92:static int _kdb_bp_remove(kdb_bp_t *bp)
debug/kdb/kdb_bp.c:108:static void kdb_handle_bp(struct pt_regs *regs, kdb_bp_t *bp)
debug/kdb/kdb_bp.c:125:static int _kdb_bp_install(struct pt_regs *regs, kdb_bp_t *bp)
debug/kdb/kdb_bp.c:176:void kdb_bp_install(struct pt_regs *regs)
debug/kdb/kdb_bp.c:207:void kdb_bp_remove(void)
debug/kdb/kdb_bp.c:240:static void kdb_printbp(kdb_bp_t *bp, int i)
debug/kdb/kdb_bp.c:279:static int kdb_bp(int argc, const char **argv)
debug/kdb/kdb_bp.c:379:static int kdb_bc(int argc, const char **argv)
debug/kdb/kdb_bp.c:508:static int kdb_ss(int argc, const char **argv)
debug/kdb/kdb_main.c:180:struct task_struct *kdb_curr_task(int cpu)
debug/kdb/kdb_main.c:199:char *kdbgetenv(const char *match)
debug/kdb/kdb_main.c:237:static char *kdballocenv(size_t bytes)
debug/kdb/kdb_main.c:261:static int kdbgetulenv(const char *match, unsigned long *value)
debug/kdb/kdb_main.c:286:int kdbgetintenv(const char *match, int *value)
debug/kdb/kdb_main.c:307:int kdbgetularg(const char *arg, unsigned long *value)
debug/kdb/kdb_main.c:329:int kdbgetu64arg(const char *arg, u64 *value)
debug/kdb/kdb_main.c:352:int kdb_set(int argc, const char **argv)
debug/kdb/kdb_main.c:429:static int kdb_check_regs(void)
debug/kdb/kdb_main.c:589:static void kdb_cmderror(int diag)
debug/kdb/kdb_main.c:635:static int kdb_defcmd2(const char *cmdstr, const char *argv0)
debug/kdb/kdb_main.c:663:static int kdb_defcmd(int argc, const char **argv)
debug/kdb/kdb_main.c:739:static int kdb_exec_defcmd(int argc, const char **argv)
debug/kdb/kdb_main.c:778:static void parse_grep(const char *str)
debug/kdb/kdb_main.c:867:int kdb_parse(const char *cmdstr)
debug/kdb/kdb_main.c:1054:static int handle_ctrl_cmd(char *cmd)
debug/kdb/kdb_main.c:1081:static int kdb_reboot(int argc, const char **argv)
debug/kdb/kdb_main.c:1091:static void kdb_dumpregs(struct pt_regs *regs)
debug/kdb/kdb_main.c:1102:void kdb_set_current_task(struct task_struct *p)
debug/kdb/kdb_main.c:1312:void kdb_print_state(const char *text, int value)
debug/kdb/kdb_main.c:1411:static int kdb_mdr(unsigned long addr, unsigned int count)
debug/kdb/kdb_main.c:1514:static int kdb_md(int argc, const char **argv)
debug/kdb/kdb_main.c:1697:static int kdb_mm(int argc, const char **argv)
debug/kdb/kdb_main.c:1740:static int kdb_go(int argc, const char **argv)
debug/kdb/kdb_main.c:1785:static int kdb_rd(int argc, const char **argv)
debug/kdb/kdb_main.c:1855:static int kdb_rm(int argc, const char **argv)
debug/kdb/kdb_main.c:1922:static int kdb_sr(int argc, const char **argv)
debug/kdb/kdb_main.c:1943:static int kdb_ef(int argc, const char **argv)
debug/kdb/kdb_main.c:1967:static int kdb_lsmod(int argc, const char **argv)
debug/kdb/kdb_main.c:2014:static int kdb_env(int argc, const char **argv)
debug/kdb/kdb_main.c:2035:static int kdb_dmesg(int argc, const char **argv)
debug/kdb/kdb_main.c:2122:static int kdb_disable_nmi(int argc, const char *argv[])
debug/kdb/kdb_main.c:2131:static int kdb_param_enable_nmi(const char *val, const struct kernel_param *kp)
debug/kdb/kdb_main.c:2150:static void kdb_cpu_status(void)
debug/kdb/kdb_main.c:2193:static int kdb_cpu(int argc, const char **argv)
debug/kdb/kdb_main.c:2227:void kdb_ps_suppressed(void)
debug/kdb/kdb_main.c:2261:void kdb_ps1(const struct task_struct *p)
debug/kdb/kdb_main.c:2288:static int kdb_ps(int argc, const char **argv)
debug/kdb/kdb_main.c:2324:static int kdb_pid(int argc, const char **argv)
debug/kdb/kdb_main.c:2356:static int kdb_kgdb(int argc, const char **argv)
debug/kdb/kdb_main.c:2364:static int kdb_help(int argc, const char **argv)
debug/kdb/kdb_main.c:2389:static int kdb_kill(int argc, const char **argv)
debug/kdb/kdb_main.c:2441:static void kdb_gmtime(struct timespec *tv, struct kdb_tm *tm)
debug/kdb/kdb_main.c:2472:static void kdb_sysinfo(struct sysinfo *val)
debug/kdb/kdb_main.c:2490:static int kdb_summary(int argc, const char **argv)
debug/kdb/kdb_main.c:2545:static int kdb_per_cpu(int argc, const char **argv)
debug/kdb/kdb_main.c:2615:static int kdb_grep_help(int argc, const char **argv)
debug/kdb/kdb_main.c:2738:int kdb_unregister(char *cmd)
debug/kdb/kdb_keyboard.c:35:int kdb_get_kbd_char(void)
debug/kdb/kdb_keyboard.c:199:void kdb_kbd_cleanup_state(void)
debug/kdb/kdb_debugger.c:37:int kdb_common_init_state(struct kgdb_state *ks)
debug/kdb/kdb_debugger.c:45:int kdb_common_deinit_state(void)
debug/kdb/kdb_debugger.c:53:int kdb_stub(struct kgdb_state *ks)
debug/kdb/kdb_debugger.c:179:void kdb_gdb_state_pass(char *buf)
debug/kdb/kdb_bt.c:21:static void kdb_show_stack(struct task_struct *p, void *addr)
debug/kdb/kdb_support.c:40:int kdbgetsymval(const char *symname, kdb_symtab_t *symtab)
debug/kdb/kdb_support.c:82:int kdbnearsym(unsigned long addr, kdb_symtab_t *symtab)
debug/kdb/kdb_support.c:161:void kdbnearsym_cleanup(void)
debug/kdb/kdb_support.c:186:int kallsyms_symbol_complete(char *prefix_name, int max_len)
debug/kdb/kdb_support.c:228:int kallsyms_symbol_next(char *prefix_name, int flag)
debug/kdb/kdb_support.c:307:char *kdb_strdup(const char *str, gfp_t type)
debug/kdb/kdb_support.c:326:int kdb_getarea_size(void *res, unsigned long addr, size_t size)
debug/kdb/kdb_support.c:351:int kdb_putarea_size(unsigned long addr, void *res, size_t size)
debug/kdb/kdb_support.c:377:static int kdb_getphys(void *res, unsigned long addr, size_t size)
debug/kdb/kdb_support.c:403:int kdb_getphysword(unsigned long *word, unsigned long addr, size_t size)
debug/kdb/kdb_support.c:453:int kdb_getword(unsigned long *word, unsigned long addr, size_t size)
debug/kdb/kdb_support.c:502:int kdb_putword(unsigned long addr, unsigned long word, size_t size)
debug/kdb/kdb_support.c:561:unsigned long kdb_task_state_string(const char *s)
debug/kdb/kdb_support.c:621:char kdb_task_state_char (const struct task_struct *p)
debug/kdb/kdb_support.c:661:unsigned long kdb_task_state(const struct task_struct *p, unsigned long mask)
debug/kdb/kdb_support.c:674:void kdb_print_nameval(const char *name, unsigned long val)
debug/kdb/kdb_support.c:722:static int get_dap_lock(void)
debug/kdb/kdb_support.c:745:void *debug_kmalloc(size_t size, gfp_t flags)
debug/kdb/kdb_support.c:803:void debug_kfree(void *p)
debug/kdb/kdb_support.c:862:void debug_kusage(void)
debug/kdb/kdb_support.c:917:void kdb_save_flags(void)
debug/kdb/kdb_support.c:923:void kdb_restore_flags(void)
debug/kdb/kdb_io.c:34:static int kgdb_transition_check(char *buffer)
debug/kdb/kdb_io.c:51:static int kdb_read_get_key(char *buffer, size_t bufsize)
debug/kdb/kdb_io.c:203:static char *kdb_read(char *buffer, size_t bufsize)
debug/kdb/kdb_io.c:442:char *kdb_getstr(char *buffer, size_t bufsize, char *prompt)
debug/kdb/kdb_io.c:468:static void kdb_input_flush(void)
debug/kdb/kdb_io.c:521:static int kdb_search_string(char *searched, char *searchfor)
debug/kdb/kdb_io.c:551:int vkdb_printf(const char *fmt, va_list ap)
debug/kdb/kdb_io.c:841:int kdb_printf(const char *fmt, ...)
debug/gdbstub.c:59:static int gdbstub_read_wait(void)
debug/gdbstub.c:81:static int gdbstub_read_wait(void)
debug/gdbstub.c:90:static void get_packet(char *buffer)
debug/gdbstub.c:144:static void put_packet(char *buffer)
debug/gdbstub.c:197:void gdbstub_msg_write(const char *s, int len)
debug/gdbstub.c:238:char *kgdb_mem2hex(char *mem, char *buf, int count)
debug/gdbstub.c:267:int kgdb_hex2mem(char *buf, char *mem, int count)
debug/gdbstub.c:292:int kgdb_hex2long(char **ptr, unsigned long *long_val)
debug/gdbstub.c:325:static int kgdb_ebin2mem(char *buf, char *mem, int count)
debug/gdbstub.c:341:void pt_regs_to_gdb_regs(unsigned long *gdb_regs, struct pt_regs *regs)
debug/gdbstub.c:353:void gdb_regs_to_pt_regs(unsigned long *gdb_regs, struct pt_regs *regs)
debug/gdbstub.c:367:static int write_mem_msg(int binary)
debug/gdbstub.c:390:static void error_packet(char *pkt, int error)
debug/gdbstub.c:407:static char *pack_threadid(char *pkt, unsigned char *id)
debug/gdbstub.c:427:static void int_to_threadref(unsigned char *id, int value)
debug/gdbstub.c:464:static inline int shadow_pid(int realpid)
debug/gdbstub.c:479:static void gdb_cmd_status(struct kgdb_state *ks)
debug/gdbstub.c:493:static void gdb_get_regs_helper(struct kgdb_state *ks)
debug/gdbstub.c:537:static void gdb_cmd_getregs(struct kgdb_state *ks)
debug/gdbstub.c:544:static void gdb_cmd_setregs(struct kgdb_state *ks)
debug/gdbstub.c:557:static void gdb_cmd_memread(struct kgdb_state *ks)
debug/gdbstub.c:575:static void gdb_cmd_memwrite(struct kgdb_state *ks)
debug/gdbstub.c:586:static char *gdb_hex_reg_helper(int regnum, char *out)
debug/gdbstub.c:598:static void gdb_cmd_reg_get(struct kgdb_state *ks)
debug/gdbstub.c:613:static void gdb_cmd_reg_set(struct kgdb_state *ks)
debug/gdbstub.c:640:static void gdb_cmd_binwrite(struct kgdb_state *ks)
debug/gdbstub.c:651:static void gdb_cmd_detachkill(struct kgdb_state *ks)
debug/gdbstub.c:676:static int gdb_cmd_reboot(struct kgdb_state *ks)
debug/gdbstub.c:697:static void gdb_cmd_query(struct kgdb_state *ks)
debug/gdbstub.c:798:static void gdb_cmd_task(struct kgdb_state *ks)
debug/gdbstub.c:835:static void gdb_cmd_thread(struct kgdb_state *ks)
debug/gdbstub.c:849:static void gdb_cmd_break(struct kgdb_state *ks)
debug/gdbstub.c:911:static int gdb_cmd_exception_pass(struct kgdb_state *ks)
debug/gdbstub.c:943:int gdb_serial_stub(struct kgdb_state *ks)
debug/gdbstub.c:1081:int gdbstub_state(struct kgdb_state *ks, char *cmd)
debug/gdbstub.c:1113:void gdbstub_exit(int status)
delayacct.c:35:void delayacct_init(void)
delayacct.c:41:void __delayacct_tsk_init(struct task_struct *tsk)
delayacct.c:53:static inline void delayacct_start(struct timespec *start)
delayacct.c:82:void __delayacct_blkio_start(void)
delayacct.c:87:void __delayacct_blkio_end(void)
delayacct.c:102:int __delayacct_add_tsk(struct taskstats *d, struct task_struct *tsk)
delayacct.c:158:__u64 __delayacct_blkio_ticks(struct task_struct *tsk)
delayacct.c:170:void __delayacct_freepages_start(void)
delayacct.c:175:void __delayacct_freepages_end(void)
dma.c:69:int request_dma(unsigned int dmanr, const char * device_id)
dma.c:87:void free_dma(unsigned int dmanr)
dma.c:103:int request_dma(unsigned int dmanr, const char *device_id)
dma.c:108:void free_dma(unsigned int dmanr)
dma.c:117:static int proc_dma_show(struct seq_file *m, void *v)
dma.c:130:static int proc_dma_show(struct seq_file *m, void *v)
dma.c:137:static int proc_dma_open(struct inode *inode, struct file *file)
events/callchain.c:37:static void release_callchain_buffers_rcu(struct rcu_head *head)
events/callchain.c:50:static void release_callchain_buffers(void)
events/callchain.c:59:static int alloc_callchain_buffers(void)
events/callchain.c:97:int get_callchain_buffers(void)
events/callchain.c:127:void put_callchain_buffers(void)
events/uprobes.c:96:static bool valid_vma(struct vm_area_struct *vma, bool is_register)
events/uprobes.c:111:static loff_t vaddr_to_offset(struct vm_area_struct *vma, unsigned long vaddr)
events/uprobes.c:200:static void copy_from_page(struct page *page, unsigned long vaddr, void *dst, int len)
events/uprobes.c:207:static void copy_to_page(struct page *page, unsigned long vaddr, const void *src, int len)
events/uprobes.c:214:static int verify_opcode(struct page *page, unsigned long vaddr, uprobe_opcode_t *new_opcode)
events/uprobes.c:336:static int match_uprobe(struct uprobe *l, struct uprobe *r)
events/uprobes.c:442:static void put_uprobe(struct uprobe *uprobe)
events/uprobes.c:476:static void consumer_add(struct uprobe *uprobe, struct uprobe_consumer *uc)
events/uprobes.c:489:static bool consumer_del(struct uprobe *uprobe, struct uprobe_consumer *uc)
events/uprobes.c:528:static int copy_insn(struct uprobe *uprobe, struct file *filp)
events/uprobes.c:650:static inline bool uprobe_is_active(struct uprobe *uprobe)
events/uprobes.c:659:static void delete_uprobe(struct uprobe *uprobe)
events/uprobes.c:809:static int __uprobe_register(struct uprobe *uprobe, struct uprobe_consumer *uc)
events/uprobes.c:815:static void __uprobe_unregister(struct uprobe *uprobe, struct uprobe_consumer *uc)
events/uprobes.c:845:int uprobe_register(struct inode *inode, loff_t offset, struct uprobe_consumer *uc)
events/uprobes.c:917:void uprobe_unregister(struct inode *inode, loff_t offset, struct uprobe_consumer *uc)
events/uprobes.c:932:static int unapply_uprobe(struct uprobe *uprobe, struct mm_struct *mm)
events/uprobes.c:1027:int uprobe_mmap(struct vm_area_struct *vma)
events/uprobes.c:1082:void uprobe_munmap(struct vm_area_struct *vma, unsigned long start, unsigned long end)
events/uprobes.c:1099:static int xol_add_vma(struct mm_struct *mm, struct xol_area *area)
events/uprobes.c:1189:void uprobe_clear_state(struct mm_struct *mm)
events/uprobes.c:1201:void uprobe_start_dup_mmap(void)
events/uprobes.c:1206:void uprobe_end_dup_mmap(void)
events/uprobes.c:1211:void uprobe_dup_mmap(struct mm_struct *oldmm, struct mm_struct *newmm)
events/uprobes.c:1282:static void xol_free_insn_slot(struct task_struct *tsk)
events/uprobes.c:1330:void uprobe_free_utask(struct task_struct *t)
events/uprobes.c:1370:static int dup_utask(struct task_struct *t, struct uprobe_task *o_utask)
events/uprobes.c:1398:static void uprobe_warn(struct task_struct *t, const char *msg)
events/uprobes.c:1404:static void dup_xol_work(struct callback_head *work)
events/uprobes.c:1418:void uprobe_copy_process(struct task_struct *t, unsigned long flags)
events/uprobes.c:1473:static void prepare_uretprobe(struct uprobe *uprobe, struct pt_regs *regs)
events/uprobes.c:1580:bool uprobe_deny_signal(void)
events/uprobes.c:1609:static bool can_skip_sstep(struct uprobe *uprobe, struct pt_regs *regs)
events/uprobes.c:1619:static void mmf_recalc_uprobes(struct mm_struct *mm)
events/uprobes.c:1639:static int is_trap_at_addr(struct mm_struct *mm, unsigned long vaddr)
events/uprobes.c:1693:static void handler_chain(struct uprobe *uprobe, struct pt_regs *regs)
events/uprobes.c:1739:static bool handle_trampoline(struct pt_regs *regs)
events/uprobes.c:1785:static void handle_swbp(struct pt_regs *regs)
events/uprobes.c:1847:static void handle_singlestep(struct uprobe_task *utask, struct pt_regs *regs)
events/uprobes.c:1880:void uprobe_notify_resume(struct pt_regs *regs)
events/uprobes.c:1897:int uprobe_pre_sstep_notifier(struct pt_regs *regs)
events/uprobes.c:1914:int uprobe_post_sstep_notifier(struct pt_regs *regs)
events/core.c:54:static void remote_function(void *data)
events/core.c:181:void update_perf_cpu_limits(void)
events/core.c:233:void perf_sample_event_took(u64 sample_len_ns)
events/core.c:293:static inline u64 perf_clock(void)
events/core.c:372:static inline bool perf_tryget_cgroup(struct perf_event *event)
events/core.c:377:static inline void perf_put_cgroup(struct perf_event *event)
events/core.c:382:static inline void perf_detach_cgroup(struct perf_event *event)
events/core.c:388:static inline int is_cgroup_event(struct perf_event *event)
events/core.c:393:static inline u64 perf_cgroup_event_time(struct perf_event *event)
events/core.c:401:static inline void __update_cgrp_time(struct perf_cgroup *cgrp)
events/core.c:414:static inline void update_cgrp_time_from_cpuctx(struct perf_cpu_context *cpuctx)
events/core.c:421:static inline void update_cgrp_time_from_event(struct perf_event *event)
events/core.c:469:void perf_cgroup_switch(struct task_struct *task, int mode)
events/core.c:677:static inline void perf_detach_cgroup(struct perf_event *event)
events/core.c:680:static inline int is_cgroup_event(struct perf_event *event)
events/core.c:685:static inline u64 perf_cgroup_event_cgrp_time(struct perf_event *event)
events/core.c:690:static inline void update_cgrp_time_from_event(struct perf_event *event)
events/core.c:694:static inline void update_cgrp_time_from_cpuctx(struct perf_cpu_context *cpuctx)
events/core.c:731:static inline u64 perf_cgroup_event_time(struct perf_event *event)
events/core.c:780:void perf_cpu_hrtimer_cancel(int cpu)
events/core.c:807:static void __perf_cpu_hrtimer_init(struct perf_cpu_context *cpuctx, int cpu)
events/core.c:831:static void perf_cpu_hrtimer_restart(struct perf_cpu_context *cpuctx)
events/core.c:848:void perf_pmu_disable(struct pmu *pmu)
events/core.c:855:void perf_pmu_enable(struct pmu *pmu)
events/core.c:869:static void perf_pmu_rotate_start(struct pmu *pmu)
events/core.c:880:static void get_ctx(struct perf_event_context *ctx)
events/core.c:885:static void put_ctx(struct perf_event_context *ctx)
events/core.c:896:static void unclone_ctx(struct perf_event_context *ctx)
events/core.c:905:static u32 perf_event_pid(struct perf_event *event, struct task_struct *p)
events/core.c:916:static u32 perf_event_tid(struct perf_event *event, struct task_struct *p)
events/core.c:931:static u64 primary_event_id(struct perf_event *event)
events/core.c:1012:static void perf_unpin_context(struct perf_event_context *ctx)
events/core.c:1024:static void update_context_time(struct perf_event_context *ctx)
events/core.c:1032:static u64 perf_event_time(struct perf_event *event)
events/core.c:1046:static void update_event_times(struct perf_event *event)
events/core.c:1085:static void update_group_times(struct perf_event *leader)
events/core.c:1147:static inline void perf_event__state_init(struct perf_event *event)
events/core.c:1157:static void perf_event__read_size(struct perf_event *event)
events/core.c:1181:static void perf_event__header_size(struct perf_event *event)
events/core.c:1213:static void perf_event__id_header_size(struct perf_event *event)
events/core.c:1240:static void perf_group_attach(struct perf_event *event)
events/core.c:1323:static void perf_group_detach(struct perf_event *event)
events/core.c:1447:static int __perf_remove_from_context(void *info)
events/core.c:1479:static void perf_remove_from_context(struct perf_event *event)
events/core.c:1520:int __perf_event_disable(void *info)
events/core.c:1571:void perf_event_disable(struct perf_event *event)
events/core.c:1846:static int  __perf_install_in_context(void *info)
events/core.c:1964:static void __perf_event_mark_enabled(struct perf_event *event)
events/core.c:1980:static int __perf_event_enable(void *info)
events/core.c:2065:void perf_event_enable(struct perf_event *event)
events/core.c:2123:int perf_event_refresh(struct perf_event *event, int refresh)
events/core.c:2372:static void task_ctx_sched_out(struct perf_event_context *ctx)
events/core.c:2621:static u64 perf_calculate_period(struct perf_event *event, u64 nsec, u64 count)
events/core.c:2697:static void perf_adjust_period(struct perf_event *event, u64 nsec, u64 count, bool disable)
events/core.c:2801:static void rotate_ctx(struct perf_event_context *ctx)
events/core.c:2816:static int perf_rotate_context(struct perf_cpu_context *cpuctx)
events/core.c:2860:bool perf_event_can_stop_tick(void)
events/core.c:2870:void perf_event_task_tick(void)
events/core.c:2911:static void perf_event_enable_on_exec(struct perf_event_context *ctx)
events/core.c:2959:static void __perf_event_read(void *info)
events/core.c:2986:static inline u64 perf_event_count(struct perf_event *event)
events/core.c:2991:static u64 perf_event_read(struct perf_event *event)
events/core.c:3024:static void __perf_event_init_context(struct perf_event_context *ctx)
events/core.c:3166:static void free_event_rcu(struct rcu_head *head)
events/core.c:3180:static void unaccount_event_cpu(struct perf_event *event, int cpu)
events/core.c:3193:static void unaccount_event(struct perf_event *event)
events/core.c:3216:static void __free_event(struct perf_event *event)
events/core.c:3231:static void free_event(struct perf_event *event)
events/core.c:3263:int perf_event_release_kernel(struct perf_event *event)
events/core.c:3296:static void put_event(struct perf_event *event)
events/core.c:3339:static int perf_release(struct inode *inode, struct file *file)
events/core.c:3345:u64 perf_event_read_value(struct perf_event *event, u64 *enabled, u64 *running)
events/core.c:3500:static void perf_event_reset(struct perf_event *event)
events/core.c:3542:static int perf_event_period(struct perf_event *event, u64 __user *arg)
events/core.c:3577:static inline int perf_fget_light(int fd, struct fd *p)
events/core.c:3595:static long perf_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
events/core.c:3660:int perf_event_task_enable(void)
events/core.c:3672:int perf_event_task_disable(void)
events/core.c:3684:static int perf_event_index(struct perf_event *event)
events/core.c:3708:static void perf_event_init_userpage(struct perf_event *event)
events/core.c:3737:void perf_event_update_userpage(struct perf_event *event)
events/core.c:3787:static int perf_mmap_fault(struct vm_area_struct *vma, struct vm_fault *vmf)
events/core.c:3836:static void ring_buffer_detach(struct perf_event *event, struct ring_buffer *rb)
events/core.c:3849:static void ring_buffer_wakeup(struct perf_event *event)
events/core.c:3862:static void rb_free_rcu(struct rcu_head *rcu_head)
events/core.c:3885:static void ring_buffer_put(struct ring_buffer *rb)
events/core.c:3895:static void perf_mmap_open(struct vm_area_struct *vma)
events/core.c:3911:static void perf_mmap_close(struct vm_area_struct *vma)
events/core.c:4003:static int perf_mmap(struct file *file, struct vm_area_struct *vma)
events/core.c:4130:static int perf_fasync(int fd, struct file *filp, int on)
events/core.c:4164:void perf_event_wakeup(struct perf_event *event)
events/core.c:4174:static void perf_pending_event(struct irq_work *entry)
events/core.c:4197:int perf_register_guest_info_callbacks(struct perf_guest_info_callbacks *cbs)
events/core.c:4204:int perf_unregister_guest_info_callbacks(struct perf_guest_info_callbacks *cbs)
events/core.c:4249:static u64 perf_ustack_task_size(struct pt_regs *regs)
events/core.c:4869:static int perf_event_task_match(struct perf_event *event)
events/core.c:4943:void perf_event_fork(struct task_struct *task)
events/core.c:4965:static int perf_event_comm_match(struct perf_event *event)
events/core.c:5003:static void perf_event_comm_event(struct perf_comm_event *comm_event)
events/core.c:5022:void perf_event_comm(struct task_struct *task)
events/core.c:5142:static void perf_event_mmap_event(struct perf_mmap_event *mmap_event)
events/core.c:5231:void perf_event_mmap(struct vm_area_struct *vma)
events/core.c:5267:static void perf_log_throttle(struct perf_event *event, int enable)
events/core.c:5405:u64 perf_swevent_set_period(struct perf_event *event)
events/core.c:5518:static inline u64 swevent_hash(u64 type, u32 event_id)
events/core.c:5589:int perf_swevent_get_recursion_context(void)
events/core.c:5604:void __perf_sw_event(u32 event_id, u64 nr, struct pt_regs *regs, u64 addr)
events/core.c:5622:static void perf_swevent_read(struct perf_event *event)
events/core.c:5626:static int perf_swevent_add(struct perf_event *event, int flags)
events/core.c:5648:static void perf_swevent_del(struct perf_event *event, int flags)
events/core.c:5653:static void perf_swevent_start(struct perf_event *event, int flags)
events/core.c:5658:static void perf_swevent_stop(struct perf_event *event, int flags)
events/core.c:5671:static void swevent_hlist_release(struct swevent_htable *swhash)
events/core.c:5682:static void swevent_hlist_put_cpu(struct perf_event *event, int cpu)
events/core.c:5694:static void swevent_hlist_put(struct perf_event *event)
events/core.c:5702:static int swevent_hlist_get_cpu(struct perf_event *event, int cpu)
events/core.c:5726:static int swevent_hlist_get(struct perf_event *event)
events/core.c:5755:static void sw_perf_event_destroy(struct perf_event *event)
events/core.c:5765:static int perf_swevent_init(struct perf_event *event)
events/core.c:5804:static int perf_swevent_event_idx(struct perf_event *event)
events/core.c:5901:static void tp_perf_event_destroy(struct perf_event *event)
events/core.c:5906:static int perf_tp_event_init(struct perf_event *event)
events/core.c:5941:static inline void perf_tp_register(void)
events/core.c:5946:static int perf_event_set_filter(struct perf_event *event, void __user *arg)
events/core.c:5964:static void perf_event_free_filter(struct perf_event *event)
events/core.c:5971:static inline void perf_tp_register(void)
events/core.c:5975:static int perf_event_set_filter(struct perf_event *event, void __user *arg)
events/core.c:5980:static void perf_event_free_filter(struct perf_event *event)
events/core.c:5987:void perf_bp_event(struct perf_event *bp, void *data)
events/core.c:6033:static void perf_swevent_start_hrtimer(struct perf_event *event)
events/core.c:6055:static void perf_swevent_cancel_hrtimer(struct perf_event *event)
events/core.c:6067:static void perf_swevent_init_hrtimer(struct perf_event *event)
events/core.c:6096:static void cpu_clock_event_update(struct perf_event *event)
events/core.c:6106:static void cpu_clock_event_start(struct perf_event *event, int flags)
events/core.c:6112:static void cpu_clock_event_stop(struct perf_event *event, int flags)
events/core.c:6118:static int cpu_clock_event_add(struct perf_event *event, int flags)
events/core.c:6126:static void cpu_clock_event_del(struct perf_event *event, int flags)
events/core.c:6131:static void cpu_clock_event_read(struct perf_event *event)
events/core.c:6136:static int cpu_clock_event_init(struct perf_event *event)
events/core.c:6172:static void task_clock_event_update(struct perf_event *event, u64 now)
events/core.c:6182:static void task_clock_event_start(struct perf_event *event, int flags)
events/core.c:6188:static void task_clock_event_stop(struct perf_event *event, int flags)
events/core.c:6194:static int task_clock_event_add(struct perf_event *event, int flags)
events/core.c:6202:static void task_clock_event_del(struct perf_event *event, int flags)
events/core.c:6207:static void task_clock_event_read(struct perf_event *event)
events/core.c:6216:static int task_clock_event_init(struct perf_event *event)
events/core.c:6248:static void perf_pmu_nop_void(struct pmu *pmu)
events/core.c:6252:static int perf_pmu_nop_int(struct pmu *pmu)
events/core.c:6257:static void perf_pmu_start_txn(struct pmu *pmu)
events/core.c:6262:static int perf_pmu_commit_txn(struct pmu *pmu)
events/core.c:6268:static void perf_pmu_cancel_txn(struct pmu *pmu)
events/core.c:6273:static int perf_event_idx_default(struct perf_event *event)
events/core.c:6282:static void *find_pmu_context(int ctxn)
events/core.c:6297:static void update_pmu_context(struct pmu *pmu, struct pmu *old_pmu)
events/core.c:6311:static void free_pmu_context(struct pmu *pmu)
events/core.c:6399:static void pmu_dev_release(struct device *dev)
events/core.c:6404:static int pmu_dev_alloc(struct pmu *pmu)
events/core.c:6436:int perf_pmu_register(struct pmu *pmu, const char *name, int type)
events/core.c:6538:void perf_pmu_unregister(struct pmu *pmu)
events/core.c:6559:struct pmu *perf_init_event(struct perf_event *event)
events/core.c:6596:static void account_event_cpu(struct perf_event *event, int cpu)
events/core.c:6609:static void account_event(struct perf_event *event)
events/core.c:7270:void perf_pmu_migrate_context(struct pmu *pmu, int src_cpu, int dst_cpu)
events/core.c:7364:static void perf_event_exit_task_context(struct task_struct *child, int ctxn)
events/core.c:7446:void perf_event_exit_task(struct task_struct *child)
events/core.c:7493:void perf_event_free_task(struct task_struct *task)
events/core.c:7524:void perf_event_delayed_put(struct task_struct *task)
events/core.c:7684:int perf_event_init_context(struct task_struct *child, int ctxn)
events/core.c:7779:int perf_event_init_task(struct task_struct *child)
events/core.c:7808:static void perf_event_init_cpu(int cpu)
events/core.c:7824:static void perf_pmu_rotate_stop(struct pmu *pmu)
events/core.c:7833:static void __perf_event_exit_context(void *__info)
events/core.c:7846:static void perf_event_exit_cpu_context(int cpu)
events/core.c:7863:static void perf_event_exit_cpu(int cpu)
events/core.c:7996:static void perf_cgroup_css_free(struct cgroup_subsys_state *css)
events/core.c:8004:static int __perf_cgroup_move(void *info)
events/internal.h:66:static inline int page_order(struct ring_buffer *rb)
events/internal.h:73:static inline int page_order(struct ring_buffer *rb)
events/internal.h:154:static inline int get_recursion_context(int *recursion)
events/internal.h:176:static inline void put_recursion_context(int *recursion, int rctx)
events/internal.h:183:static inline bool arch_perf_have_user_stack_dump(void)
events/internal.h:190:static inline bool arch_perf_have_user_stack_dump(void)
events/ring_buffer.c:19:static void perf_output_wakeup(struct perf_output_handle *handle)
events/ring_buffer.c:35:static void perf_output_get_handle(struct perf_output_handle *handle)
events/ring_buffer.c:44:static void perf_output_put_handle(struct perf_output_handle *handle)
events/ring_buffer.c:207:void perf_output_end(struct perf_output_handle *handle)
events/ring_buffer.c:253:static void *perf_mmap_alloc_page(int cpu)
events/ring_buffer.c:266:struct ring_buffer *rb_alloc(int nr_pages, long watermark, int cpu, int flags)
events/ring_buffer.c:308:static void perf_mmap_free_page(unsigned long addr)
events/ring_buffer.c:316:void rb_free(struct ring_buffer *rb)
events/ring_buffer.c:327:static int data_page_nr(struct ring_buffer *rb)
events/ring_buffer.c:342:static void perf_mmap_unmark_page(void *addr)
events/ring_buffer.c:349:static void rb_free_work(struct work_struct *work)
events/ring_buffer.c:367:void rb_free(struct ring_buffer *rb)
events/ring_buffer.c:372:struct ring_buffer *rb_alloc(int nr_pages, long watermark, int cpu, int flags)
events/hw_breakpoint.c:117:static int task_bp_pinned(int cpu, struct perf_event *bp, enum bp_type_idx type)
events/hw_breakpoint.c:280:static int __reserve_bp_slot(struct perf_event *bp)
events/hw_breakpoint.c:314:int reserve_bp_slot(struct perf_event *bp)
events/hw_breakpoint.c:327:static void __release_bp_slot(struct perf_event *bp)
events/hw_breakpoint.c:337:void release_bp_slot(struct perf_event *bp)
events/hw_breakpoint.c:352:int dbg_reserve_bp_slot(struct perf_event *bp)
events/hw_breakpoint.c:360:int dbg_release_bp_slot(struct perf_event *bp)
events/hw_breakpoint.c:370:static int validate_hw_breakpoint(struct perf_event *bp)
events/hw_breakpoint.c:392:int register_perf_hw_breakpoint(struct perf_event *bp)
events/hw_breakpoint.c:433:int modify_user_hw_breakpoint(struct perf_event *bp, struct perf_event_attr *attr)
events/hw_breakpoint.c:483:void unregister_hw_breakpoint(struct perf_event *bp)
events/hw_breakpoint.c:536:void unregister_wide_hw_breakpoint(struct perf_event * __percpu *cpu_events)
events/hw_breakpoint.c:553:static void bp_perf_event_destroy(struct perf_event *event)
events/hw_breakpoint.c:558:static int hw_breakpoint_event_init(struct perf_event *bp)
events/hw_breakpoint.c:580:static int hw_breakpoint_add(struct perf_event *bp, int flags)
events/hw_breakpoint.c:593:static void hw_breakpoint_del(struct perf_event *bp, int flags)
events/hw_breakpoint.c:598:static void hw_breakpoint_start(struct perf_event *bp, int flags)
events/hw_breakpoint.c:603:static void hw_breakpoint_stop(struct perf_event *bp, int flags)
events/hw_breakpoint.c:608:static int hw_breakpoint_event_idx(struct perf_event *bp)
exec_domain.c:137:int __set_personality(unsigned int personality)
exec_domain.c:149:static int execdomains_proc_show(struct seq_file *m, void *v)
exec_domain.c:162:static int execdomains_proc_open(struct inode *inode, struct file *file)
exit.c:64:static void __unhash_process(struct task_struct *p, bool group_dead)
exit.c:82:static void __exit_signal(struct task_struct *tsk)
exit.c:160:static void delayed_put_task_struct(struct rcu_head *rhp)
exit.c:170:void release_task(struct task_struct * p)
exit.c:221:struct pid *session_of_pgrp(struct pid *pgrp)
exit.c:243:static int will_become_orphaned_pgrp(struct pid *pgrp, struct task_struct *ignored_task)
exit.c:261:int is_current_pgrp_orphaned(void)
exit.c:272:static bool has_stopped_jobs(struct pid *pgrp)
exit.c:319:int allow_signal(int sig)
exit.c:340:int disallow_signal(int sig)
exit.c:358:void mm_update_next_owner(struct mm_struct *mm)
exit.c:442:static void exit_mm(struct task_struct * tsk)
exit.c:587:static void forget_original_parent(struct task_struct *father)
exit.c:628:static void exit_notify(struct task_struct *tsk, int group_dead)
exit.c:672:static void check_stack_usage(void)
exit.c:696:void do_exit(long code)
exit.c:878:void complete_and_exit(struct completion *comp, long code)
exit.c:950:struct pid *task_pid_type(struct task_struct *task, enum pid_type type)
exit.c:957:static int eligible_pid(struct wait_opts *wo, struct task_struct *p)
exit.c:963:static int eligible_child(struct wait_opts *wo, struct task_struct *p)
exit.c:1013:static int wait_task_zombie(struct wait_opts *wo, struct task_struct *p)
exit.c:1169:static int *task_stopped_code(struct task_struct *p, bool ptrace)
exit.c:1284:static int wait_task_continued(struct wait_opts *wo, struct task_struct *p)
exit.c:1454:static int do_wait_thread(struct wait_opts *wo, struct task_struct *tsk)
exit.c:1467:static int ptrace_do_wait(struct wait_opts *wo, struct task_struct *tsk)
exit.c:1496:void __wake_up_parent(struct task_struct *p, struct task_struct *parent)
exit.c:1502:static long do_wait(struct wait_opts *wo)
extable.c:61:static inline int init_kernel_text(unsigned long addr)
extable.c:69:int core_kernel_text(unsigned long addr)
extable.c:91:int core_kernel_data(unsigned long addr)
extable.c:99:int __kernel_text_address(unsigned long addr)
extable.c:118:int kernel_text_address(unsigned long addr)
extable.c:132:int func_ptr_is_kernel_text(void *ptr)
fork.c:100:int lockdep_tasklist_lock_is_held(void)
fork.c:107:int nr_processes(void)
fork.c:130:static inline void free_task_struct(struct task_struct *tsk)
fork.c:156:static inline void free_thread_info(struct thread_info *ti)
fork.c:169:static void free_thread_info(struct thread_info *ti)
fork.c:174:void thread_info_cache_init(void)
fork.c:201:static void account_kernel_stack(struct thread_info *ti, int account)
fork.c:208:void free_task(struct task_struct *tsk)
fork.c:221:static inline void free_signal_struct(struct signal_struct *sig)
fork.c:228:static inline void put_signal_struct(struct signal_struct *sig)
fork.c:234:void __put_task_struct(struct task_struct *tsk)
fork.c:348:static int dup_mmap(struct mm_struct *mm, struct mm_struct *oldmm)
fork.c:481:static inline int mm_alloc_pgd(struct mm_struct *mm)
fork.c:489:static inline void mm_free_pgd(struct mm_struct *mm)
fork.c:518:static void mm_init_aio(struct mm_struct *mm)
fork.c:552:static void check_mm(struct mm_struct *mm)
fork.c:572:struct mm_struct *mm_alloc(void)
fork.c:590:void __mmdrop(struct mm_struct *mm)
fork.c:604:void mmput(struct mm_struct *mm)
fork.c:627:void set_mm_exe_file(struct mm_struct *mm, struct file *new_exe_file)
fork.c:636:struct file *get_mm_exe_file(struct mm_struct *mm)
fork.c:649:static void dup_mm_exe_file(struct mm_struct *oldmm, struct mm_struct *newmm)
fork.c:665:struct mm_struct *get_task_mm(struct task_struct *task)
fork.c:682:struct mm_struct *mm_access(struct task_struct *task, unsigned int mode)
fork.c:702:static void complete_vfork_done(struct task_struct *tsk)
fork.c:747:void mm_release(struct task_struct *tsk, struct mm_struct *mm)
fork.c:803:struct mm_struct *dup_mm(struct task_struct *tsk)
fork.c:859:static int copy_mm(unsigned long clone_flags, struct task_struct *tsk)
fork.c:902:static int copy_fs(unsigned long clone_flags, struct task_struct *tsk)
fork.c:922:static int copy_files(unsigned long clone_flags, struct task_struct *tsk)
fork.c:949:static int copy_io(unsigned long clone_flags, struct task_struct *tsk)
fork.c:975:static int copy_sighand(unsigned long clone_flags, struct task_struct *tsk)
fork.c:992:void __cleanup_sighand(struct sighand_struct *sighand)
fork.c:1004:static void posix_cpu_timers_init_group(struct signal_struct *sig)
fork.c:1023:static int copy_signal(unsigned long clone_flags, struct task_struct *tsk)
fork.c:1070:static void copy_flags(unsigned long clone_flags, struct task_struct *p)
fork.c:1086:static void rt_mutex_init_task(struct task_struct *p)
fork.c:1096:void mm_init_owner(struct mm_struct *mm, struct task_struct *p)
fork.c:1105:static void posix_cpu_timers_init(struct task_struct *tsk)
fork.c:1538:static inline void init_idle_pids(struct pid_link *links)
fork.c:1548:struct task_struct *fork_idle(int cpu)
fork.c:1693:static void sighand_ctor(void *data)
fork.c:1734:static int check_unshare_flags(unsigned long unshare_flags)
fork.c:1758:static int unshare_fs(unsigned long unshare_flags, struct fs_struct **new_fsp)
fork.c:1779:static int unshare_fd(unsigned long unshare_flags, struct files_struct **new_fdp)
fork.c:1916:int unshare_files(struct files_struct **displaced)
freezer.c:40:bool freezing_slow_path(struct task_struct *p)
freezer.c:56:bool __refrigerator(bool check_kthr_stop)
freezer.c:94:static void fake_signal_wake_up(struct task_struct *p)
freezer.c:115:bool freeze_task(struct task_struct *p)
freezer.c:146:void __thaw_task(struct task_struct *p)
freezer.c:167:bool set_freezable(void)
futex.c:170:static inline int match_futex(union futex_key *key1, union futex_key *key2)
futex.c:183:static void get_futex_key_refs(union futex_key *key)
futex.c:202:static void drop_futex_key_refs(union futex_key *key)
futex.c:382:static inline void put_futex_key(union futex_key *key)
futex.c:399:static int fault_in_user_writeable(u32 __user *uaddr)
futex.c:443:static int get_futex_value_locked(u32 *dest, u32 __user *from)
futex.c:458:static int refill_pi_state_cache(void)
futex.c:491:static void free_pi_state(struct futex_pi_state *pi_state)
futex.c:545:void exit_pi_state_list(struct task_struct *curr)
futex.c:831:static void __unqueue_futex(struct futex_q *q)
futex.c:847:static void wake_futex(struct futex_q *q)
futex.c:877:static int wake_futex_pi(u32 __user *uaddr, u32 uval, struct futex_q *this)
futex.c:941:static int unlock_futex_pi(u32 __user *uaddr, u32 uval)
futex.c:1515:static inline void queue_me(struct futex_q *q, struct futex_hash_bucket *hb)
futex.c:1547:static int unqueue_me(struct futex_q *q)
futex.c:1592:static void unqueue_me_pi(struct futex_q *q)
futex.c:1719:static int fixup_owner(u32 __user *uaddr, struct futex_q *q, int locked)
futex.c:1969:static long futex_wait_restart(struct restart_block *restart)
futex.c:2112:static int futex_unlock_pi(u32 __user *uaddr, unsigned int flags)
futex.c:2510:int handle_futex_death(u32 __user *uaddr, struct task_struct *curr, int pi)
futex.c:2581:void exit_robust_list(struct task_struct *curr)
futex_compat.c:50:void compat_exit_robust_list(struct task_struct *curr)
gcov/gcc_4_7.c:100:unsigned int gcov_info_version(struct gcov_info *info)
gcov/gcc_4_7.c:112:struct gcov_info *gcov_info_next(struct gcov_info *info)
gcov/gcc_4_7.c:124:void gcov_info_link(struct gcov_info *info)
gcov/gcc_4_7.c:135:void gcov_info_unlink(struct gcov_info *prev, struct gcov_info *info)
gcov/gcc_4_7.c:152:static int counter_active(struct gcov_info *info, unsigned int type)
gcov/gcc_4_7.c:174:void gcov_info_reset(struct gcov_info *info)
gcov/gcc_4_7.c:201:int gcov_info_is_compatible(struct gcov_info *info1, struct gcov_info *info2)
gcov/gcc_4_7.c:213:void gcov_info_add(struct gcov_info *dst, struct gcov_info *src)
gcov/gcc_4_7.c:245:struct gcov_info *gcov_info_dup(struct gcov_info *info)
gcov/gcc_4_7.c:314:void gcov_info_free(struct gcov_info *info)
gcov/gcc_4_7.c:371:static size_t store_gcov_u32(void *buffer, size_t off, u32 v)
gcov/gcc_4_7.c:395:static size_t store_gcov_u64(void *buffer, size_t off, u64 v)
gcov/gcc_4_7.c:416:static size_t convert_to_gcda(char *buffer, struct gcov_info *info)
gcov/gcc_4_7.c:469:struct gcov_iterator *gcov_iter_new(struct gcov_info *info)
gcov/gcc_4_7.c:498:void gcov_iter_free(struct gcov_iterator *iter)
gcov/gcc_4_7.c:508:struct gcov_info *gcov_iter_get_info(struct gcov_iterator *iter)
gcov/gcc_4_7.c:517:void gcov_iter_start(struct gcov_iterator *iter)
gcov/gcc_4_7.c:528:int gcov_iter_next(struct gcov_iterator *iter)
gcov/gcc_4_7.c:546:int gcov_iter_write(struct gcov_iterator *iter, struct seq_file *seq)
gcov/fs.c:94:static void *gcov_seq_start(struct seq_file *seq, loff_t *pos)
gcov/fs.c:107:static void *gcov_seq_next(struct seq_file *seq, void *data, loff_t *pos)
gcov/fs.c:119:static int gcov_seq_show(struct seq_file *seq, void *data)
gcov/fs.c:128:static void gcov_seq_stop(struct seq_file *seq, void *data)
gcov/fs.c:178:static int gcov_seq_open(struct inode *inode, struct file *file)
gcov/fs.c:218:static int gcov_seq_release(struct inode *inode, struct file *file)
gcov/fs.c:255:static void reset_node(struct gcov_node *node)
gcov/fs.c:303:static char *link_target(const char *dir, const char *path, const char *ext)
gcov/fs.c:330:static char *get_link_target(const char *filename, const struct gcov_link *ext)
gcov/fs.c:366:static void add_links(struct gcov_node *node, struct dentry *parent)
gcov/fs.c:471:static void remove_links(struct gcov_node *node)
gcov/fs.c:487:static void release_node(struct gcov_node *node)
gcov/fs.c:500:static void remove_node(struct gcov_node *node)
gcov/fs.c:571:static void add_node(struct gcov_info *info)
gcov/fs.c:621:static void add_info(struct gcov_node *node, struct gcov_info *info)
gcov/fs.c:674:static int get_info_index(struct gcov_node *node, struct gcov_info *info)
gcov/fs.c:688:static void save_info(struct gcov_node *node, struct gcov_info *info)
gcov/fs.c:706:static void remove_info(struct gcov_node *node, struct gcov_info *info)
gcov/fs.c:735:void gcov_event(enum gcov_action action, struct gcov_info *info)
gcov/gcc_3_4.c:96:unsigned int gcov_info_version(struct gcov_info *info)
gcov/gcc_3_4.c:108:struct gcov_info *gcov_info_next(struct gcov_info *info)
gcov/gcc_3_4.c:120:void gcov_info_link(struct gcov_info *info)
gcov/gcc_3_4.c:131:void gcov_info_unlink(struct gcov_info *prev, struct gcov_info *info)
gcov/gcc_3_4.c:149:static int counter_active(struct gcov_info *info, unsigned int type)
gcov/gcc_3_4.c:171:void gcov_info_reset(struct gcov_info *info)
gcov/gcc_3_4.c:189:int gcov_info_is_compatible(struct gcov_info *info1, struct gcov_info *info2)
gcov/gcc_3_4.c:201:void gcov_info_add(struct gcov_info *dest, struct gcov_info *source)
gcov/gcc_3_4.c:215:static size_t get_fn_size(struct gcov_info *info)
gcov/gcc_3_4.c:239:struct gcov_info *gcov_info_dup(struct gcov_info *info)
gcov/gcc_3_4.c:287:void gcov_info_free(struct gcov_info *info)
gcov/gcc_3_4.c:362:struct gcov_iterator *gcov_iter_new(struct gcov_info *info)
gcov/gcc_3_4.c:379:void gcov_iter_free(struct gcov_iterator *iter)
gcov/gcc_3_4.c:388:struct gcov_info *gcov_iter_get_info(struct gcov_iterator *iter)
gcov/gcc_3_4.c:397:void gcov_iter_start(struct gcov_iterator *iter)
gcov/gcc_3_4.c:432:int gcov_iter_next(struct gcov_iterator *iter)
gcov/gcc_3_4.c:490:static int seq_write_gcov_u32(struct seq_file *seq, u32 v)
gcov/gcc_3_4.c:505:static int seq_write_gcov_u64(struct seq_file *seq, u64 v)
gcov/gcc_3_4.c:521:int gcov_iter_write(struct gcov_iterator *iter, struct seq_file *seq)
gcov/base.c:30:void __gcov_init(struct gcov_info *info)
gcov/base.c:58:void __gcov_flush(void)
gcov/base.c:64:void __gcov_merge_add(gcov_type *counters, unsigned int n_counters)
gcov/base.c:70:void __gcov_merge_single(gcov_type *counters, unsigned int n_counters)
gcov/base.c:76:void __gcov_merge_delta(gcov_type *counters, unsigned int n_counters)
gcov/base.c:82:void __gcov_merge_ior(gcov_type *counters, unsigned int n_counters)
gcov/base.c:96:void gcov_enable_events(void)
gcov/base.c:111:static inline int within(void *addr, void *start, unsigned long size)
groups.c:14:struct group_info *groups_alloc(int gidsetsize)
groups.c:53:void groups_free(struct group_info *group_info)
groups.c:106:static void groups_sort(struct group_info *group_info)
groups.c:135:int groups_search(const struct group_info *group_info, kgid_t grp)
groups.c:164:int set_groups(struct cred *new, struct group_info *group_info)
groups.c:182:int set_current_groups(struct group_info *group_info)
groups.c:259:int in_group_p(kgid_t grp)
groups.c:271:int in_egroup_p(kgid_t grp)
hrtimer.c:104:static inline int hrtimer_clockid_to_base(clockid_t clock_id)
hrtimer.c:114:static void hrtimer_get_softirq_time(struct hrtimer_cpu_base *base)
hrtimer.c:174:static int hrtimer_get_target(int this_cpu, int pinned)
hrtimer.c:282:ktime_t ktime_add_ns(const ktime_t kt, u64 nsec)
hrtimer.c:310:ktime_t ktime_sub_ns(const ktime_t kt, u64 nsec)
hrtimer.c:331:u64 ktime_divns(const ktime_t kt, s64 div)
hrtimer.c:352:ktime_t ktime_add_safe(const ktime_t lhs, const ktime_t rhs)
hrtimer.c:372:static void *hrtimer_debug_hint(void *addr)
hrtimer.c:381:static int hrtimer_fixup_init(void *addr, enum debug_obj_state state)
hrtimer.c:400:static int hrtimer_fixup_activate(void *addr, enum debug_obj_state state)
hrtimer.c:420:static int hrtimer_fixup_free(void *addr, enum debug_obj_state state)
hrtimer.c:442:static inline void debug_hrtimer_init(struct hrtimer *timer)
hrtimer.c:447:static inline void debug_hrtimer_activate(struct hrtimer *timer)
hrtimer.c:452:static inline void debug_hrtimer_deactivate(struct hrtimer *timer)
hrtimer.c:457:static inline void debug_hrtimer_free(struct hrtimer *timer)
hrtimer.c:473:void destroy_hrtimer_on_stack(struct hrtimer *timer)
hrtimer.c:492:static inline void debug_activate(struct hrtimer *timer)
hrtimer.c:498:static inline void debug_deactivate(struct hrtimer *timer)
hrtimer.c:531:static inline int hrtimer_is_hres_enabled(void)
hrtimer.c:539:static inline int hrtimer_hres_active(void)
hrtimer.c:649:static inline void hrtimer_init_hres(struct hrtimer_cpu_base *base)
hrtimer.c:667:static inline ktime_t hrtimer_update_base(struct hrtimer_cpu_base *base)
hrtimer.c:681:static void retrigger_next_event(void *arg)
hrtimer.c:697:static int hrtimer_switch_to_hres(void)
hrtimer.c:725:static void clock_was_set_work(struct work_struct *work)
hrtimer.c:736:void clock_was_set_delayed(void)
hrtimer.c:769:void clock_was_set(void)
hrtimer.c:784:void hrtimers_resume(void)
hrtimer.c:795:static inline void timer_stats_hrtimer_set_start_info(struct hrtimer *timer)
hrtimer.c:806:static inline void timer_stats_hrtimer_clear_start_info(struct hrtimer *timer)
hrtimer.c:813:static inline void timer_stats_account_hrtimer(struct hrtimer *timer)
hrtimer.c:827:void unlock_hrtimer_base(const struct hrtimer *timer, unsigned long *flags)
hrtimer.c:841:u64 hrtimer_forward(struct hrtimer *timer, ktime_t now, ktime_t interval)
hrtimer.c:1081:int hrtimer_try_to_cancel(struct hrtimer *timer)
hrtimer.c:1107:int hrtimer_cancel(struct hrtimer *timer)
hrtimer.c:1123:ktime_t hrtimer_get_remaining(const struct hrtimer *timer)
hrtimer.c:1143:ktime_t hrtimer_get_next_event(void)
hrtimer.c:1224:int hrtimer_get_res(const clockid_t which_clock, struct timespec *tp)
hrtimer.c:1236:static void __run_hrtimer(struct hrtimer *timer, ktime_t *now)
hrtimer.c:1282:void hrtimer_interrupt(struct clock_event_device *dev)
hrtimer.c:1411:static void __hrtimer_peek_ahead_timers(void)
hrtimer.c:1432:void hrtimer_peek_ahead_timers(void)
hrtimer.c:1441:static void run_hrtimer_softirq(struct softirq_action *h)
hrtimer.c:1459:void hrtimer_run_pending(void)
hrtimer.c:1479:void hrtimer_run_queues(void)
hrtimer.c:1531:void hrtimer_init_sleeper(struct hrtimer_sleeper *sl, struct task_struct *task)
hrtimer.c:1561:static int update_rmtp(struct hrtimer *timer, struct timespec __user *rmtp)
hrtimer.c:1662:static void init_hrtimers_cpu(int cpu)
hrtimer.c:1710:static void migrate_hrtimers(int scpu)
hung_task.c:73:static void check_hung_task(struct task_struct *t, unsigned long timeout)
hung_task.c:133:static bool rcu_lock_break(struct task_struct *g, struct task_struct *t)
hung_task.c:154:static void check_hung_uninterruptible_tasks(unsigned long timeout)
hung_task.c:212:void reset_hung_task_detector(void)
hung_task.c:221:static int watchdog(void *dummy)
irq/chip.c:28:int irq_set_chip(unsigned int irq, struct irq_chip *chip)
irq/chip.c:56:int irq_set_irq_type(unsigned int irq, unsigned int type)
irq/chip.c:79:int irq_set_handler_data(unsigned int irq, void *data)
irq/chip.c:122:int irq_set_msi_desc(unsigned int irq, struct msi_desc *entry)
irq/chip.c:134:int irq_set_chip_data(unsigned int irq, void *data)
irq/chip.c:147:struct irq_data *irq_get_irq_data(unsigned int irq)
irq/chip.c:155:static void irq_state_clr_disabled(struct irq_desc *desc)
irq/chip.c:160:static void irq_state_set_disabled(struct irq_desc *desc)
irq/chip.c:165:static void irq_state_clr_masked(struct irq_desc *desc)
irq/chip.c:170:static void irq_state_set_masked(struct irq_desc *desc)
irq/chip.c:175:int irq_startup(struct irq_desc *desc, bool resend)
irq/chip.c:193:void irq_shutdown(struct irq_desc *desc)
irq/chip.c:206:void irq_enable(struct irq_desc *desc)
irq/chip.c:229:void irq_disable(struct irq_desc *desc)
irq/chip.c:238:void irq_percpu_enable(struct irq_desc *desc, unsigned int cpu)
irq/chip.c:247:void irq_percpu_disable(struct irq_desc *desc, unsigned int cpu)
irq/chip.c:256:static inline void mask_ack_irq(struct irq_desc *desc)
irq/chip.c:268:void mask_irq(struct irq_desc *desc)
irq/chip.c:276:void unmask_irq(struct irq_desc *desc)
irq/chip.c:292:void handle_nested_irq(unsigned int irq)
irq/chip.c:326:static bool irq_check_poll(struct irq_desc *desc)
irq/chip.c:373:static void cond_unmask_irq(struct irq_desc *desc)
irq/chip.c:429:static inline void preflow_handler(struct irq_desc *desc)
irq/chip.c:566:void handle_edge_eoi_irq(unsigned int irq, struct irq_desc *desc)
irq/chip.c:637:void handle_percpu_devid_irq(unsigned int irq, struct irq_desc *desc)
irq/chip.c:704:void irq_modify_status(unsigned int irq, unsigned long clr, unsigned long set)
irq/chip.c:736:void irq_cpu_online(void)
irq/chip.c:766:void irq_cpu_offline(void)
irq/settings.h:41:static inline bool irq_settings_is_per_cpu(struct irq_desc *desc)
irq/settings.h:46:static inline bool irq_settings_is_per_cpu_devid(struct irq_desc *desc)
irq/settings.h:51:static inline void irq_settings_set_per_cpu(struct irq_desc *desc)
irq/settings.h:56:static inline void irq_settings_set_no_balancing(struct irq_desc *desc)
irq/settings.h:61:static inline bool irq_settings_has_no_balance_set(struct irq_desc *desc)
irq/settings.h:66:static inline u32 irq_settings_get_trigger_mask(struct irq_desc *desc)
irq/settings.h:78:static inline bool irq_settings_is_level(struct irq_desc *desc)
irq/settings.h:83:static inline void irq_settings_clr_level(struct irq_desc *desc)
irq/settings.h:88:static inline void irq_settings_set_level(struct irq_desc *desc)
irq/settings.h:93:static inline bool irq_settings_can_request(struct irq_desc *desc)
irq/settings.h:98:static inline void irq_settings_clr_norequest(struct irq_desc *desc)
irq/settings.h:103:static inline void irq_settings_set_norequest(struct irq_desc *desc)
irq/settings.h:108:static inline bool irq_settings_can_thread(struct irq_desc *desc)
irq/settings.h:113:static inline void irq_settings_clr_nothread(struct irq_desc *desc)
irq/settings.h:118:static inline void irq_settings_set_nothread(struct irq_desc *desc)
irq/settings.h:123:static inline bool irq_settings_can_probe(struct irq_desc *desc)
irq/settings.h:128:static inline void irq_settings_clr_noprobe(struct irq_desc *desc)
irq/settings.h:133:static inline void irq_settings_set_noprobe(struct irq_desc *desc)
irq/settings.h:138:static inline bool irq_settings_can_move_pcntxt(struct irq_desc *desc)
irq/settings.h:143:static inline bool irq_settings_can_autoenable(struct irq_desc *desc)
irq/settings.h:148:static inline bool irq_settings_is_nested_thread(struct irq_desc *desc)
irq/settings.h:153:static inline bool irq_settings_is_polled(struct irq_desc *desc)
irq/dummychip.c:17:static void ack_bad(struct irq_data *data)
irq/pm.c:24:void suspend_device_irqs(void)
irq/pm.c:43:static void resume_irqs(bool want_early)
irq/pm.c:67:static void irq_pm_syscore_resume(void)
irq/pm.c:91:void resume_device_irqs(void)
irq/pm.c:100:int check_wakeup_irqs(void)
irq/handle.c:30:void handle_bad_irq(unsigned int irq, struct irq_desc *desc)
irq/handle.c:45:static void warn_no_thread(unsigned int irq, struct irqaction *action)
irq/handle.c:54:static void irq_wake_thread(struct irq_desc *desc, struct irqaction *action)
irq/debug.h:12:static inline void print_irq_desc(unsigned int irq, struct irq_desc *desc)
irq/autoprobe.c:31:unsigned long probe_irq_on(void)
irq/autoprobe.c:118:unsigned int probe_irq_mask(unsigned long val)
irq/autoprobe.c:158:int probe_irq_off(unsigned long val)
irq/devres.c:14:static void devm_irq_release(struct device *dev, void *res)
irq/devres.c:21:static int devm_irq_match(struct device *dev, void *res, void *data)
irq/devres.c:86:void devm_free_irq(struct device *dev, unsigned int irq, void *dev_id)
irq/irqdomain.c:76:void irq_domain_remove(struct irq_domain *domain)
irq/irqdomain.c:189:struct irq_domain *irq_find_host(struct device_node *node)
irq/irqdomain.c:225:void irq_set_default_host(struct irq_domain *domain)
irq/irqdomain.c:233:static void irq_domain_disassociate(struct irq_domain *domain, unsigned int irq)
irq/irqdomain.c:348:unsigned int irq_create_direct_mapping(struct irq_domain *domain)
irq/irqdomain.c:468:unsigned int irq_create_of_mapping(struct of_phandle_args *irq_data)
irq/irqdomain.c:508:void irq_dispose_mapping(unsigned int virq)
irq/irqdomain.c:559:static int virq_debug_show(struct seq_file *m, void *private)
irq/irqdomain.c:623:static int virq_debug_open(struct inode *inode, struct file *file)
irq/internals.h:108:static inline void chip_bus_lock(struct irq_desc *desc)
irq/internals.h:114:static inline void chip_bus_sync_unlock(struct irq_desc *desc)
irq/internals.h:158:static inline void irqd_set_move_pending(struct irq_data *d)
irq/internals.h:163:static inline void irqd_clr_move_pending(struct irq_data *d)
irq/internals.h:168:static inline void irqd_clear(struct irq_data *d, unsigned int mask)
irq/internals.h:173:static inline void irqd_set(struct irq_data *d, unsigned int mask)
irq/internals.h:178:static inline bool irqd_has_set(struct irq_data *d, unsigned int mask)
irq/spurious.c:38:bool irq_wait_for_poll(struct irq_desc *desc)
irq/spurious.c:63:static int try_one_irq(int irq, struct irq_desc *desc, bool force)
irq/spurious.c:119:static int misrouted_irq(int irq)
irq/spurious.c:145:static void poll_spurious_irqs(unsigned long dummy)
irq/spurious.c:335:int noirqdebug_setup(char *str)
irq/generic-chip.c:24:void irq_gc_noop(struct irq_data *d)
irq/generic-chip.c:35:void irq_gc_mask_disable_reg(struct irq_data *d)
irq/generic-chip.c:54:void irq_gc_mask_set_bit(struct irq_data *d)
irq/generic-chip.c:74:void irq_gc_mask_clr_bit(struct irq_data *d)
irq/generic-chip.c:94:void irq_gc_unmask_enable_reg(struct irq_data *d)
irq/generic-chip.c:110:void irq_gc_ack_set_bit(struct irq_data *d)
irq/generic-chip.c:126:void irq_gc_ack_clr_bit(struct irq_data *d)
irq/generic-chip.c:141:void irq_gc_mask_disable_reg_and_ack(struct irq_data *d)
irq/generic-chip.c:157:void irq_gc_eoi(struct irq_data *d)
irq/generic-chip.c:177:int irq_gc_set_wake(struct irq_data *d, unsigned int on)
irq/generic-chip.c:460:int irq_setup_alt_chip(struct irq_data *d, unsigned int type)
irq/generic-chip.c:527:static int irq_gc_suspend(void)
irq/generic-chip.c:544:static void irq_gc_resume(void)
irq/generic-chip.c:564:static void irq_gc_shutdown(void)
irq/irqdesc.c:38:static int alloc_masks(struct irq_desc *desc, gfp_t gfp, int node)
irq/irqdesc.c:52:static void desc_smp_init(struct irq_desc *desc, int node)
irq/irqdesc.c:61:static inline int desc_node(struct irq_desc *desc)
irq/irqdesc.c:106:static void irq_insert_desc(unsigned int irq, struct irq_desc *desc)
irq/irqdesc.c:111:struct irq_desc *irq_to_desc(unsigned int irq)
irq/irqdesc.c:117:static void delete_irq_desc(unsigned int irq)
irq/irqdesc.c:123:static void free_masks(struct irq_desc *desc)
irq/irqdesc.c:164:static void free_desc(unsigned int irq)
irq/irqdesc.c:205:static int irq_expand_nr_irqs(unsigned int nr)
irq/irqdesc.c:273:struct irq_desc *irq_to_desc(unsigned int irq)
irq/irqdesc.c:278:static void free_desc(unsigned int irq)
irq/irqdesc.c:296:static int irq_expand_nr_irqs(unsigned int nr)
irq/irqdesc.c:308:int generic_handle_irq(unsigned int irq)
irq/irqdesc.c:326:void irq_free_descs(unsigned int from, unsigned int cnt)
irq/irqdesc.c:398:int irq_reserve_irqs(unsigned int from, unsigned int cnt)
irq/irqdesc.c:422:unsigned int irq_get_next_irq(unsigned int offset)
irq/irqdesc.c:451:void __irq_put_desc_unlock(struct irq_desc *desc, unsigned long flags, bool bus)
irq/irqdesc.c:458:int irq_set_percpu_devid(unsigned int irq)
irq/irqdesc.c:481:void dynamic_irq_cleanup(unsigned int irq)
irq/irqdesc.c:491:unsigned int kstat_irqs_cpu(unsigned int irq, int cpu)
irq/irqdesc.c:499:unsigned int kstat_irqs(unsigned int irq)
irq/migration.c:7:void irq_move_masked_irq(struct irq_data *idata)
irq/migration.c:51:void irq_move_irq(struct irq_data *idata)
irq/proc.c:22:static int show_irq_affinity(int type, struct seq_file *m, void *v)
irq/proc.c:39:static int irq_affinity_hint_proc_show(struct seq_file *m, void *v)
irq/proc.c:65:static int irq_affinity_proc_show(struct seq_file *m, void *v)
irq/proc.c:70:static int irq_affinity_list_proc_show(struct seq_file *m, void *v)
irq/proc.c:132:static int irq_affinity_proc_open(struct inode *inode, struct file *file)
irq/proc.c:137:static int irq_affinity_list_proc_open(struct inode *inode, struct file *file)
irq/proc.c:142:static int irq_affinity_hint_proc_open(struct inode *inode, struct file *file)
irq/proc.c:170:static int default_affinity_show(struct seq_file *m, void *v)
irq/proc.c:213:static int default_affinity_open(struct inode *inode, struct file *file)
irq/proc.c:226:static int irq_node_proc_show(struct seq_file *m, void *v)
irq/proc.c:234:static int irq_node_proc_open(struct inode *inode, struct file *file)
irq/proc.c:247:static int irq_spurious_proc_show(struct seq_file *m, void *v)
irq/proc.c:257:static int irq_spurious_proc_open(struct inode *inode, struct file *file)
irq/proc.c:271:static int name_unique(unsigned int irq, struct irqaction *new_action)
irq/proc.c:290:void register_handler_proc(unsigned int irq, struct irqaction *action)
irq/proc.c:310:void register_irq_proc(unsigned int irq, struct irq_desc *desc)
irq/proc.c:346:void unregister_irq_proc(unsigned int irq, struct irq_desc *desc)
irq/proc.c:367:void unregister_handler_proc(unsigned int irq, struct irqaction *action)
irq/proc.c:372:static void register_default_affinity_proc(void)
irq/proc.c:380:void init_irq_proc(void)
irq/proc.c:414:int show_interrupts(struct seq_file *p, void *v)
irq/manage.c:45:void synchronize_irq(unsigned int irq)
irq/manage.c:87:int irq_can_set_affinity(unsigned int irq)
irq/manage.c:107:void irq_set_thread_affinity(struct irq_desc *desc)
irq/manage.c:119:static inline bool irq_can_move_pcntxt(struct irq_data *data)
irq/manage.c:123:static inline bool irq_move_pending(struct irq_data *data)
irq/manage.c:165:int __irq_set_affinity_locked(struct irq_data *data, const struct cpumask *mask)
irq/manage.c:196:int irq_set_affinity(unsigned int irq, const struct cpumask *mask)
irq/manage.c:211:int irq_set_affinity_hint(unsigned int irq, const struct cpumask *m)
irq/manage.c:224:static void irq_affinity_notify(struct work_struct *work)
irq/manage.c:340:int irq_select_affinity_usr(unsigned int irq, struct cpumask *mask)
irq/manage.c:360:void __disable_irq(struct irq_desc *desc, unsigned int irq, bool suspend)
irq/manage.c:372:static int __disable_irq_nosync(unsigned int irq)
irq/manage.c:395:void disable_irq_nosync(unsigned int irq)
irq/manage.c:413:void disable_irq(unsigned int irq)
irq/manage.c:420:void __enable_irq(struct irq_desc *desc, unsigned int irq, bool resume)
irq/manage.c:464:void enable_irq(unsigned int irq)
irq/manage.c:481:static int set_irq_wake_real(unsigned int irq, unsigned int on)
irq/manage.c:507:int irq_set_irq_wake(unsigned int irq, unsigned int on)
irq/manage.c:548:int can_request_irq(unsigned int irq, unsigned long irqflags)
irq/manage.c:621:int irq_set_parent(int irq, int parent_irq)
irq/manage.c:656:static int irq_wait_for_interrupt(struct irqaction *action)
irq/manage.c:803:static void wake_threads_waitq(struct irq_desc *desc)
irq/manage.c:810:static void irq_thread_dtor(struct callback_head *unused)
irq/manage.c:840:static int irq_thread(void *data)
irq/manage.c:884:static void irq_setup_forced_threading(struct irqaction *new)
irq/manage.c:1209:int setup_irq(unsigned int irq, struct irqaction *act)
irq/manage.c:1313:void remove_irq(unsigned int irq, struct irqaction *act)
irq/manage.c:1336:void free_irq(unsigned int irq, void *dev_id)
irq/manage.c:1504:void enable_percpu_irq(unsigned int irq, unsigned int type)
irq/manage.c:1531:void disable_percpu_irq(unsigned int irq)
irq/manage.c:1595:void remove_percpu_irq(unsigned int irq, struct irqaction *act)
irq/manage.c:1615:void free_percpu_irq(unsigned int irq, void __percpu *dev_id)
irq/manage.c:1634:int setup_percpu_irq(unsigned int irq, struct irqaction *act)
irq/resend.c:31:static void resend_irqs(unsigned long arg)
irq/resend.c:56:void check_irq_resend(struct irq_desc *desc, unsigned int irq)
irq_work.c:28:static bool irq_work_claim(struct irq_work *work)
irq_work.c:64:void irq_work_queue(struct irq_work *work)
irq_work.c:89:bool irq_work_needs_cpu(void)
irq_work.c:103:static void __irq_work_run(void)
irq_work.c:153:void irq_work_run(void)
irq_work.c:164:void irq_work_sync(struct irq_work *work)
itimer.c:79:int do_getitimer(int which, struct itimerval *value)
itimer.c:132:static inline u32 cputime_sub_ns(cputime_t ct, s64 real_ns)
itimer.c:190:int do_setitimer(int which, struct itimerval *value, struct itimerval *ovalue)
itimer.c:253:unsigned int alarm_setitimer(unsigned int seconds)
jump_label.c:23:void jump_label_lock(void)
jump_label.c:28:void jump_label_unlock(void)
jump_label.c:33:static int jump_label_cmp(const void *a, const void *b)
jump_label.c:59:void static_key_slow_inc(struct static_key *key)
jump_label.c:98:static void jump_label_update_timeout(struct work_struct *work)
jump_label.c:105:void static_key_slow_dec(struct static_key *key)
jump_label.c:112:void static_key_slow_dec_deferred(struct static_key_deferred *key)
jump_label.c:128:static int addr_conflict(struct jump_entry *entry, void *start, void *end)
jump_label.c:231:static int __jump_label_mod_text_reserved(void *start, void *end)
jump_label.c:246:static void __jump_label_mod_update(struct static_key *key, int enable)
jump_label.c:268:void jump_label_apply_nops(struct module *mod)
jump_label.c:283:static int jump_label_add_module(struct module *mod)
jump_label.c:328:static void jump_label_del_module(struct module *mod)
jump_label.c:360:static void jump_label_invalidate_module_init(struct module *mod)
jump_label.c:428:int jump_label_text_reserved(void *start, void *end)
jump_label.c:442:static void jump_label_update(struct static_key *key, int enable)
kallsyms.c:54:static inline int is_kernel_inittext(unsigned long addr)
kallsyms.c:62:static inline int is_kernel_text(unsigned long addr)
kallsyms.c:70:static inline int is_kernel(unsigned long addr)
kallsyms.c:77:static int is_ksym_addr(unsigned long addr)
kallsyms.c:141:static char kallsyms_get_symbol_type(unsigned int off)
kallsyms.c:179:unsigned long kallsyms_lookup_name(const char *name)
kallsyms.c:316:int lookup_symbol_name(unsigned long addr, char *symname)
kallsyms.c:393:int sprint_symbol(char *buffer, unsigned long address)
kallsyms.c:410:int sprint_symbol_no_offset(char *buffer, unsigned long address)
kallsyms.c:430:int sprint_backtrace(char *buffer, unsigned long address)
kallsyms.c:436:void __print_symbol(const char *fmt, unsigned long address)
kallsyms.c:457:static int get_ksymbol_mod(struct kallsym_iter *iter)
kallsyms.c:481:static void reset_iter(struct kallsym_iter *iter, loff_t new_pos)
kallsyms.c:489:static int update_iter(struct kallsym_iter *iter, loff_t pos)
kallsyms.c:507:static void *s_next(struct seq_file *m, void *p, loff_t *pos)
kallsyms.c:516:static void *s_start(struct seq_file *m, loff_t *pos)
kallsyms.c:523:static void s_stop(struct seq_file *m, void *p)
kallsyms.c:527:static int s_show(struct seq_file *m, void *p)
kallsyms.c:559:static int kallsyms_open(struct inode *inode, struct file *file)
kcmp.c:34:static long kptr_obfuscate(long v, int type)
kcmp.c:45:static int kcmp_ptr(void *v1, void *v2, enum kcmp_type type)
kcmp.c:72:static void kcmp_unlock(struct mutex *m1, struct mutex *m2)
kcmp.c:79:static int kcmp_lock(struct mutex *m1, struct mutex *m2)
kexec.c:67:int kexec_should_crash(struct task_struct *p)
kexec.c:382:static void kimage_free_pages(struct page *page)
kexec.c:393:static void kimage_free_page_list(struct list_head *list)
kexec.c:551:static int kimage_add_entry(struct kimage *image, kimage_entry_t entry)
kexec.c:591:static int kimage_add_page(struct kimage *image, unsigned long page)
kexec.c:604:static void kimage_free_extra_pages(struct kimage *image)
kexec.c:613:static void kimage_terminate(struct kimage *image)
kexec.c:626:static void kimage_free_entry(kimage_entry_t entry)
kexec.c:634:static void kimage_free(struct kimage *image)
kexec.c:1079:void crash_kexec(struct pt_regs *regs)
kexec.c:1102:size_t crash_get_memory_size(void)
kexec.c:1121:int crash_shrink_memory(unsigned long new_size)
kexec.c:1190:static void final_note(u32 *buf)
kexec.c:1200:void crash_save_cpu(struct pt_regs *regs, int cpu)
kexec.c:1515:static void update_vmcoreinfo_note(void)
kexec.c:1526:void crash_save_vmcoreinfo(void)
kexec.c:1532:void vmcoreinfo_append_str(const char *fmt, ...)
kexec.c:1637:int kernel_kexec(void)
kmod.c:72:static void free_modprobe_argv(struct subprocess_info *info)
kmod.c:78:static int call_modprobe(char *module_name, int wait)
kmod.c:132:int __request_module(bool wait, const char *fmt, ...)
kmod.c:202:static int ____call_usermodehelper(void *data)
kmod.c:254:static int call_helper(void *data)
kmod.c:261:static void call_usermodehelper_freeinfo(struct subprocess_info *info)
kmod.c:268:static void umh_complete(struct subprocess_info *sub_info)
kmod.c:282:static int wait_for_helper(void *data)
kmod.c:322:static void __call_usermodehelper(struct work_struct *work)
kmod.c:387:int usermodehelper_read_trylock(void)
kmod.c:417:long usermodehelper_read_lock_wait(long timeout)
kmod.c:444:void usermodehelper_read_unlock(void)
kmod.c:457:void __usermodehelper_set_disable_depth(enum umh_disable_depth depth)
kmod.c:471:int __usermodehelper_disable(enum umh_disable_depth depth)
kmod.c:498:static void helper_lock(void)
kmod.c:504:static void helper_unlock(void)
kmod.c:569:int call_usermodehelper_exec(struct subprocess_info *sub_info, int wait)
kmod.c:636:int call_usermodehelper(char *path, char **argv, char **envp, int wait)
kprobes.c:84:static raw_spinlock_t *kretprobe_table_lock_ptr(unsigned long hash)
kprobes.c:125:static int slots_per_page(struct kprobe_insn_cache *c)
kprobes.c:136:static void *alloc_insn_page(void)
kprobes.c:141:static void free_insn_page(void *page)
kprobes.c:301:static inline void set_kprobe_instance(struct kprobe *kp)
kprobes.c:306:static inline void reset_kprobe_instance(void)
kprobes.c:334:static inline int kprobe_aggrprobe(struct kprobe *p)
kprobes.c:340:static inline int kprobe_unused(struct kprobe *p)
kprobes.c:349:static inline void copy_kprobe(struct kprobe *ap, struct kprobe *p)
kprobes.c:388:static inline int kprobe_optready(struct kprobe *p)
kprobes.c:401:static inline int kprobe_disarmed(struct kprobe *p)
kprobes.c:679:static void reuse_unused_kprobe(struct kprobe *ap)
kprobes.c:908:static void reuse_unused_kprobe(struct kprobe *ap)
kprobes.c:1170:static inline void free_rp_inst(struct kretprobe *rp)
kprobes.c:1397:static inline int check_kprobe_rereg(struct kprobe *p)
kthread.c:79:bool kthread_should_stop(void)
kthread.c:96:bool kthread_should_park(void)
kthread.c:110:bool kthread_freezable_should_stop(bool *was_frozen)
kthread.c:134:void *kthread_data(struct task_struct *task)
kthread.c:148:void *probe_kthread_data(struct task_struct *task)
kthread.c:157:static void __kthread_parkme(struct kthread *self)
kthread.c:170:void kthread_parkme(void)
kthread.c:175:static int kthread(void *_create)
kthread.c:214:int tsk_fork_get_node(struct task_struct *tsk)
kthread.c:223:static void create_kthread(struct kthread_create_info *create)
kthread.c:328:static void __kthread_bind(struct task_struct *p, unsigned int cpu, long state)
kthread.c:349:void kthread_bind(struct task_struct *p, unsigned int cpu)
kthread.c:383:static void __kthread_unpark(struct task_struct *k, struct kthread *kthread)
kthread.c:407:void kthread_unpark(struct task_struct *k)
kthread.c:427:int kthread_park(struct task_struct *k)
kthread.c:460:int kthread_stop(struct task_struct *k)
kthread.c:483:int kthreadd(void *unused)
kthread.c:546:int kthread_worker_fn(void *worker_ptr)
kthread.c:628:static void kthread_flush_work_fn(struct kthread_work *work)
kthread.c:641:void flush_kthread_work(struct kthread_work *work)
kthread.c:682:void flush_kthread_worker(struct kthread_worker *worker)
latencytop.c:68:void clear_all_latency_tracing(struct task_struct *p)
latencytop.c:81:static void clear_global_latency_tracing(void)
latencytop.c:237:static int lstats_show(struct seq_file *m, void *v)
latencytop.c:273:static int lstats_open(struct inode *inode, struct file *filp)
locking/lockdep.c:80:static int graph_lock(void)
locking/lockdep.c:98:static inline int graph_unlock(void)
locking/lockdep.c:117:static inline int debug_locks_off_graph_unlock(void)
locking/lockdep.c:156:static inline u64 lockstat_clock(void)
locking/lockdep.c:161:static int lock_point(unsigned long points[], unsigned long ip)
locking/lockdep.c:177:static void lock_time_inc(struct lock_time *lt, u64 time)
locking/lockdep.c:189:static inline void lock_time_add(struct lock_time *src, struct lock_time *dst)
locking/lockdep.c:204:struct lock_class_stats lock_stats(struct lock_class *class)
locking/lockdep.c:233:void clear_lock_stats(struct lock_class *class)
locking/lockdep.c:252:static void put_lock_stats(struct lock_class_stats *stats)
locking/lockdep.c:257:static void lock_release_holdtime(struct held_lock *hlock)
locking/lockdep.c:275:static inline void lock_release_holdtime(struct held_lock *hlock)
locking/lockdep.c:319:void lockdep_off(void)
locking/lockdep.c:325:void lockdep_on(void)
locking/lockdep.c:352:static int class_filter(struct lock_class *class)
locking/lockdep.c:368:static int verbose(struct lock_class *class)
locking/lockdep.c:383:static void print_lockdep_off(const char *bug_msg)
locking/lockdep.c:390:static int save_trace(struct stack_trace *trace)
locking/lockdep.c:481:static char get_usage_char(struct lock_class *class, enum lock_usage_bit bit)
locking/lockdep.c:496:void get_usage_chars(struct lock_class *class, char usage[LOCK_USAGE_CHARS])
locking/lockdep.c:509:static void __print_lock_name(struct lock_class *class)
locking/lockdep.c:527:static void print_lock_name(struct lock_class *class)
locking/lockdep.c:538:static void print_lockdep_cache(struct lockdep_map *lock)
locking/lockdep.c:550:static void print_lock(struct held_lock *hlock)
locking/lockdep.c:557:static void lockdep_print_held_locks(struct task_struct *curr)
locking/lockdep.c:574:static void print_kernel_ident(void)
locking/lockdep.c:582:static int very_verbose(struct lock_class *class)
locking/lockdep.c:593:static int static_obj(void *obj)
locking/lockdep.c:624:static int count_matching_names(struct lock_class *new_class)
locking/lockdep.c:903:static inline void __cq_init(struct circular_queue *cq)
locking/lockdep.c:909:static inline int __cq_empty(struct circular_queue *cq)
locking/lockdep.c:914:static inline int __cq_full(struct circular_queue *cq)
locking/lockdep.c:919:static inline int __cq_enqueue(struct circular_queue *cq, unsigned long elem)
locking/lockdep.c:929:static inline int __cq_dequeue(struct circular_queue *cq, unsigned long *elem)
locking/lockdep.c:969:static inline int get_lock_depth(struct lock_list *child)
locking/lockdep.c:1171:static inline int class_equal(struct lock_list *entry, void *data)
locking/lockdep.c:1229:static int noop_count(struct lock_list *entry, void *data)
locking/lockdep.c:1244:unsigned long lockdep_count_forward_deps(struct lock_class *class)
locking/lockdep.c:1271:unsigned long lockdep_count_backward_deps(struct lock_class *class)
locking/lockdep.c:1312:static inline int usage_match(struct lock_list *entry, void *bit)
locking/lockdep.c:1365:static void print_lock_class_header(struct lock_class *class, int depth)
locking/lockdep.c:1603:static int exclusive_bit(int new_bit)
locking/lockdep.c:1666:static void inc_chains(void)
locking/lockdep.c:1687:static inline void inc_chains(void)
locking/lockdep.c:1989:struct lock_class *lock_chain_get_class(struct lock_chain *chain, int i)
locking/lockdep.c:2152:static void check_chain_key(struct task_struct *curr)
locking/lockdep.c:2386:void print_irqtrace_events(struct task_struct *curr)
locking/lockdep.c:2399:static int HARDIRQ_verbose(struct lock_class *class)
locking/lockdep.c:2407:static int SOFTIRQ_verbose(struct lock_class *class)
locking/lockdep.c:2415:static int RECLAIM_FS_verbose(struct lock_class *class)
locking/lockdep.c:2531:static void __trace_hardirqs_on_caller(unsigned long ip)
locking/lockdep.c:2558:void trace_hardirqs_on_caller(unsigned long ip)
locking/lockdep.c:2602:void trace_hardirqs_on(void)
locking/lockdep.c:2611:void trace_hardirqs_off_caller(unsigned long ip)
locking/lockdep.c:2640:void trace_hardirqs_off(void)
locking/lockdep.c:2649:void trace_softirqs_on(unsigned long ip)
locking/lockdep.c:2689:void trace_softirqs_off(unsigned long ip)
locking/lockdep.c:2718:static void __lockdep_trace_alloc(gfp_t gfp_mask, unsigned long flags)
locking/lockdep.c:2748:void lockdep_trace_alloc(gfp_t gfp_mask)
locking/lockdep.c:2763:static int mark_irqflags(struct task_struct *curr, struct held_lock *hlock)
locking/lockdep.c:2874:void lockdep_trace_alloc(gfp_t gfp_mask)
locking/lockdep.c:3261:static int match_held_lock(struct held_lock *hlock, struct lockdep_map *lock)
locking/lockdep.c:3509:static int __lock_is_held(struct lockdep_map *lock)
locking/lockdep.c:3527:static void check_flags(unsigned long flags)
locking/lockdep.c:3626:int lock_is_held(struct lockdep_map *lock)
locking/lockdep.c:3646:void lockdep_set_current_reclaim_state(gfp_t gfp_mask)
locking/lockdep.c:3651:void lockdep_clear_current_reclaim_state(void)
locking/lockdep.c:3799:void lock_contended(struct lockdep_map *lock, unsigned long ip)
locking/lockdep.c:3819:void lock_acquired(struct lockdep_map *lock, unsigned long ip)
locking/lockdep.c:3844:void lockdep_reset(void)
locking/lockdep.c:3863:static void zap_class(struct lock_class *class)
locking/lockdep.c:3884:static inline int within(const void *addr, void *start, unsigned long size)
locking/lockdep.c:3889:void lockdep_free_key_range(void *start, unsigned long size)
locking/lockdep.c:3920:void lockdep_reset_lock(struct lockdep_map *lock)
locking/lockdep.c:3974:void lockdep_init(void)
locking/lockdep.c:4068:void debug_check_no_locks_freed(const void *mem_from, unsigned long mem_len)
locking/lockdep.c:4093:static void print_held_locks_bug(void)
locking/lockdep.c:4111:void debug_check_no_locks_held(void)
locking/lockdep.c:4118:void debug_show_all_locks(void)
locking/lockdep.c:4180:void debug_show_held_locks(struct task_struct *task)
locking/lockdep.c:4190:void lockdep_sys_exit(void)
locking/lockdep.c:4208:void lockdep_rcu_suspicious(const char *file, const int line, const char *s)
locking/mutex.c:124:void mspin_lock(struct mspin_node **lock, struct mspin_node *node)
locking/mutex.c:145:static void mspin_unlock(struct mspin_node **lock, struct mspin_node *node)
locking/mutex.c:167:static inline bool owner_running(struct mutex *lock, struct task_struct *owner)
locking/mutex.c:188:int mutex_spin_on_owner(struct mutex *lock, struct task_struct *owner)
locking/mutex.c:210:static inline int mutex_can_spin_on_owner(struct mutex *lock)
locking/mutex.c:850:static inline int __mutex_trylock_slowpath(atomic_t *lock_count)
locking/mutex.c:945:int atomic_dec_and_mutex_lock(atomic_t *cnt, struct mutex *lock)
locking/semaphore.c:53:void down(struct semaphore *sem)
locking/semaphore.c:75:int down_interruptible(struct semaphore *sem)
locking/semaphore.c:101:int down_killable(struct semaphore *sem)
locking/semaphore.c:130:int down_trylock(struct semaphore *sem)
locking/semaphore.c:155:int down_timeout(struct semaphore *sem, long jiffies)
locking/semaphore.c:178:void up(struct semaphore *sem)
locking/lglock.c:13:void lg_lock_init(struct lglock *lg, char *name)
locking/lglock.c:19:void lg_local_lock(struct lglock *lg)
locking/lglock.c:30:void lg_local_unlock(struct lglock *lg)
locking/lglock.c:41:void lg_local_lock_cpu(struct lglock *lg, int cpu)
locking/lglock.c:52:void lg_local_unlock_cpu(struct lglock *lg, int cpu)
locking/lglock.c:63:void lg_global_lock(struct lglock *lg)
locking/lglock.c:77:void lg_global_unlock(struct lglock *lg)
locking/rwsem-xadd.c:255:struct rw_semaphore *rwsem_wake(struct rw_semaphore *sem)
locking/rwsem-xadd.c:275:struct rw_semaphore *rwsem_downgrade_wake(struct rw_semaphore *sem)
locking/rtmutex-debug.c:33:static void printk_task(struct task_struct *p)
locking/rtmutex-debug.c:41:static void printk_lock(struct rt_mutex *lock, int print_owner)
locking/rtmutex-debug.c:58:void rt_mutex_debug_task_free(struct task_struct *task)
locking/rtmutex-debug.c:84:void debug_rt_mutex_print_deadlock(struct rt_mutex_waiter *waiter)
locking/rtmutex-debug.c:135:void debug_rt_mutex_lock(struct rt_mutex *lock)
locking/rtmutex-debug.c:139:void debug_rt_mutex_unlock(struct rt_mutex *lock)
locking/rtmutex-debug.c:149:void debug_rt_mutex_proxy_unlock(struct rt_mutex *lock)
locking/rtmutex-debug.c:154:void debug_rt_mutex_init_waiter(struct rt_mutex_waiter *waiter)
locking/rtmutex-debug.c:162:void debug_rt_mutex_free_waiter(struct rt_mutex_waiter *waiter)
locking/rtmutex-debug.c:170:void debug_rt_mutex_init(struct rt_mutex *lock, const char *name)
locking/rtmutex-debug.c:184:void rt_mutex_deadlock_account_unlock(struct task_struct *task)
locking/percpu-rwsem.c:26:void percpu_free_rwsem(struct percpu_rw_semaphore *brw)
locking/percpu-rwsem.c:55:static bool update_fast_ctr(struct percpu_rw_semaphore *brw, unsigned int val)
locking/percpu-rwsem.c:77:void percpu_down_read(struct percpu_rw_semaphore *brw)
locking/percpu-rwsem.c:91:void percpu_up_read(struct percpu_rw_semaphore *brw)
locking/percpu-rwsem.c:103:static int clear_fast_ctr(struct percpu_rw_semaphore *brw)
locking/percpu-rwsem.c:127:void percpu_down_write(struct percpu_rw_semaphore *brw)
locking/percpu-rwsem.c:154:void percpu_up_write(struct percpu_rw_semaphore *brw)
locking/rwsem-spinlock.c:23:int rwsem_is_locked(struct rw_semaphore *sem)
locking/rwsem-spinlock.c:165:int __down_read_trylock(struct rw_semaphore *sem)
locking/rwsem-spinlock.c:231:int __down_write_trylock(struct rw_semaphore *sem)
locking/rwsem-spinlock.c:252:void __up_read(struct rw_semaphore *sem)
locking/rwsem-spinlock.c:267:void __up_write(struct rw_semaphore *sem)
locking/rwsem-spinlock.c:284:void __downgrade_write(struct rw_semaphore *sem)
locking/mutex-debug.c:30:void debug_mutex_lock_common(struct mutex *lock, struct mutex_waiter *waiter)
locking/mutex-debug.c:37:void debug_mutex_wake_waiter(struct mutex *lock, struct mutex_waiter *waiter)
locking/mutex-debug.c:45:void debug_mutex_free_waiter(struct mutex_waiter *waiter)
locking/mutex-debug.c:72:void debug_mutex_unlock(struct mutex *lock)
locking/mutex-debug.c:104:void mutex_destroy(struct mutex *lock)
locking/rwsem.c:31:int down_read_trylock(struct rw_semaphore *sem)
locking/rwsem.c:58:int down_write_trylock(struct rw_semaphore *sem)
locking/rwsem.c:72:void up_read(struct rw_semaphore *sem)
locking/rwsem.c:84:void up_write(struct rw_semaphore *sem)
locking/rwsem.c:96:void downgrade_write(struct rw_semaphore *sem)
locking/rwsem.c:109:void down_read_nested(struct rw_semaphore *sem, int subclass)
locking/rwsem.c:119:void _down_write_nest_lock(struct rw_semaphore *sem, struct lockdep_map *nest)
locking/rwsem.c:129:void down_read_non_owner(struct rw_semaphore *sem)
locking/rwsem.c:138:void down_write_nested(struct rw_semaphore *sem, int subclass)
locking/rwsem.c:148:void up_read_non_owner(struct rw_semaphore *sem)
locking/lockdep_proc.c:26:static void *l_next(struct seq_file *m, void *v, loff_t *pos)
locking/lockdep_proc.c:31:static void *l_start(struct seq_file *m, loff_t *pos)
locking/lockdep_proc.c:36:static void l_stop(struct seq_file *m, void *v)
locking/lockdep_proc.c:40:static void print_name(struct seq_file *m, struct lock_class *class)
locking/lockdep_proc.c:57:static int l_show(struct seq_file *m, void *v)
locking/lockdep_proc.c:103:static int lockdep_open(struct inode *inode, struct file *file)
locking/lockdep_proc.c:116:static void *lc_start(struct seq_file *m, loff_t *pos)
locking/lockdep_proc.c:127:static void *lc_next(struct seq_file *m, void *v, loff_t *pos)
locking/lockdep_proc.c:133:static void lc_stop(struct seq_file *m, void *v)
locking/lockdep_proc.c:137:static int lc_show(struct seq_file *m, void *v)
locking/lockdep_proc.c:171:static int lockdep_chains_open(struct inode *inode, struct file *file)
locking/lockdep_proc.c:184:static void lockdep_stats_debug_show(struct seq_file *m)
locking/lockdep_proc.c:218:static int lockdep_stats_show(struct seq_file *m, void *v)
locking/lockdep_proc.c:351:static int lockdep_stats_open(struct inode *inode, struct file *file)
locking/lockdep_proc.c:378:static int lock_stat_cmp(const void *l, const void *r)
locking/lockdep_proc.c:389:static void seq_line(struct seq_file *m, char c, int offset, int length)
locking/lockdep_proc.c:400:static void snprint_time(char *buf, size_t bufsiz, s64 nr)
locking/lockdep_proc.c:410:static void seq_time(struct seq_file *m, s64 time)
locking/lockdep_proc.c:418:static void seq_lock_time(struct seq_file *m, struct lock_time *lt)
locking/lockdep_proc.c:427:static void seq_stats(struct seq_file *m, struct lock_stat_data *data)
locking/lockdep_proc.c:527:static void seq_header(struct seq_file *m)
locking/lockdep_proc.c:554:static void *ls_start(struct seq_file *m, loff_t *pos)
locking/lockdep_proc.c:569:static void *ls_next(struct seq_file *m, void *v, loff_t *pos)
locking/lockdep_proc.c:575:static void ls_stop(struct seq_file *m, void *v)
locking/lockdep_proc.c:579:static int ls_show(struct seq_file *m, void *v)
locking/lockdep_proc.c:596:static int lock_stat_open(struct inode *inode, struct file *file)
locking/lockdep_proc.c:647:static int lock_stat_release(struct inode *inode, struct file *file)
locking/rtmutex.c:59:static inline void clear_rt_mutex_waiters(struct rt_mutex *lock)
locking/rtmutex.c:65:static void fixup_rt_mutex_waiters(struct rt_mutex *lock)
locking/rtmutex.c:77:static inline void mark_rt_mutex_waiters(struct rt_mutex *lock)
locking/rtmutex.c:87:static inline void mark_rt_mutex_waiters(struct rt_mutex *lock)
locking/rtmutex.c:100:int rt_mutex_getprio(struct task_struct *task)
locking/rtmutex.c:114:static void __rt_mutex_adjust_prio(struct task_struct *task)
locking/rtmutex.c:131:static void rt_mutex_adjust_prio(struct task_struct *task)
locking/rtmutex.c:474:static void wakeup_next_waiter(struct rt_mutex *lock)
locking/rtmutex.c:560:void rt_mutex_adjust_pi(struct task_struct *task)
locking/rtmutex.c:884:void rt_mutex_destroy(struct rt_mutex *lock)
locking/rtmutex.c:903:void __rt_mutex_init(struct rt_mutex *lock, const char *name)
locking/rtmutex.c:1009:struct task_struct *rt_mutex_next_owner(struct rt_mutex *lock)
locking/rtmutex_common.h:62:static inline int rt_mutex_has_waiters(struct rt_mutex *lock)
locking/rtmutex_common.h:79:static inline int task_has_pi_waiters(struct task_struct *p)
locking/mutex-debug.h:30:static inline void mutex_set_owner(struct mutex *lock)
locking/mutex-debug.h:35:static inline void mutex_clear_owner(struct mutex *lock)
locking/spinlock_debug.c:52:static void spin_dump(raw_spinlock_t *lock, const char *msg)
locking/spinlock_debug.c:70:static void spin_bug(raw_spinlock_t *lock, const char *msg)
locking/spinlock_debug.c:89:static inline void debug_spin_lock_after(raw_spinlock_t *lock)
locking/spinlock_debug.c:95:static inline void debug_spin_unlock(raw_spinlock_t *lock)
locking/spinlock_debug.c:106:static void __spin_lock_debug(raw_spinlock_t *lock)
locking/spinlock_debug.c:133:void do_raw_spin_lock(raw_spinlock_t *lock)
locking/spinlock_debug.c:141:int do_raw_spin_trylock(raw_spinlock_t *lock)
locking/spinlock_debug.c:156:void do_raw_spin_unlock(raw_spinlock_t *lock)
locking/spinlock_debug.c:162:static void rwlock_bug(rwlock_t *lock, const char *msg)
locking/spinlock_debug.c:176:static void __read_lock_debug(rwlock_t *lock)
locking/spinlock_debug.c:201:void do_raw_read_lock(rwlock_t *lock)
locking/spinlock_debug.c:207:int do_raw_read_trylock(rwlock_t *lock)
locking/spinlock_debug.c:220:void do_raw_read_unlock(rwlock_t *lock)
locking/spinlock_debug.c:226:static inline void debug_write_lock_before(rwlock_t *lock)
locking/spinlock_debug.c:234:static inline void debug_write_lock_after(rwlock_t *lock)
locking/spinlock_debug.c:240:static inline void debug_write_unlock(rwlock_t *lock)
locking/spinlock_debug.c:251:static void __write_lock_debug(rwlock_t *lock)
locking/spinlock_debug.c:276:void do_raw_write_lock(rwlock_t *lock)
locking/spinlock_debug.c:283:int do_raw_write_trylock(rwlock_t *lock)
locking/spinlock_debug.c:298:void do_raw_write_unlock(rwlock_t *lock)
locking/rtmutex-tester.c:55:static int handle_op(struct test_thread_data *td, int lockwakeup)
locking/rtmutex-tester.c:139:void schedule_rt_mutex_test(struct rt_mutex *mutex)
locking/rtmutex-tester.c:233:static int test_func(void *data)
locking/rtmutex-tester.c:378:static int init_test_thread(int id)
locking/rtmutex-tester.c:390:static int init_rttest(void)
locking/mutex.h:20:static inline void mutex_set_owner(struct mutex *lock)
locking/mutex.h:25:static inline void mutex_clear_owner(struct mutex *lock)
locking/mutex.h:30:static inline void mutex_set_owner(struct mutex *lock)
locking/mutex.h:34:static inline void mutex_clear_owner(struct mutex *lock)
locking/spinlock.E:2581:int __ilog2_u32(u32 n)
locking/spinlock.E:2589:int __ilog2_u64(u64 n)
locking/spinlock.E:2601:bool is_power_of_2(unsigned long n)
locking/spinlock.E:2610:unsigned long __roundup_pow_of_two(unsigned long n)
locking/spinlock.E:2619:unsigned long __rounddown_pow_of_two(unsigned long n)
locking/spinlock.E:2687:int no_printk(const char *fmt, ...)
locking/spinlock.E:2852:void panic(const char *fmt, ...)
locking/spinlock.E:2858:void do_exit(long error_code)
locking/spinlock.E:2860:void complete_and_exit(struct completion *, long)
locking/spinlock.E:3086:void ____trace_printk_check_format(const char *fmt, ...)
locking/spinlock.E:4255:int __get_order(unsigned long size)
locking/spinlock.E:12282:u64 pvclock_get_nsec_offset(const struct pvclock_vcpu_time_info *src)
locking/spinlock.E:14709:void pgdat_resize_lock(struct pglist_data *pgdat, unsigned long *flags)
locking/spinlock.E:14714:void pgdat_resize_unlock(struct pglist_data *pgdat, unsigned long *flags)
locking/spinlock.E:14719:void pgdat_resize_init(struct pglist_data *pgdat)
locking/spinlock.E:15860:int __copy_from_user_nocheck(void *dst, const void *src, unsigned size)
locking/spinlock.E:15903:int __copy_from_user(void *dst, const void *src, unsigned size)
locking/spinlock.E:15910:int __copy_to_user_nocheck(void *dst, const void *src, unsigned size)
locking/spinlock.E:15953:int __copy_to_user(void *dst, const void *src, unsigned size)
locking/spinlock.E:15960:int __copy_in_user(void *dst, const void *src, unsigned size)
locking/spinlock.E:16828:struct timerqueue_node *timerqueue_getnext(struct timerqueue_head *head)
locking/spinlock.E:17565:void tasklet_hrtimer_cancel(struct tasklet_hrtimer *ttimer)
locking/spinlock.E:19256:void prop_inc_percpu(struct prop_descriptor *pd, struct prop_local_percpu *pl)
locking/spinlock.E:19299:void prop_inc_single(struct prop_descriptor *pd, struct prop_local_single *pl)
locking/spinlock.E:22791:bool same_thread_group(struct task_struct *p1, struct task_struct *p2)
locking/spinlock.E:26884:void __simple_attr_check_format(const char *fmt, ...)
locking/spinlock.E:30847:static void xen_lock_spinning(struct arch_spinlock *lock, __ticket_t want)
locking/spinlock.E:30917:static void xen_unlock_kick(struct arch_spinlock *lock, __ticket_t next)
locking/spinlock.E:30942:void xen_init_lock_cpu(int cpu)
locking/spinlock.E:30976:void xen_uninit_lock_cpu(int cpu)
module.c:162:int register_module_notifier(struct notifier_block * nb)
module.c:168:int unregister_module_notifier(struct notifier_block * nb)
module.c:190:static inline int strong_try_module_get(struct module *mod)
module.c:212:void __module_put_and_exit(struct module *mod, long code)
module.c:235:static void *section_addr(const struct load_info *info, const char *name)
module.c:405:static int cmp_name(const void *va, const void *vb)
module.c:471:struct module *find_module(const char *name)
module.c:484:static int percpu_modalloc(struct module *mod, struct load_info *info)
module.c:508:static void percpu_modfree(struct module *mod)
module.c:536:bool is_module_percpu_address(unsigned long addr)
module.c:569:static int percpu_modalloc(struct module *mod, struct load_info *info)
module.c:576:static inline void percpu_modfree(struct module *mod)
module.c:589:bool is_module_percpu_address(unsigned long addr)
module.c:633:static int module_unload_init(struct module *mod)
module.c:649:static int already_uses(struct module *a, struct module *b)
module.c:670:static int add_module_usage(struct module *a, struct module *b)
module.c:689:int ref_module(struct module *a, struct module *b)
module.c:711:static void module_unload_free(struct module *mod)
module.c:730:static inline int try_force_unload(unsigned int flags)
module.c:738:static inline int try_force_unload(unsigned int flags)
module.c:752:static int __try_stop_module(void *_sref)
module.c:767:static int try_stop_module(struct module *mod, int flags, int *forced)
module.c:774:unsigned long module_refcount(struct module *mod)
module.c:879:static inline void print_unload_info(struct seq_file *m, struct module *mod)
module.c:902:void __symbol_put(const char *symbol)
module.c:915:void symbol_put_addr(void *addr)
module.c:940:void __module_get(struct module *module)
module.c:951:bool try_module_get(struct module *module)
module.c:970:void module_put(struct module *module)
module.c:984:static inline void print_unload_info(struct seq_file *m, struct module *mod)
module.c:990:static inline void module_unload_free(struct module *mod)
module.c:994:int ref_module(struct module *a, struct module *b)
module.c:1000:static inline int module_unload_init(struct module *mod)
module.c:1006:static size_t module_flags_taint(struct module *mod, char *buf)
module.c:1111:static int try_to_force_load(struct module *mod, const char *reason)
module.c:1290:static inline bool sect_empty(const Elf_Shdr *sect)
module.c:1317:static void free_sect_attrs(struct module_sect_attrs *sect_attrs)
module.c:1326:static void add_sect_attrs(struct module *mod, const struct load_info *info)
module.c:1380:static void remove_sect_attrs(struct module *mod)
module.c:1425:static void add_notes_attrs(struct module *mod, const struct load_info *info)
module.c:1484:static void remove_notes_attrs(struct module *mod)
module.c:1497:static inline void remove_sect_attrs(struct module *mod)
module.c:1506:static inline void remove_notes_attrs(struct module *mod)
module.c:1511:static void add_usage_links(struct module *mod)
module.c:1526:static void del_usage_links(struct module *mod)
module.c:1538:static int module_add_modinfo_attrs(struct module *mod)
module.c:1564:static void module_remove_modinfo_attrs(struct module *mod)
module.c:1580:static void mod_kobject_put(struct module *mod)
module.c:1588:static int mod_sysfs_init(struct module *mod)
module.c:1663:static void mod_sysfs_fini(struct module *mod)
module.c:1680:static void mod_sysfs_fini(struct module *mod)
module.c:1684:static void module_remove_modinfo_attrs(struct module *mod)
module.c:1688:static void del_usage_links(struct module *mod)
module.c:1694:static void mod_sysfs_teardown(struct module *mod)
module.c:1708:static int __unlink_module(void *_mod)
module.c:1760:static void unset_module_core_ro_nx(struct module *mod)
module.c:1770:static void unset_module_init_ro_nx(struct module *mod)
module.c:1781:void set_all_modules_text_rw(void)
module.c:1804:void set_all_modules_text_ro(void)
module.c:1841:static void free_module(struct module *mod)
module.c:1886:void *__symbol_get(const char *symbol)
module.c:1907:static int verify_export_symbols(struct module *mod)
module.c:1939:static int simplify_symbols(struct module *mod, const struct load_info *info)
module.c:1998:static int apply_relocations(struct module *mod, const struct load_info *info)
module.c:2051:static void layout_sections(struct module *mod, struct load_info *info)
module.c:2127:static void set_license(struct module *mod, const char *license)
module.c:2142:static char *next_string(char *string, unsigned long *secsize)
module.c:2160:static char *get_modinfo(struct load_info *info, const char *tag)
module.c:2174:static void setup_modinfo(struct module *mod, struct load_info *info)
module.c:2185:static void free_modinfo(struct module *mod)
module.c:2219:static char elf_type(const Elf_Sym *sym, const struct load_info *info)
module.c:2287:static void layout_symtab(struct module *mod, struct load_info *info)
module.c:2324:static void add_kallsyms(struct module *mod, const struct load_info *info)
module.c:2356:static inline void layout_symtab(struct module *mod, struct load_info *info)
module.c:2360:static void add_kallsyms(struct module *mod, const struct load_info *info)
module.c:2365:static void dynamic_debug_setup(struct _ddebug *debug, unsigned int num)
module.c:2376:static void dynamic_debug_remove(struct _ddebug *debug)
module.c:2387:static void *module_alloc_update_bounds(unsigned long size)
module.c:2431:static int module_sig_check(struct load_info *info)
module.c:2459:static int module_sig_check(struct load_info *info)
module.c:2466:static int elf_header_check(struct load_info *info)
module.c:2513:static int copy_module_from_fd(int fd, struct load_info *info)
module.c:2569:static void free_copy(struct load_info *info)
module.c:2574:static int rewrite_section_headers(struct load_info *info, int flags)
module.c:2667:static int check_modinfo(struct module *mod, struct load_info *info, int flags)
module.c:2701:static int find_module_sections(struct module *mod, struct load_info *info)
module.c:2784:static int move_module(struct module *mod, struct load_info *info)
module.c:2847:static int check_module_license_and_versions(struct module *mod)
module.c:2883:static void flush_module_icache(const struct module *mod)
module.c:2955:static void module_deallocate(struct module *mod, struct load_info *info)
module.c:2969:static int post_relocation(struct module *mod, const struct load_info *info)
module.c:2986:static bool finished_loading(const char *name)
module.c:3001:static void do_mod_ctors(struct module *mod)
module.c:3012:static int do_init_module(struct module *mod)
module.c:3107:static int may_init_module(void)
module.c:3120:static int add_unformed_module(struct module *mod)
module.c:3153:static int complete_formation(struct module *mod, struct load_info *info)
module.c:3176:static int unknown_module_param_cb(char *param, char *val, const char *modname)
module.c:3364:static inline int within(unsigned long addr, void *start, unsigned long size)
module.c:3374:static inline int is_arm_mapping_symbol(const char *str)
module.c:3456:int lookup_module_symbol_name(unsigned long addr, char *symname)
module.c:3547:unsigned long module_kallsyms_lookup_name(const char *name)
module.c:3592:static char *module_flags(struct module *mod, char *buf)
module.c:3617:static void *m_start(struct seq_file *m, loff_t *pos)
module.c:3623:static void *m_next(struct seq_file *m, void *p, loff_t *pos)
module.c:3628:static void m_stop(struct seq_file *m, void *p)
module.c:3633:static int m_show(struct seq_file *m, void *p)
module.c:3674:static int modules_open(struct inode *inode, struct file *file)
module.c:3727:bool is_module_address(unsigned long addr)
module.c:3745:struct module *__module_address(unsigned long addr)
module.c:3771:bool is_module_text_address(unsigned long addr)
module.c:3789:struct module *__module_text_address(unsigned long addr)
module.c:3803:void print_modules(void)
module_signing.c:187:int mod_verify_sig(const void *mod, unsigned long *_modlen)
notifier.c:519:void srcu_init_notifier_head(struct srcu_notifier_head *nh)
notifier.c:544:int register_die_notifier(struct notifier_block *nb)
notifier.c:551:int unregister_die_notifier(struct notifier_block *nb)
nsproxy.c:124:int copy_namespaces(unsigned long flags, struct task_struct *tsk)
nsproxy.c:158:void free_nsproxy(struct nsproxy *ns)
nsproxy.c:201:void switch_task_namespaces(struct task_struct *p, struct nsproxy *new)
nsproxy.c:223:void exit_task_namespaces(struct task_struct *p)
padata.c:36:static int padata_index_to_cpu(struct parallel_data *pd, int cpu_index)
padata.c:47:static int padata_cpu_hash(struct parallel_data *pd)
padata.c:63:static void padata_parallel_worker(struct work_struct *parallel_work)
padata.c:216:static void padata_reorder(struct parallel_data *pd)
padata.c:285:static void padata_reorder_timer(unsigned long arg)
padata.c:292:static void padata_serial_worker(struct work_struct *serial_work)
padata.c:328:void padata_do_serial(struct padata_priv *padata)
padata.c:367:static void __padata_list_init(struct padata_list *pd_list)
padata.c:374:static void padata_init_squeues(struct parallel_data *pd)
padata.c:388:static void padata_init_pqueues(struct parallel_data *pd)
padata.c:449:static void padata_free_pd(struct parallel_data *pd)
padata.c:459:static void padata_flush_queues(struct parallel_data *pd)
padata.c:483:static void __padata_start(struct padata_instance *pinst)
padata.c:488:static void __padata_stop(struct padata_instance *pinst)
padata.c:677:static int __padata_add_cpu(struct padata_instance *pinst, int cpu)
padata.c:709:int padata_add_cpu(struct padata_instance *pinst, int cpu, int mask)
padata.c:733:static int __padata_remove_cpu(struct padata_instance *pinst, int cpu)
padata.c:768:int padata_remove_cpu(struct padata_instance *pinst, int cpu, int mask)
padata.c:797:int padata_start(struct padata_instance *pinst)
padata.c:819:void padata_stop(struct padata_instance *pinst)
padata.c:829:static inline int pinst_has_cpu(struct padata_instance *pinst, int cpu)
padata.c:877:static void __padata_free(struct padata_instance *pinst)
padata.c:895:static void padata_sysfs_release(struct kobject *kobj)
padata.c:1027:struct padata_instance *padata_alloc_possible(struct workqueue_struct *wq)
padata.c:1106:void padata_free(struct padata_instance *pinst)
panic.c:43:static long no_blink(int state)
panic.c:69:void panic(const char *fmt, ...)
panic.c:255:int test_taint(unsigned flag)
panic.c:261:unsigned long get_taint(void)
panic.c:274:void add_taint(unsigned flag, enum lockdep_ok lockdep_ok)
panic.c:284:static void spin_msec(int msecs)
panic.c:298:static void do_oops_enter_exit(void)
panic.c:337:int oops_may_print(void)
panic.c:356:void oops_enter(void)
panic.c:369:static int init_oops_id(void)
panic.c:380:void print_oops_end_marker(void)
panic.c:391:void oops_exit(void)
panic.c:423:void warn_slowpath_fmt(const char *file, int line, const char *fmt, ...)
panic.c:448:void warn_slowpath_null(const char *file, int line)
panic.c:462:void __stack_chk_fail(void)
params.c:37:static void *kmalloc_parameter(unsigned int size)
params.c:50:static void maybe_kfree_parameter(void *param)
params.c:63:static char dash2underscore(char c)
params.c:70:bool parameqn(const char *a, const char *b, size_t n)
params.c:81:bool parameq(const char *a, const char *b)
params.c:129:static char *next_arg(char *args, char **param, char **val)
params.c:264:int param_set_charp(const char *val, const struct kernel_param *kp)
params.c:287:int param_get_charp(char *buffer, const struct kernel_param *kp)
params.c:293:static void param_free_charp(void *arg)
params.c:306:int param_set_bool(const char *val, const struct kernel_param *kp)
params.c:316:int param_get_bool(char *buffer, const struct kernel_param *kp)
params.c:331:int param_set_invbool(const char *val, const struct kernel_param *kp)
params.c:345:int param_get_invbool(char *buffer, const struct kernel_param *kp)
params.c:357:int param_set_bint(const char *val, const struct kernel_param *kp)
params.c:430:static int param_array_set(const char *val, const struct kernel_param *kp)
params.c:440:static int param_array_get(char *buffer, const struct kernel_param *kp)
params.c:461:static void param_array_free(void *arg)
params.c:478:int param_set_copystring(const char *val, const struct kernel_param *kp)
params.c:492:int param_get_string(char *buffer, const struct kernel_param *kp)
params.c:573:void __kernel_param_lock(void)
params.c:579:void __kernel_param_unlock(void)
params.c:664:static void free_module_param_attrs(struct module_kobject *mk)
params.c:713:void module_param_sysfs_remove(struct module *mod)
params.c:724:void destroy_params(const struct kernel_param *params, unsigned num)
params.c:902:static int uevent_filter(struct kset *kset, struct kobject *kobj)
params.c:918:static void module_kobj_release(struct kobject *kobj)
pid.c:102:static void free_pidmap(struct upid *upid)
pid.c:115:static int pid_before(int base, int a, int b)
pid.c:141:static void set_last_pid(struct pid_namespace *pid_ns, int base, int pid)
pid.c:151:static int alloc_pidmap(struct pid_namespace *pid_ns)
pid.c:213:int next_pidmap(struct pid_namespace *pid_ns, unsigned int last)
pid.c:234:void put_pid(struct pid *pid)
pid.c:250:static void delayed_put_pid(struct rcu_head *rhp)
pid.c:256:void free_pid(struct pid *pid)
pid.c:294:struct pid *alloc_pid(struct pid_namespace *ns)
pid.c:353:void disable_pid_allocation(struct pid_namespace *ns)
pid.c:360:struct pid *find_pid_ns(int nr, struct pid_namespace *ns)
pid.c:374:struct pid *find_vpid(int nr)
pid.c:383:void attach_pid(struct task_struct *task, enum pid_type type)
pid.c:409:void detach_pid(struct task_struct *task, enum pid_type type)
pid.c:429:struct task_struct *pid_task(struct pid *pid, enum pid_type type)
pid.c:446:struct task_struct *find_task_by_pid_ns(pid_t nr, struct pid_namespace *ns)
pid.c:454:struct task_struct *find_task_by_vpid(pid_t vnr)
pid.c:459:struct pid *get_task_pid(struct task_struct *task, enum pid_type type)
pid.c:471:struct task_struct *get_pid_task(struct pid *pid, enum pid_type type)
pid.c:483:struct pid *find_get_pid(pid_t nr)
pid.c:495:pid_t pid_nr_ns(struct pid *pid, struct pid_namespace *ns)
pid.c:509:pid_t pid_vnr(struct pid *pid)
pid.c:534:pid_t task_tgid_nr_ns(struct task_struct *tsk, struct pid_namespace *ns)
pid.c:540:struct pid_namespace *task_active_pid_ns(struct task_struct *tsk)
pid.c:551:struct pid *find_ge_pid(int nr, struct pid_namespace *ns)
pid_namespace.c:73:static void proc_cleanup_work(struct work_struct *work)
pid_namespace.c:135:static void delayed_free_pidns(struct rcu_head *p)
pid_namespace.c:141:static void destroy_pid_namespace(struct pid_namespace *ns)
pid_namespace.c:162:static void free_pid_ns(struct kref *kref)
pid_namespace.c:170:void put_pid_ns(struct pid_namespace *ns)
pid_namespace.c:183:void zap_pid_ns_processes(struct pid_namespace *pid_ns)
pid_namespace.c:287:int reboot_pid_ns(struct pid_namespace *pid_ns, int cmd)
pid_namespace.c:316:static void *pidns_get(struct task_struct *task)
pid_namespace.c:327:static void pidns_put(void *ns)
pid_namespace.c:332:static int pidns_install(struct nsproxy *nsproxy, void *ns)
posix-cpu-timers.c:22:void update_rlimit_cpu(struct task_struct *task, unsigned long rlim_new)
posix-cpu-timers.c:31:static int check_clock(const clockid_t which_clock)
posix-cpu-timers.c:119:static inline int task_cputime_zero(const struct task_cputime *cputime)
posix-cpu-timers.c:199:static void update_gt_cputime(struct task_cputime *a, struct task_cputime *b)
posix-cpu-timers.c:211:void thread_group_cputimer(struct task_struct *tsk, struct task_cputime *times)
posix-cpu-timers.c:264:static int posix_cpu_clock_get(const clockid_t which_clock, struct timespec *tp)
posix-cpu-timers.c:326:static int posix_cpu_timer_create(struct k_itimer *new_timer)
posix-cpu-timers.c:372:static int posix_cpu_timer_del(struct k_itimer *timer)
posix-cpu-timers.c:434:void posix_cpu_timers_exit(struct task_struct *tsk)
posix-cpu-timers.c:445:void posix_cpu_timers_exit_group(struct task_struct *tsk)
posix-cpu-timers.c:456:static void clear_dead_task(struct k_itimer *itimer, unsigned long long now)
posix-cpu-timers.c:473:static inline int expires_gt(cputime_t expires, cputime_t new_exp)
posix-cpu-timers.c:483:static void arm_timer(struct k_itimer *timer)
posix-cpu-timers.c:539:static void cpu_timer_fire(struct k_itimer *timer)
posix-cpu-timers.c:598:static void nohz_kick_work_fn(struct work_struct *work)
posix-cpu-timers.c:609:static void posix_cpu_timer_kick_nohz(void)
posix-cpu-timers.c:614:bool posix_cpu_timers_can_stop_tick(struct task_struct *tsk)
posix-cpu-timers.c:786:static void posix_cpu_timer_get(struct k_itimer *timer, struct itimerspec *itp)
posix-cpu-timers.c:943:static void stop_process_timers(struct signal_struct *sig)
posix-cpu-timers.c:1060:void posix_cpu_timer_schedule(struct k_itimer *timer)
posix-cpu-timers.c:1159:static inline int fastpath_timer_check(struct task_struct *tsk)
posix-cpu-timers.c:1197:void run_posix_cpu_timers(struct task_struct *tsk)
posix-cpu-timers.c:1441:static long posix_cpu_nsleep_restart(struct restart_block *restart_block)
posix-cpu-timers.c:1479:static int process_cpu_timer_create(struct k_itimer *timer)
posix-cpu-timers.c:1490:static long process_cpu_nsleep_restart(struct restart_block *restart_block)
posix-cpu-timers.c:1504:static int thread_cpu_timer_create(struct k_itimer *timer)
posix-timers.c:148:static int hash(struct signal_struct *sig, unsigned int nr)
posix-timers.c:174:static int posix_timer_add(struct k_itimer *timer)
posix-timers.c:198:static inline void unlock_timer(struct k_itimer *timr, unsigned long flags)
posix-timers.c:204:static int posix_clock_realtime_get(clockid_t which_clock, struct timespec *tp)
posix-timers.c:226:static int posix_ktime_get_ts(clockid_t which_clock, struct timespec *tp)
posix-timers.c:235:static int posix_get_monotonic_raw(clockid_t which_clock, struct timespec *tp)
posix-timers.c:242:static int posix_get_realtime_coarse(clockid_t which_clock, struct timespec *tp)
posix-timers.c:255:static int posix_get_coarse_res(const clockid_t which_clock, struct timespec *tp)
posix-timers.c:261:static int posix_get_boottime(const clockid_t which_clock, struct timespec *tp)
posix-timers.c:267:static int posix_get_tai(clockid_t which_clock, struct timespec *tp)
posix-timers.c:349:static void schedule_next_timer(struct k_itimer *timr)
posix-timers.c:377:void do_schedule_next_timer(struct siginfo *info)
posix-timers.c:397:int posix_timer_event(struct k_itimer *timr, int si_private)
posix-timers.c:552:static void k_itimer_rcu_free(struct rcu_head *head)
posix-timers.c:561:static void release_posix_timer(struct k_itimer *tmr, int it_id_set)
posix-timers.c:585:static int common_timer_create(struct k_itimer *new_timer)
posix-timers.c:915:static int common_timer_del(struct k_itimer *timer)
posix-timers.c:924:static inline int timer_delete_hook(struct k_itimer *timer)
posix-timers.c:966:static void itimer_delete(struct k_itimer *timer)
posix-timers.c:992:void exit_itimers(struct signal_struct *sig)
posix-timers.c:1112:long clock_nanosleep_restart(struct restart_block *restart_block)
power/console.c:44:void pm_vt_switch_required(struct device *dev, bool required)
power/console.c:76:void pm_vt_switch_unregister(struct device *dev)
power/console.c:105:static bool pm_vt_switch(void)
power/console.c:128:int pm_prepare_console(void)
power/console.c:141:void pm_restore_console(void)
power/power.h:28:static inline int init_header_complete(struct swsusp_info *info)
power/power.h:33:static inline char *check_image_kernel(struct swsusp_info *info)
power/power.h:184:static inline int suspend_devices_and_enter(suspend_state_t state)
power/power.h:233:static inline int suspend_freeze_processes(void)
power/power.h:256:static inline void suspend_thaw_processes(void)
power/power.h:261:static inline int suspend_freeze_processes(void)
power/power.h:266:static inline void suspend_thaw_processes(void)
power/swap.c:121:static int swsusp_extents_insert(unsigned long swap_offset)
power/swap.c:167:sector_t alloc_swapdev_block(int swap)
power/swap.c:187:void free_all_swap_pages(int swap)
power/swap.c:204:int swsusp_swap_in_use(void)
power/swap.c:220:static int mark_swapfiles(struct swap_map_handle *handle, unsigned int flags)
power/swap.c:248:static int swsusp_swap_check(void)
power/swap.c:276:static int write_page(void *buf, sector_t offset, struct bio **bio_chain)
power/swap.c:310:static void release_swap_writer(struct swap_map_handle *handle)
power/swap.c:317:static int get_swap_writer(struct swap_map_handle *handle)
power/swap.c:389:static int flush_swap_writer(struct swap_map_handle *handle)
power/swap.c:499:static int crc32_threadfn(void *data)
power/swap.c:543:static int lzo_compress_threadfn(void *data)
power/swap.c:792:static int enough_swap(unsigned int nr_pages, unsigned int flags)
power/swap.c:813:int swsusp_write(unsigned int flags)
power/swap.c:859:static void release_swap_reader(struct swap_map_handle *handle)
power/swap.c:949:static int swap_reader_finish(struct swap_map_handle *handle)
power/swap.c:1031:static int lzo_decompress_threadfn(void *data)
power/swap.c:1388:int swsusp_read(unsigned int *flags_p)
power/swap.c:1423:int swsusp_check(void)
power/swap.c:1465:void swsusp_close(fmode_t mode)
power/swap.c:1480:int swsusp_unmark(void)
power/swap.c:1503:static int swsusp_header_init(void)
power/main.c:29:int register_pm_notifier(struct notifier_block *nb)
power/main.c:35:int unregister_pm_notifier(struct notifier_block *nb)
power/main.c:41:int pm_notifier_call_chain(unsigned long val)
power/main.c:138:static char *suspend_step_name(enum suspend_stat_step step)
power/main.c:158:static int suspend_stats_show(struct seq_file *s, void *unused)
power/main.c:214:static int suspend_stats_open(struct inode *inode, struct file *file)
power/main.c:271:static inline void pm_print_times_init(void)
power/main.c:313:static suspend_state_t decode_state(const char *buf, size_t n)
power/suspend.c:40:static bool need_suspend_ops(suspend_state_t state)
power/suspend.c:48:static void freeze_begin(void)
power/suspend.c:53:static void freeze_enter(void)
power/suspend.c:58:void freeze_wake(void)
power/suspend.c:69:void suspend_set_ops(const struct platform_suspend_ops *ops)
power/suspend.c:77:bool valid_state(suspend_state_t state)
power/suspend.c:108:int suspend_valid_only_mem(suspend_state_t state)
power/suspend.c:114:static int suspend_test(int level)
power/suspend.c:133:static int suspend_prepare(suspend_state_t state)
power/suspend.c:177:static int suspend_enter(suspend_state_t state, bool *wakeup)
power/suspend.c:255:int suspend_devices_and_enter(suspend_state_t state)
power/suspend.c:308:static void suspend_finish(void)
power/suspend.c:323:static int enter_state(suspend_state_t state)
power/suspend.c:368:int pm_suspend(suspend_state_t state)
power/wakelock.c:34:ssize_t pm_show_wakelocks(char *buf, bool show_active)
power/wakelock.c:60:static inline bool wakelocks_limit_exceeded(void)
power/wakelock.c:65:static inline void increment_wakelocks_number(void)
power/wakelock.c:70:static inline void decrement_wakelocks_number(void)
power/wakelock.c:87:static inline void wakelocks_lru_add(struct wakelock *wl)
power/wakelock.c:92:static inline void wakelocks_lru_most_recent(struct wakelock *wl)
power/wakelock.c:97:static void wakelocks_gc(void)
power/wakelock.c:184:int pm_wake_lock(const char *buf)
power/wakelock.c:232:int pm_wake_unlock(const char *buf)
power/hibernate.c:68:void hibernation_set_ops(const struct platform_hibernation_ops *ops)
power/hibernate.c:88:bool system_entering_hibernation(void)
power/hibernate.c:95:static void hibernation_debug_sleep(void)
power/hibernate.c:101:static int hibernation_test(int level)
power/hibernate.c:117:static int platform_begin(int platform_mode)
power/hibernate.c:127:static void platform_end(int platform_mode)
power/hibernate.c:141:static int platform_pre_snapshot(int platform_mode)
power/hibernate.c:156:static void platform_leave(int platform_mode)
power/hibernate.c:171:static void platform_finish(int platform_mode)
power/hibernate.c:187:static int platform_pre_restore(int platform_mode)
power/hibernate.c:204:static void platform_restore_cleanup(int platform_mode)
power/hibernate.c:214:static void platform_recover(int platform_mode)
power/hibernate.c:257:static int create_image(int platform_mode)
power/hibernate.c:325:int hibernation_snapshot(int platform_mode)
power/hibernate.c:410:static int resume_target_kernel(bool platform_mode)
power/hibernate.c:483:int hibernation_restore(int platform_mode)
power/hibernate.c:506:int hibernation_platform_enter(void)
power/hibernate.c:584:static void power_down(void)
power/hibernate.c:631:int hibernate(void)
power/hibernate.c:719:static int software_resume(void)
power/process.c:26:static int try_to_freeze_tasks(bool user_only)
power/process.c:117:int freeze_processes(void)
power/process.c:155:int freeze_kernel_threads(void)
power/process.c:173:void thaw_processes(void)
power/process.c:206:void thaw_kernel_threads(void)
power/poweroff.c:20:static void do_poweroff(struct work_struct *dummy)
power/poweroff.c:27:static void handle_poweroff(int key)
power/qos.c:128:static inline int pm_qos_get_value(struct pm_qos_constraints *c)
power/qos.c:147:s32 pm_qos_read_value(struct pm_qos_constraints *c)
power/qos.c:152:static inline void pm_qos_set_value(struct pm_qos_constraints *c, s32 value)
power/qos.c:287:int pm_qos_request(int pm_qos_class)
power/qos.c:293:int pm_qos_request_active(struct pm_qos_request *req)
power/qos.c:316:static void pm_qos_work_fn(struct work_struct *work)
power/qos.c:419:void pm_qos_remove_request(struct pm_qos_request *req)
power/qos.c:448:int pm_qos_add_notifier(int pm_qos_class, struct notifier_block *notifier)
power/qos.c:468:int pm_qos_remove_notifier(int pm_qos_class, struct notifier_block *notifier)
power/qos.c:481:static int register_pm_qos_misc(struct pm_qos_object *qos)
power/qos.c:490:static int find_pm_qos_object_by_minor(int minor)
power/qos.c:503:static int pm_qos_power_open(struct inode *inode, struct file *filp)
power/qos.c:521:static int pm_qos_power_release(struct inode *inode, struct file *filp)
power/user.c:47:static int snapshot_open(struct inode *inode, struct file *filp)
power/user.c:107:static int snapshot_release(struct inode *inode, struct file *filp)
power/autosleep.c:26:static void try_to_suspend(struct work_struct *work)
power/autosleep.c:68:void queue_up_suspend_work(void)
power/autosleep.c:74:suspend_state_t pm_autosleep_state(void)
power/autosleep.c:79:int pm_autosleep_lock(void)
power/autosleep.c:84:void pm_autosleep_unlock(void)
power/autosleep.c:89:int pm_autosleep_set_state(suspend_state_t state)
power/block_io.c:65:int hib_bio_read_page(pgoff_t page_off, void *addr, struct bio **bio_chain)
power/block_io.c:71:int hib_bio_write_page(pgoff_t page_off, void *addr, struct bio **bio_chain)
power/block_io.c:77:int hib_wait_on_bio_chain(struct bio **bio_chain)
power/snapshot.c:95:static void *get_image_page(gfp_t gfp_mask, int safe_needed)
power/snapshot.c:114:unsigned long get_safe_page(gfp_t gfp_mask)
power/snapshot.c:136:static inline void free_image_page(void *addr, int clear_nosave_free)
power/snapshot.c:202:static void *chain_alloc(struct chain_allocator *ca, unsigned int size)
power/snapshot.c:286:static void memory_bm_position_reset(struct memory_bitmap *bm)
power/snapshot.c:328:static void free_mem_extents(struct list_head *list)
power/snapshot.c:344:static int create_mem_extents(struct list_head *list, gfp_t gfp_mask)
power/snapshot.c:460:static void memory_bm_free(struct memory_bitmap *bm, int clear_nosave_free)
power/snapshot.c:510:static void memory_bm_set_bit(struct memory_bitmap *bm, unsigned long pfn)
power/snapshot.c:521:static int mem_bm_set_bit_check(struct memory_bitmap *bm, unsigned long pfn)
power/snapshot.c:533:static void memory_bm_clear_bit(struct memory_bitmap *bm, unsigned long pfn)
power/snapshot.c:544:static int memory_bm_test_bit(struct memory_bitmap *bm, unsigned long pfn)
power/snapshot.c:555:static bool memory_bm_pfn_present(struct memory_bitmap *bm, unsigned long pfn)
power/snapshot.c:664:void swsusp_set_page_free(struct page *page)
power/snapshot.c:670:static int swsusp_page_is_free(struct page *page)
power/snapshot.c:676:void swsusp_unset_page_free(struct page *page)
power/snapshot.c:682:static void swsusp_set_page_forbidden(struct page *page)
power/snapshot.c:688:int swsusp_page_is_forbidden(struct page *page)
power/snapshot.c:694:static void swsusp_unset_page_forbidden(struct page *page)
power/snapshot.c:705:static void mark_nosave_pages(struct memory_bitmap *bm)
power/snapshot.c:741:int create_basic_memory_bitmaps(void)
power/snapshot.c:791:void free_basic_memory_bitmaps(void)
power/snapshot.c:816:unsigned int snapshot_additional_pages(struct zone *zone)
power/snapshot.c:899:static inline void *saveable_highmem_page(struct zone *z, unsigned long p)
power/snapshot.c:966:static inline void do_copy_page(long *dst, long *src)
power/snapshot.c:981:static void safe_copy_page(void *dst, struct page *s_page)
power/snapshot.c:1001:static void copy_data_page(unsigned long dst_pfn, unsigned long src_pfn)
power/snapshot.c:1031:static inline void copy_data_page(unsigned long dst_pfn, unsigned long src_pfn)
power/snapshot.c:1094:void swsusp_free(void)
power/snapshot.c:1210:static void free_unnecessary_pages(void)
power/snapshot.c:1310:int hibernate_preallocate_memory(void)
power/snapshot.c:1487:static int enough_free_mem(unsigned int nr_pages, unsigned int nr_highmem)
power/snapshot.c:1509:static inline int get_highmem_buffer(int safe_needed)
power/snapshot.c:1632:static int init_header_complete(struct swsusp_info *info)
power/snapshot.c:1639:static char *check_image_kernel(struct swsusp_info *info)
power/snapshot.c:1655:unsigned long snapshot_get_image_size(void)
power/snapshot.c:1660:static int init_header(struct swsusp_info *info)
power/snapshot.c:1707:int snapshot_read_next(struct snapshot_handle *handle)
power/snapshot.c:1759:static int mark_unsafe_pages(struct memory_bitmap *bm)
power/snapshot.c:1802:static int check_header(struct swsusp_info *info)
power/snapshot.c:1838:static int unpack_orig_pfns(unsigned long *buf, struct memory_bitmap *bm)
power/snapshot.c:2022:static void copy_last_highmem_page(void)
power/snapshot.c:2034:static inline int last_highmem_page_copied(void)
power/snapshot.c:2039:static inline void free_highmem_data(void)
power/snapshot.c:2170:static void *get_buffer(struct memory_bitmap *bm, struct chain_allocator *ca)
power/snapshot.c:2222:int snapshot_write_next(struct snapshot_handle *handle)
power/snapshot.c:2296:void snapshot_write_finalize(struct snapshot_handle *handle)
power/snapshot.c:2309:int snapshot_image_loaded(struct snapshot_handle *handle)
power/snapshot.c:2341:int restore_highmem(void)
power/suspend_test.c:26:void suspend_test_start(void)
power/suspend_test.c:35:void suspend_test_finish(const char *label)
printk/printk.c:257:static char *log_text(const struct printk_log *msg)
printk/printk.c:263:static char *log_dict(const struct printk_log *msg)
printk/printk.c:283:static u32 log_next(u32 idx)
printk/printk.c:367:static int syslog_action_restricted(int type)
printk/printk.c:379:static int check_syslog_permissions(int type, bool from_file)
printk/printk.c:595:static loff_t devkmsg_llseek(struct file *file, loff_t offset, int whence)
printk/printk.c:656:static int devkmsg_open(struct inode *inode, struct file *file)
printk/printk.c:685:static int devkmsg_release(struct inode *inode, struct file *file)
printk/printk.c:715:void log_buf_kexec_setup(void)
printk/printk.c:827:static void boot_delay_msec(int level)
printk/printk.c:854:static inline void boot_delay_msec(int level)
printk/printk.c:866:static size_t print_time(u64 ts, char *buf)
printk/printk.c:882:static size_t print_prefix(const struct printk_log *msg, bool syslog, char *buf)
printk/printk.c:964:static int syslog_print(char __user *buf, int size)
printk/printk.c:1028:static int syslog_print_all(char __user *buf, int size, bool clear)
printk/printk.c:1124:int do_syslog(int type, char __user *buf, int len, bool from_file)
printk/printk.c:1264:static void call_console_drivers(int level, const char *text, size_t len)
printk/printk.c:1294:static void zap_locks(void)
printk/printk.c:1312:static int have_callable_console(void)
printk/printk.c:1331:static inline int can_use_console(unsigned int cpu)
printk/printk.c:1346:static int console_trylock_for_printk(unsigned int cpu)
printk/printk.c:1375:static inline void printk_delay(void)
printk/printk.c:1405:static void cont_flush(enum log_flags flags)
printk/printk.c:1433:static bool cont_add(int facility, int level, const char *text, size_t len)
printk/printk.c:1463:static size_t cont_print_text(char *text, size_t size)
printk/printk.c:1729:void early_vprintk(const char *fmt, va_list ap)
printk/printk.c:1834:int add_preferred_console(char *name, int idx, char *options)
printk/printk.c:1839:int update_console_cmdline(char *name, int idx, char *name_new, int idx_new, char *options)
printk/printk.c:1877:void suspend_console(void)
printk/printk.c:1887:void resume_console(void)
printk/printk.c:1929:void console_lock(void)
printk/printk.c:1950:int console_trylock(void)
printk/printk.c:1965:int is_console_locked(void)
printk/printk.c:1970:static void console_cont_flush(char *text, size_t size)
printk/printk.c:2013:void console_unlock(void)
printk/printk.c:2128:void console_unblank(void)
printk/printk.c:2153:struct tty_driver *console_device(int *index)
printk/printk.c:2175:void console_stop(struct console *console)
printk/printk.c:2183:void console_start(struct console *console)
printk/printk.c:2222:void register_console(struct console *newcon)
printk/printk.c:2377:int unregister_console(struct console *console)
printk/printk.c:2445:static void wake_up_klogd_work_func(struct irq_work *irq_work)
printk/printk.c:2463:void wake_up_klogd(void)
printk/printk.c:2473:int printk_sched(const char *fmt, ...)
printk/printk.c:2502:int __printk_ratelimit(const char *func)
printk/printk.c:2542:int kmsg_dump_register(struct kmsg_dumper *dumper)
printk/printk.c:2571:int kmsg_dump_unregister(struct kmsg_dumper *dumper)
printk/printk.c:2600:void kmsg_dump(enum kmsg_dump_reason reason)
printk/printk.c:2823:void kmsg_dump_rewind_nolock(struct kmsg_dumper *dumper)
printk/printk.c:2839:void kmsg_dump_rewind(struct kmsg_dumper *dumper)
printk/printk.c:2878:void dump_stack_print_info(const char *log_lvl)
printk/printk.c:2900:void show_regs_print_info(const char *log_lvl)
printk/braille.c:10:char *_braille_console_setup(char **str, char **brl_options)
profile.c:53:int profile_setup(char *str)
profile.c:141:void profile_task_exit(struct task_struct *task)
profile.c:146:int profile_handoff_task(struct task_struct *task)
profile.c:153:void profile_munmap(unsigned long addr)
profile.c:158:int task_handoff_register(struct notifier_block *n)
profile.c:164:int task_handoff_unregister(struct notifier_block *n)
profile.c:170:int profile_event_register(enum profile_type type, struct notifier_block *n)
profile.c:189:int profile_event_unregister(enum profile_type type, struct notifier_block *n)
profile.c:240:static void __profile_flip_buffers(void *unused)
profile.c:247:static void profile_flip_buffers(void)
profile.c:270:static void profile_discard_flip_buffers(void)
profile.c:285:static void do_profile_hits(int type, void *__pc, unsigned int nr_hits)
profile.c:397:static void do_profile_hits(int type, void *__pc, unsigned int nr_hits)
profile.c:405:void profile_hits(int type, void *__pc, unsigned int nr_hits)
profile.c:413:void profile_tick(int type)
profile.c:427:static int prof_cpu_mask_proc_show(struct seq_file *m, void *v)
profile.c:434:static int prof_cpu_mask_proc_open(struct inode *inode, struct file *file)
profile.c:465:void create_prof_cpu_mask(void)
profile.c:539:static void profile_nop(void *unused)
profile.c:543:static int create_hash_tables(void)
ptrace.c:31:static int ptrace_trapping_sleep_fn(void *flags)
ptrace.c:43:void __ptrace_link(struct task_struct *child, struct task_struct *new_parent)
ptrace.c:78:void __ptrace_unlink(struct task_struct *child)
ptrace.c:128:static bool ptrace_freeze_traced(struct task_struct *task)
ptrace.c:146:static void ptrace_unfreeze_traced(struct task_struct *task)
ptrace.c:178:static int ptrace_check_attach(struct task_struct *child, bool ignore_state)
ptrace.c:216:static int ptrace_has_cap(struct user_namespace *ns, unsigned int mode)
ptrace.c:225:static int __ptrace_may_access(struct task_struct *task, unsigned int mode)
ptrace.c:270:bool ptrace_may_access(struct task_struct *task, unsigned int mode)
ptrace.c:387:static int ptrace_traceme(void)
ptrace.c:413:static int ignoring_children(struct sighand_struct *sigh)
ptrace.c:438:static bool __ptrace_detach(struct task_struct *tracer, struct task_struct *p)
ptrace.c:463:static int ptrace_detach(struct task_struct *child, unsigned int data)
ptrace.c:497:void exit_ptrace(struct task_struct *tracer)
ptrace.c:526:int ptrace_readdata(struct task_struct *tsk, unsigned long src, char __user *dst, int len)
ptrace.c:551:int ptrace_writedata(struct task_struct *tsk, char __user *src, unsigned long dst, int len)
ptrace.c:576:static int ptrace_setoptions(struct task_struct *child, unsigned long data)
ptrace.c:592:static int ptrace_getsiginfo(struct task_struct *child, siginfo_t *info)
ptrace.c:608:static int ptrace_setsiginfo(struct task_struct *child, const siginfo_t *info)
range.c:10:int add_range(struct range *range, int az, int nr_range, u64 start, u64 end)
range.c:63:void subtract_range(struct range *range, int az, u64 start, u64 end)
range.c:112:static int cmp_range(const void *x1, const void *x2)
range.c:124:int clean_sort_range(struct range *range, int az)
range.c:159:void sort_range(struct range *range, int nr_range)
rcu/tree_plugin.h:136:long rcu_batches_completed_preempt(void)
rcu/tree_plugin.h:145:long rcu_batches_completed(void)
rcu/tree_plugin.h:154:void rcu_force_quiescent_state(void)
rcu/tree_plugin.h:170:static void rcu_preempt_qs(int cpu)
rcu/tree_plugin.h:193:static void rcu_preempt_note_context_switch(int cpu)
rcu/tree_plugin.h:277:static int rcu_preempt_blocked_readers_cgp(struct rcu_node *rnp)
rcu/tree_plugin.h:289:static void rcu_report_unblock_qs_rnp(struct rcu_node *rnp, unsigned long flags)
rcu/tree_plugin.h:338:void rcu_read_unlock_special(struct task_struct *t)
rcu/tree_plugin.h:453:static void rcu_print_detail_task_stall_rnp(struct rcu_node *rnp)
rcu/tree_plugin.h:474:static void rcu_print_detail_task_stall(struct rcu_state *rsp)
rcu/tree_plugin.h:485:static void rcu_print_detail_task_stall(struct rcu_state *rsp)
rcu/tree_plugin.h:493:static void rcu_print_task_stall_begin(struct rcu_node *rnp)
rcu/tree_plugin.h:499:static void rcu_print_task_stall_end(void)
rcu/tree_plugin.h:506:static void rcu_print_task_stall_begin(struct rcu_node *rnp)
rcu/tree_plugin.h:510:static void rcu_print_task_stall_end(void)
rcu/tree_plugin.h:520:static int rcu_print_task_stall(struct rcu_node *rnp)
rcu/tree_plugin.h:548:static void rcu_preempt_check_blocked_tasks(struct rcu_node *rnp)
rcu/tree_plugin.h:651:static void rcu_preempt_check_callbacks(int cpu)
rcu/tree_plugin.h:666:static void rcu_preempt_do_callbacks(void)
rcu/tree_plugin.h:710:void synchronize_rcu(void)
rcu/tree_plugin.h:735:static int rcu_preempted_readers_exp(struct rcu_node *rnp)
rcu/tree_plugin.h:749:static int sync_rcu_preempt_exp_done(struct rcu_node *rnp)
rcu/tree_plugin.h:837:void synchronize_rcu_expedited(void)
rcu/tree_plugin.h:924:void rcu_barrier(void)
rcu/tree_plugin.h:944:void exit_rcu(void)
rcu/tree_plugin.h:972:long rcu_batches_completed(void)
rcu/tree_plugin.h:982:void rcu_force_quiescent_state(void)
rcu/tree_plugin.h:992:static void rcu_preempt_note_context_switch(int cpu)
rcu/tree_plugin.h:1000:static int rcu_preempt_blocked_readers_cgp(struct rcu_node *rnp)
rcu/tree_plugin.h:1008:static void rcu_report_unblock_qs_rnp(struct rcu_node *rnp, unsigned long flags)
rcu/tree_plugin.h:1019:static void rcu_print_detail_task_stall(struct rcu_state *rsp)
rcu/tree_plugin.h:1027:static int rcu_print_task_stall(struct rcu_node *rnp)
rcu/tree_plugin.h:1037:static void rcu_preempt_check_blocked_tasks(struct rcu_node *rnp)
rcu/tree_plugin.h:1063:static void rcu_preempt_check_callbacks(int cpu)
rcu/tree_plugin.h:1087:void synchronize_rcu_expedited(void)
rcu/tree_plugin.h:1111:void rcu_barrier(void)
rcu/tree_plugin.h:1128:void exit_rcu(void)
rcu/tree_plugin.h:1140:static void rcu_initiate_boost_trace(struct rcu_node *rnp)
rcu/tree_plugin.h:1159:static void rcu_initiate_boost_trace(struct rcu_node *rnp)
rcu/tree_plugin.h:1165:static void rcu_wake_cond(struct task_struct *t, int status)
rcu/tree_plugin.h:1183:static int rcu_boost(struct rcu_node *rnp)
rcu/tree_plugin.h:1250:static int rcu_boost_kthread(void *arg)
rcu/tree_plugin.h:1291:static void rcu_initiate_boost(struct rcu_node *rnp, unsigned long flags)
rcu/tree_plugin.h:1320:static void invoke_rcu_callbacks_kthread(void)
rcu/tree_plugin.h:1338:static bool rcu_is_callbacks_kthread(void)
rcu/tree_plugin.h:1348:static void rcu_preempt_boost_start_gp(struct rcu_node *rnp)
rcu/tree_plugin.h:1388:static void rcu_kthread_do_work(void)
rcu/tree_plugin.h:1395:static void rcu_cpu_kthread_setup(unsigned int cpu)
rcu/tree_plugin.h:1403:static void rcu_cpu_kthread_park(unsigned int cpu)
rcu/tree_plugin.h:1408:static int rcu_cpu_kthread_should_run(unsigned int cpu)
rcu/tree_plugin.h:1418:static void rcu_cpu_kthread(unsigned int cpu)
rcu/tree_plugin.h:1458:static void rcu_boost_kthread_setaffinity(struct rcu_node *rnp, int outgoingcpu)
rcu/tree_plugin.h:1513:static void rcu_prepare_kthreads(int cpu)
rcu/tree_plugin.h:1525:static void rcu_initiate_boost(struct rcu_node *rnp, unsigned long flags)
rcu/tree_plugin.h:1530:static void invoke_rcu_callbacks_kthread(void)
rcu/tree_plugin.h:1535:static bool rcu_is_callbacks_kthread(void)
rcu/tree_plugin.h:1540:static void rcu_preempt_boost_start_gp(struct rcu_node *rnp)
rcu/tree_plugin.h:1544:static void rcu_boost_kthread_setaffinity(struct rcu_node *rnp, int outgoingcpu)
rcu/tree_plugin.h:1555:static void rcu_prepare_kthreads(int cpu)
rcu/tree_plugin.h:1572:int rcu_needs_cpu(int cpu, unsigned long *delta_jiffies)
rcu/tree_plugin.h:1582:static void rcu_cleanup_after_idle(int cpu)
rcu/tree_plugin.h:1590:static void rcu_prepare_for_idle(int cpu)
rcu/tree_plugin.h:1598:static void rcu_idle_count_callbacks_posted(void)
rcu/tree_plugin.h:1642:static bool rcu_try_advance_all_cbs(void)
rcu/tree_plugin.h:1682:int rcu_needs_cpu(int cpu, unsigned long *dj)
rcu/tree_plugin.h:1723:static void rcu_prepare_for_idle(int cpu)
rcu/tree_plugin.h:1782:static void rcu_cleanup_after_idle(int cpu)
rcu/tree_plugin.h:1799:static void rcu_idle_count_callbacks_posted(void)
rcu/tree_plugin.h:1814:static void rcu_oom_callback(struct rcu_head *rhp)
rcu/tree_plugin.h:1827:static void rcu_oom_notify_cpu(void *unused)
rcu/tree_plugin.h:1892:static void print_cpu_stall_fast_no_hz(char *cp, int cpu)
rcu/tree_plugin.h:1906:static void print_cpu_stall_fast_no_hz(char *cp, int cpu)
rcu/tree_plugin.h:1914:static void print_cpu_stall_info_begin(void)
rcu/tree_plugin.h:1931:static void print_cpu_stall_info(struct rcu_state *rsp, int cpu)
rcu/tree_plugin.h:1956:static void print_cpu_stall_info_end(void)
rcu/tree_plugin.h:1962:static void zero_cpu_stall_ticks(struct rcu_data *rdp)
rcu/tree_plugin.h:1969:static void increment_cpu_stall_ticks(void)
rcu/tree_plugin.h:1979:static void print_cpu_stall_info_begin(void)
rcu/tree_plugin.h:1984:static void print_cpu_stall_info(struct rcu_state *rsp, int cpu)
rcu/tree_plugin.h:1989:static void print_cpu_stall_info_end(void)
rcu/tree_plugin.h:1994:static void zero_cpu_stall_ticks(struct rcu_data *rdp)
rcu/tree_plugin.h:1998:static void increment_cpu_stall_ticks(void)
rcu/tree_plugin.h:2050:static int rcu_nocb_needs_gp(struct rcu_state *rsp)
rcu/tree_plugin.h:2061:static void rcu_nocb_gp_cleanup(struct rcu_state *rsp, struct rcu_node *rnp)
rcu/tree_plugin.h:2074:static void rcu_nocb_gp_set(struct rcu_node *rnp, int nrq)
rcu/tree_plugin.h:2079:static void rcu_init_one_nocb(struct rcu_node *rnp)
rcu/tree_plugin.h:2086:bool rcu_is_nocb_cpu(int cpu)
rcu/tree_plugin.h:2204:static void rcu_nocb_wait_gp(struct rcu_data *rdp)
rcu/tree_plugin.h:2237:static int rcu_nocb_kthread(void *arg)
rcu/tree_plugin.h:2339:static bool init_nocb_callback_list(struct rcu_data *rdp)
rcu/tree_plugin.h:2350:static int rcu_nocb_needs_gp(struct rcu_state *rsp)
rcu/tree_plugin.h:2355:static void rcu_nocb_gp_cleanup(struct rcu_state *rsp, struct rcu_node *rnp)
rcu/tree_plugin.h:2359:static void rcu_nocb_gp_set(struct rcu_node *rnp, int nrq)
rcu/tree_plugin.h:2363:static void rcu_init_one_nocb(struct rcu_node *rnp)
rcu/tree_plugin.h:2387:static bool init_nocb_callback_list(struct rcu_data *rdp)
rcu/tree_plugin.h:2403:static void rcu_kick_nohz_cpu(int cpu)
rcu/tree_plugin.h:2437:static void rcu_sysidle_enter(struct rcu_dynticks *rdtp, int irq)
rcu/tree_plugin.h:2476:void rcu_sysidle_force_exit(void)
rcu/tree_plugin.h:2504:static void rcu_sysidle_exit(struct rcu_dynticks *rdtp, int irq)
rcu/tree_plugin.h:2589:static bool is_sysidle_rcu_state(struct rcu_state *rsp)
rcu/tree_plugin.h:2598:static void rcu_bind_gp_kthread(void)
rcu/tree_plugin.h:2628:static void rcu_sysidle(unsigned long j)
rcu/tree_plugin.h:2669:static void rcu_sysidle_cancel(void)
rcu/tree_plugin.h:2708:static void rcu_sysidle_cb(struct rcu_head *rhp)
rcu/tree_plugin.h:2727:bool rcu_sys_is_idle(void)
rcu/tree_plugin.h:2793:static void rcu_sysidle_init_percpu_data(struct rcu_dynticks *rdtp)
rcu/tree_plugin.h:2800:static void rcu_sysidle_enter(struct rcu_dynticks *rdtp, int irq)
rcu/tree_plugin.h:2804:static void rcu_sysidle_exit(struct rcu_dynticks *rdtp, int irq)
rcu/tree_plugin.h:2813:static bool is_sysidle_rcu_state(struct rcu_state *rsp)
rcu/tree_plugin.h:2818:static void rcu_bind_gp_kthread(void)
rcu/tree_plugin.h:2827:static void rcu_sysidle_init_percpu_data(struct rcu_dynticks *rdtp)
rcu/srcu.c:46:static inline void rcu_batch_init(struct rcu_batch *b)
rcu/srcu.c:55:static inline void rcu_batch_queue(struct rcu_batch *b, struct rcu_head *head)
rcu/srcu.c:64:static inline bool rcu_batch_empty(struct rcu_batch *b)
rcu/srcu.c:92:static inline void rcu_batch_move(struct rcu_batch *to, struct rcu_batch *from)
rcu/srcu.c:101:static int init_srcu_struct_fields(struct srcu_struct *sp)
rcu/srcu.c:137:int init_srcu_struct(struct srcu_struct *sp)
rcu/srcu.c:188:static bool srcu_readers_active_idx_check(struct srcu_struct *sp, int idx)
rcu/srcu.c:264:static int srcu_readers_active(struct srcu_struct *sp)
rcu/srcu.c:283:void cleanup_srcu_struct(struct srcu_struct *sp)
rcu/srcu.c:297:int __srcu_read_lock(struct srcu_struct *sp)
rcu/srcu.c:317:void __srcu_read_unlock(struct srcu_struct *sp, int idx)
rcu/srcu.c:342:static bool try_check_zero(struct srcu_struct *sp, int idx, int trycount)
rcu/srcu.c:358:static void srcu_flip(struct srcu_struct *sp)
rcu/srcu.c:393:static void wakeme_after_rcu(struct rcu_head *head)
rcu/srcu.c:407:static void __synchronize_srcu(struct srcu_struct *sp, int trycount)
rcu/srcu.c:464:void synchronize_srcu(struct srcu_struct *sp)
rcu/srcu.c:486:void synchronize_srcu_expedited(struct srcu_struct *sp)
rcu/srcu.c:495:void srcu_barrier(struct srcu_struct *sp)
rcu/srcu.c:508:long srcu_batches_completed(struct srcu_struct *sp)
rcu/srcu.c:521:static void srcu_collect_new(struct srcu_struct *sp)
rcu/srcu.c:534:static void srcu_advance_batches(struct srcu_struct *sp, int trycount)
rcu/srcu.c:595:static void srcu_invoke_callbacks(struct srcu_struct *sp)
rcu/srcu.c:614:static void srcu_reschedule(struct srcu_struct *sp)
rcu/srcu.c:640:void process_srcu(struct work_struct *work)
rcu/tree.h:573:static inline void rcu_nocb_q_lengths(struct rcu_data *rdp, long *ql, long *qll)
rcu/tree.h:579:static inline void rcu_nocb_q_lengths(struct rcu_data *rdp, long *ql, long *qll)
rcu/tiny_plugin.h:75:static void rcu_trace_sub_qlen(struct rcu_ctrlblk *rcp, int n)
rcu/tiny_plugin.h:87:static int show_tiny_stats(struct seq_file *m, void *unused)
rcu/tiny_plugin.h:94:static int show_tiny_stats_open(struct inode *inode, struct file *file)
rcu/tiny_plugin.h:138:static void check_cpu_stall(struct rcu_ctrlblk *rcp)
rcu/tiny_plugin.h:161:static void reset_cpu_stall_ticks(struct rcu_ctrlblk *rcp)
rcu/tiny_plugin.h:168:static void check_cpu_stalls(void)
rcu/tiny.c:59:static void rcu_idle_enter_common(long long newval)
rcu/tiny.c:88:void rcu_idle_enter(void)
rcu/tiny.c:108:void rcu_irq_exit(void)
rcu/tiny.c:122:static void rcu_idle_exit_common(long long oldval)
rcu/tiny.c:145:void rcu_idle_exit(void)
rcu/tiny.c:165:void rcu_irq_enter(void)
rcu/tiny.c:197:static int rcu_is_cpu_rrupt_from_idle(void)
rcu/tiny.c:207:static int rcu_qsctr_help(struct rcu_ctrlblk *rcp)
rcu/tiny.c:224:void rcu_sched_qs(int cpu)
rcu/tiny.c:238:void rcu_bh_qs(int cpu)
rcu/tiny.c:254:void rcu_check_callbacks(int cpu, int user)
rcu/tiny.c:267:static void __rcu_process_callbacks(struct rcu_ctrlblk *rcp)
rcu/tiny.c:315:static void rcu_process_callbacks(struct softirq_action *unused)
rcu/tiny.c:334:void synchronize_sched(void)
rcu/tiny.c:385:void rcu_init(void)
rcu/update.c:71:void __rcu_read_lock(void)
rcu/update.c:85:void __rcu_read_unlock(void)
rcu/update.c:153:int rcu_read_lock_bh_held(void)
rcu/update.c:176:static void wakeme_after_rcu(struct rcu_head  *head)
rcu/update.c:184:void wait_rcu_gp(call_rcu_func_t crf)
rcu/update.c:202:int rcu_my_thread_group_empty(void)
rcu/update.c:210:static inline void debug_init_rcu_head(struct rcu_head *head)
rcu/update.c:215:static inline void debug_rcu_head_free(struct rcu_head *head)
rcu/update.c:226:static int rcuhead_fixup_activate(void *addr, enum debug_obj_state state)
rcu/update.c:255:void init_rcu_head_on_stack(struct rcu_head *head)
rcu/update.c:272:void destroy_rcu_head_on_stack(struct rcu_head *head)
rcu/update.c:312:int rcu_jiffies_till_stall_check(void)
rcu/update.c:330:static int rcu_panic(struct notifier_block *this, unsigned long ev, void *ptr)
rcu/torture.c:282:static void rcutorture_shutdown_absorb(const char *title)
rcu/torture.c:397:static void rcu_read_delay(struct rcu_random_state *rrsp)
rcu/torture.c:421:static int rcu_torture_completed(void)
rcu/torture.c:449:static int rcu_no_completed(void)
rcu/torture.c:454:static void rcu_torture_deferred_free(struct rcu_torture *p)
rcu/torture.c:459:static void rcu_sync_torture_init(void)
rcu/torture.c:497:static int rcu_bh_torture_completed(void)
rcu/torture.c:502:static void rcu_bh_torture_deferred_free(struct rcu_torture *p)
rcu/torture.c:535:static void srcu_read_delay(struct rcu_random_state *rrsp)
rcu/torture.c:555:static int srcu_torture_completed(void)
rcu/torture.c:560:static void srcu_torture_deferred_free(struct rcu_torture *rp)
rcu/torture.c:565:static void srcu_torture_synchronize(void)
rcu/torture.c:576:static void srcu_torture_barrier(void)
rcu/torture.c:581:static int srcu_torture_stats(char *page)
rcu/torture.c:598:static void srcu_torture_synchronize_expedited(void)
rcu/torture.c:622:static int sched_torture_read_lock(void)
rcu/torture.c:628:static void sched_torture_read_unlock(int idx)
rcu/torture.c:633:static void rcu_sched_torture_deferred_free(struct rcu_torture *p)
rcu/torture.c:667:static void rcu_torture_boost_cb(struct rcu_head *head)
rcu/torture.c:676:static int rcu_torture_boost(void *arg)
rcu/torture.c:906:void rcutorture_trace_dump(void)
rcu/torture.c:923:static void rcu_torture_timer(unsigned long unused)
rcu/torture.c:1174:static void rcu_torture_shuffle_tasks(void)
rcu/torture.c:1299:static void rcutorture_booster_cleanup(int cpu)
rcu/torture.c:1316:static int rcutorture_booster_init(int cpu)
rcu/torture.c:1489:static void rcu_torture_onoff_cleanup(void)
rcu/torture.c:1506:static void rcu_torture_onoff_cleanup(void)
rcu/torture.c:1516:static int rcu_torture_stall(void *args)
rcu/torture.c:1561:static void rcu_torture_stall_cleanup(void)
rcu/torture.c:1571:void rcu_torture_barrier_cbf(struct rcu_head *rcu)
rcu/torture.c:1577:static int rcu_torture_barrier_cbs(void *arg)
rcu/torture.c:1609:static int rcu_torture_barrier(void *arg)
rcu/torture.c:1644:static int rcu_torture_barrier_init(void)
rcu/torture.c:1693:static void rcu_torture_barrier_cleanup(void)
rcu/torture.c:1850:static void rcu_torture_leak_cb(struct rcu_head *rhp)
rcu/torture.c:1854:static void rcu_torture_err_cb(struct rcu_head *rhp)
rcu/torture.c:1874:static void rcu_test_debug_objects(void)
rcu/rcu.h:70:static inline int debug_rcu_head_queue(struct rcu_head *head)
rcu/rcu.h:81:static inline void debug_rcu_head_unqueue(struct rcu_head *head)
rcu/rcu.h:89:static inline int debug_rcu_head_queue(struct rcu_head *head)
rcu/rcu.h:94:static inline void debug_rcu_head_unqueue(struct rcu_head *head)
rcu/rcu.h:101:static inline bool __rcu_reclaim(const char *rn, struct rcu_head *head)
rcu/tree_trace.c:60:static void *r_start(struct seq_file *m, loff_t *pos)
rcu/tree_trace.c:69:static void *r_next(struct seq_file *m, void *v, loff_t *pos)
rcu/tree_trace.c:75:static void r_stop(struct seq_file *m, void *v)
rcu/tree_trace.c:79:static int show_rcubarrier(struct seq_file *m, void *v)
rcu/tree_trace.c:88:static int rcubarrier_open(struct inode *inode, struct file *file)
rcu/tree_trace.c:103:static char convert_kthread_status(unsigned int kthread_status)
rcu/tree_trace.c:112:static void print_one_rcu_data(struct seq_file *m, struct rcu_data *rdp)
rcu/tree_trace.c:154:static int show_rcudata(struct seq_file *m, void *v)
rcu/tree_trace.c:167:static int rcudata_open(struct inode *inode, struct file *file)
rcu/tree_trace.c:180:static int show_rcuexp(struct seq_file *m, void *v)
rcu/tree_trace.c:199:static int rcuexp_open(struct inode *inode, struct file *file)
rcu/tree_trace.c:214:static void print_one_rcu_node_boost(struct seq_file *m, struct rcu_node *rnp)
rcu/tree_trace.c:237:static int show_rcu_node_boost(struct seq_file *m, void *unused)
rcu/tree_trace.c:246:static int rcu_node_boost_open(struct inode *inode, struct file *file)
rcu/tree_trace.c:261:static void print_one_rcu_state(struct seq_file *m, struct rcu_state *rsp)
rcu/tree_trace.c:292:static int show_rcuhier(struct seq_file *m, void *v)
rcu/tree_trace.c:299:static int rcuhier_open(struct inode *inode, struct file *file)
rcu/tree_trace.c:312:static void show_one_rcugp(struct seq_file *m, struct rcu_state *rsp)
rcu/tree_trace.c:334:static int show_rcugp(struct seq_file *m, void *v)
rcu/tree_trace.c:341:static int rcugp_open(struct inode *inode, struct file *file)
rcu/tree_trace.c:354:static void print_one_rcu_pending(struct seq_file *m, struct rcu_data *rdp)
rcu/tree_trace.c:373:static int show_rcu_pending(struct seq_file *m, void *v)
rcu/tree_trace.c:386:static int rcu_pending_open(struct inode *inode, struct file *file)
rcu/tree_trace.c:399:static int show_rcutorture(struct seq_file *m, void *unused)
rcu/tree_trace.c:409:static int rcutorture_open(struct inode *inode, struct file *file)
rcu/tree.c:182:static int rcu_gp_in_progress(struct rcu_state *rsp)
rcu/tree.c:193:void rcu_sched_qs(int cpu)
rcu/tree.c:202:void rcu_bh_qs(int cpu)
rcu/tree.c:216:void rcu_note_context_switch(int cpu)
rcu/tree.c:260:long rcu_batches_completed_sched(void)
rcu/tree.c:269:long rcu_batches_completed_bh(void)
rcu/tree.c:278:void rcu_bh_force_quiescent_state(void)
rcu/tree.c:291:void rcutorture_record_test_transition(void)
rcu/tree.c:303:void rcutorture_record_progress(unsigned long vernum)
rcu/tree.c:312:void rcu_sched_force_quiescent_state(void)
rcu/tree.c:406:static void rcu_eqs_enter(bool user)
rcu/tree.c:433:void rcu_idle_enter(void)
rcu/tree.c:453:void rcu_user_enter(void)
rcu/tree.c:475:void rcu_irq_exit(void)
rcu/tree.c:528:static void rcu_eqs_exit(bool user)
rcu/tree.c:554:void rcu_idle_exit(void)
rcu/tree.c:572:void rcu_user_exit(void)
rcu/tree.c:597:void rcu_irq_enter(void)
rcu/tree.c:623:void rcu_nmi_enter(void)
rcu/tree.c:645:void rcu_nmi_exit(void)
rcu/tree.c:712:bool rcu_lockdep_current_cpu_online(void)
rcu/tree.c:739:static int rcu_is_cpu_rrupt_from_idle(void)
rcu/tree.c:818:static void record_gp_stall_check_time(struct rcu_state *rsp)
rcu/tree.c:833:static void rcu_dump_cpu_stacks(struct rcu_state *rsp)
rcu/tree.c:850:static void print_other_cpu_stall(struct rcu_state *rsp)
rcu/tree.c:925:static void print_cpu_stall(struct rcu_state *rsp)
rcu/tree.c:964:static void check_cpu_stall(struct rcu_state *rsp, struct rcu_data *rdp)
rcu/tree.c:1029:void rcu_cpu_stall_reset(void)
rcu/tree.c:1040:static void init_callback_list(struct rcu_data *rdp)
rcu/tree.c:1181:static int rcu_future_gp_cleanup(struct rcu_state *rsp, struct rcu_node *rnp)
rcu/tree.c:1312:static void __note_gp_changes(struct rcu_state *rsp, struct rcu_node *rnp, struct rcu_data *rdp)
rcu/tree.c:1344:static void note_gp_changes(struct rcu_state *rsp, struct rcu_data *rdp)
rcu/tree.c:1364:static int rcu_gp_init(struct rcu_state *rsp)
rcu/tree.c:1440:static int rcu_gp_fqs(struct rcu_state *rsp, int fqs_state_in)
rcu/tree.c:1475:static void rcu_gp_cleanup(struct rcu_state *rsp)
rcu/tree.c:1623:static void rsp_wakeup(struct irq_work *work)
rcu/tree.c:1699:static void rcu_report_qs_rsp(struct rcu_state *rsp, unsigned long flags)
rcu/tree.c:1904:static void rcu_adopt_orphan_cbs(struct rcu_state *rsp)
rcu/tree.c:1951:static void rcu_cleanup_dying_cpu(struct rcu_state *rsp)
rcu/tree.c:1970:static void rcu_cleanup_dead_cpu(int cpu, struct rcu_state *rsp)
rcu/tree.c:2034:static void rcu_cleanup_dying_cpu(struct rcu_state *rsp)
rcu/tree.c:2038:static void rcu_cleanup_dead_cpu(int cpu, struct rcu_state *rsp)
rcu/tree.c:2048:static void rcu_do_batch(struct rcu_state *rsp, struct rcu_data *rdp)
rcu/tree.c:2145:void rcu_check_callbacks(int cpu, int user)
rcu/tree.c:2242:static void force_quiescent_state(struct rcu_state *rsp)
rcu/tree.c:2311:static void rcu_process_callbacks(struct softirq_action *unused)
rcu/tree.c:2330:static void invoke_rcu_callbacks(struct rcu_state *rsp, struct rcu_data *rdp)
rcu/tree.c:2341:static void invoke_rcu_core(void)
rcu/tree.c:2398:static void rcu_leak_callback(struct rcu_head *rhp)
rcu/tree.c:2493:static inline int rcu_blocking_is_gp(void)
rcu/tree.c:2545:void synchronize_sched(void)
rcu/tree.c:2572:void synchronize_rcu_bh(void)
rcu/tree.c:2587:static int synchronize_sched_expedited_cpu_stop(void *data)
rcu/tree.c:2641:void synchronize_sched_expedited(void)
rcu/tree.c:2751:static int __rcu_pending(struct rcu_state *rsp, struct rcu_data *rdp)
rcu/tree.c:2803:static int rcu_pending(int cpu)
rcu/tree.c:2818:static int rcu_cpu_has_callbacks(int cpu, bool *all_lazy)
rcu/tree.c:2855:static void rcu_barrier_callback(struct rcu_head *rhp)
rcu/tree.c:2871:static void rcu_barrier_func(void *type)
rcu/tree.c:2885:static void _rcu_barrier(struct rcu_state *rsp)
rcu/tree.c:2999:void rcu_barrier_bh(void)
rcu/tree.c:3008:void rcu_barrier_sched(void)
rcu/tree.c:3098:static void rcu_prepare_cpu(int cpu)
rcu/tree.c:3201:void rcu_scheduler_starting(void)
reboot.c:61:void emergency_restart(void)
reboot.c:68:void kernel_restart_prepare(char *cmd)
reboot.c:86:int register_reboot_notifier(struct notifier_block *nb)
reboot.c:101:int unregister_reboot_notifier(struct notifier_block *nb)
reboot.c:107:void migrate_to_reboot_cpu(void)
reboot.c:133:void kernel_restart(char *cmd)
reboot.c:147:static void kernel_shutdown_prepare(enum system_states state)
reboot.c:160:void kernel_halt(void)
reboot.c:176:void kernel_power_off(void)
reboot.c:288:static void deferred_cad(struct work_struct *dummy)
reboot.c:298:void ctrl_alt_del(void)
reboot.c:310:static int __orderly_poweroff(bool force)
reboot.c:344:static void poweroff_work_func(struct work_struct *work)
reboot.c:358:int orderly_poweroff(bool force)
relay.c:33:static void relay_file_mmap_close(struct vm_area_struct *vma)
relay.c:42:static int relay_buf_fault(struct vm_area_struct *vma, struct vm_fault *vmf)
relay.c:82:static void relay_free_page_array(struct page **array)
relay.c:99:static int relay_mmap_buf(struct rchan_buf *buf, struct vm_area_struct *vma)
relay.c:126:static void *relay_alloc_buf(struct rchan_buf *buf, size_t *size)
relay.c:199:static void relay_destroy_channel(struct kref *kref)
relay.c:209:static void relay_destroy_buf(struct rchan_buf *buf)
relay.c:234:static void relay_remove_buf(struct kref *kref)
relay.c:246:static int relay_buf_empty(struct rchan_buf *buf)
relay.c:257:int relay_buf_full(struct rchan_buf *buf)
relay.c:318:static int remove_buf_file_default_callback(struct dentry *dentry)
relay.c:338:static void wakeup_readers(unsigned long data)
relay.c:351:static void __relay_reset(struct rchan_buf *buf, unsigned int init)
relay.c:386:void relay_reset(struct rchan *chan)
relay.c:482:static void relay_close_buf(struct rchan_buf *buf)
relay.c:630:static void __relay_set_buf_dentry(void *info)
relay.c:722:size_t relay_switch_subbuf(struct rchan_buf *buf, size_t length)
relay.c:815:void relay_close(struct rchan *chan)
relay.c:847:void relay_flush(struct rchan *chan)
relay.c:874:static int relay_file_open(struct inode *inode, struct file *filp)
relay.c:890:static int relay_file_mmap(struct file *filp, struct vm_area_struct *vma)
relay.c:928:static int relay_file_release(struct inode *inode, struct file *filp)
relay.c:973:static int relay_file_read_avail(struct rchan_buf *buf, size_t read_pos)
relay.c:1177:static void relay_consume_bytes(struct rchan_buf *rbuf, int bytes_consumed)
relay.c:1206:static void relay_page_release(struct splice_pipe_desc *spd, unsigned int i)
res_counter.c:17:void res_counter_init(struct res_counter *counter, struct res_counter *parent)
res_counter.c:89:u64 res_counter_uncharge_locked(struct res_counter *counter, unsigned long val)
res_counter.c:119:u64 res_counter_uncharge(struct res_counter *counter, unsigned long val)
res_counter.c:162:u64 res_counter_read_u64(struct res_counter *counter, int member)
res_counter.c:174:u64 res_counter_read_u64(struct res_counter *counter, int member)
resource.c:62:static void *r_next(struct seq_file *m, void *v, loff_t *pos)
resource.c:77:static void *r_start(struct seq_file *m, loff_t *pos)
resource.c:88:static void r_stop(struct seq_file *m, void *v)
resource.c:94:static int r_show(struct seq_file *m, void *v)
resource.c:119:static int ioports_open(struct inode *inode, struct file *file)
resource.c:129:static int iomem_open(struct inode *inode, struct file *file)
resource.c:163:static void free_resource(struct resource *res)
resource.c:226:static int __release_resource(struct resource *old)
resource.c:245:static void __release_child_resources(struct resource *r)
resource.c:268:void release_child_resources(struct resource *r)
resource.c:282:struct resource *request_resource_conflict(struct resource *root, struct resource *new)
resource.c:299:int request_resource(struct resource *root, struct resource *new)
resource.c:313:int release_resource(struct resource *old)
resource.c:331:static int find_next_system_ram(struct resource *res, char *name)
resource.c:400:static int __is_ram(unsigned long pfn, unsigned long nr_pages, void *arg)
resource.c:435:static bool resource_contains(struct resource *res1, struct resource *res2)
resource.c:613:struct resource *lookup_resource(struct resource *root, resource_size_t start)
resource.c:693:struct resource *insert_resource_conflict(struct resource *parent, struct resource *new)
resource.c:710:int insert_resource(struct resource *parent, struct resource *new)
resource.c:726:void insert_resource_expand_to_fit(struct resource *root, struct resource *new)
resource.c:904:resource_size_t resource_alignment(struct resource *res)
resource.c:1178:static void devm_region_release(struct device *dev, void *res)
resource.c:1185:static int devm_region_match(struct device *dev, void *res, void *match_data)
resource.c:1267:int iomem_map_sanity_check(resource_size_t addr, unsigned long size)
resource.c:1320:int iomem_is_exclusive(u64 addr)
sched/wait.c:14:void __init_waitqueue_head(wait_queue_head_t *q, const char *name, struct lock_class_key *key)
sched/wait.c:23:void add_wait_queue(wait_queue_head_t *q, wait_queue_t *wait)
sched/wait.c:34:void add_wait_queue_exclusive(wait_queue_head_t *q, wait_queue_t *wait)
sched/wait.c:45:void remove_wait_queue(wait_queue_head_t *q, wait_queue_t *wait)
sched/wait.c:65:static void __wake_up_common(wait_queue_head_t *q, unsigned int mode, int nr_exclusive, int wake_flags, void *key)
sched/wait.c:87:void __wake_up(wait_queue_head_t *q, unsigned int mode, int nr_exclusive, void *key)
sched/wait.c:100:void __wake_up_locked(wait_queue_head_t *q, unsigned int mode, int nr)
sched/wait.c:106:void __wake_up_locked_key(wait_queue_head_t *q, unsigned int mode, void *key)
sched/wait.c:150:void __wake_up_sync(wait_queue_head_t *q, unsigned int mode, int nr_exclusive)
sched/wait.c:168:void prepare_to_wait(wait_queue_head_t *q, wait_queue_t *wait, int state)
sched/wait.c:181:void prepare_to_wait_exclusive(wait_queue_head_t *q, wait_queue_t *wait, int state)
sched/wait.c:194:long prepare_to_wait_event(wait_queue_head_t *q, wait_queue_t *wait, int state)
sched/wait.c:227:void finish_wait(wait_queue_head_t *q, wait_queue_t *wait)
sched/wait.c:271:void abort_exclusive_wait(wait_queue_head_t *q, wait_queue_t *wait, unsigned int mode, void *key)
sched/wait.c:285:int autoremove_wake_function(wait_queue_t *wait, unsigned mode, int sync, void *key)
sched/wait.c:295:int wake_bit_function(wait_queue_t *wait, unsigned mode, int sync, void *arg)
sched/wait.c:368:void __wake_up_bit(wait_queue_head_t *wq, void *word, int bit)
sched/wait.c:393:void wake_up_bit(void *word, int bit)
sched/wait.c:408:wait_queue_head_t *bit_waitqueue(void *word, int bit)
sched/wait.c:423:static inline wait_queue_head_t *atomic_t_waitqueue(atomic_t *p)
sched/wait.c:500:void wake_up_atomic_t(atomic_t *p)
sched/debug.c:62:static void print_cfs_group_stats(struct seq_file *m, int cpu, struct task_group *tg)
sched/debug.c:109:static char *task_group_path(struct task_group *tg)
sched/debug.c:151:static void print_rq(struct seq_file *m, struct rq *rq, int rq_cpu)
sched/debug.c:175:void print_cfs_rq(struct seq_file *m, int cpu, struct cfs_rq *cfs_rq)
sched/debug.c:246:void print_rt_rq(struct seq_file *m, int cpu, struct rt_rq *rt_rq)
sched/debug.c:270:static void print_cpu(struct seq_file *m, int cpu)
sched/debug.c:349:static void sched_debug_header(struct seq_file *m)
sched/debug.c:401:static int sched_debug_show(struct seq_file *m, void *v)
sched/debug.c:413:void sysrq_sched_debug_show(void)
sched/debug.c:430:static void *sched_debug_start(struct seq_file *file, loff_t *offset)
sched/debug.c:451:static void *sched_debug_next(struct seq_file *file, void *data, loff_t *offset)
sched/debug.c:457:static void sched_debug_stop(struct seq_file *file, void *data)
sched/debug.c:468:static int sched_debug_release(struct inode *inode, struct file *file)
sched/debug.c:475:static int sched_debug_open(struct inode *inode, struct file *filp)
sched/debug.c:513:static void sched_show_numa(struct task_struct *p, struct seq_file *m)
sched/debug.c:553:void proc_sched_show_task(struct task_struct *p, struct seq_file *m)
sched/debug.c:660:void proc_sched_set_task(struct task_struct *p)
sched/sched.h:84:static inline int rt_policy(int policy)
sched/sched.h:91:static inline int task_has_rt_policy(struct task_struct *p)
sched/sched.h:205:static inline int walk_tg_tree(tg_visitor down, tg_visitor up, void *data)
sched/sched.h:330:static inline int rt_bandwidth_enabled(void)
sched/sched.h:536:static inline int cpu_of(struct rq *rq)
sched/sched.h:553:static inline u64 rq_clock(struct rq *rq)
sched/sched.h:558:static inline u64 rq_clock_task(struct rq *rq)
sched/sched.h:714:static inline void set_task_rq(struct task_struct *p, unsigned int cpu)
sched/sched.h:741:static inline void __set_task_cpu(struct task_struct *p, unsigned int cpu)
sched/sched.h:817:static inline u64 global_rt_period(void)
sched/sched.h:822:static inline u64 global_rt_runtime(void)
sched/sched.h:832:static inline int task_current(struct rq *rq, struct task_struct *p)
sched/sched.h:837:static inline int task_running(struct rq *rq, struct task_struct *p)
sched/sched.h:858:static inline void prepare_lock_switch(struct rq *rq, struct task_struct *next)
sched/sched.h:870:static inline void finish_lock_switch(struct rq *rq, struct task_struct *prev)
sched/sched.h:896:static inline void prepare_lock_switch(struct rq *rq, struct task_struct *next)
sched/sched.h:909:static inline void finish_lock_switch(struct rq *rq, struct task_struct *prev)
sched/sched.h:1062:static inline void idle_balance(int cpu, struct rq *rq)
sched/sched.h:1085:static inline u64 steal_ticks(u64 steal)
sched/sched.h:1094:static inline void inc_nr_running(struct rq *rq)
sched/sched.h:1109:static inline void dec_nr_running(struct rq *rq)
sched/sched.h:1114:static inline void rq_last_tick_reset(struct rq *rq)
sched/sched.h:1132:static inline u64 sched_avg_period(void)
sched/sched.h:1144:static inline int hrtick_enabled(struct rq *rq)
sched/sched.h:1157:static inline int hrtick_enabled(struct rq *rq)
sched/sched.h:1166:static inline void sched_rt_avg_update(struct rq *rq, u64 rt_delta)
sched/sched.h:1191:static inline int _double_lock_balance(struct rq *this_rq, struct rq *busiest)
sched/sched.h:1210:static inline int _double_lock_balance(struct rq *this_rq, struct rq *busiest)
sched/sched.h:1236:static inline int double_lock_balance(struct rq *this_rq, struct rq *busiest)
sched/sched.h:1247:static inline void double_unlock_balance(struct rq *this_rq, struct rq *busiest)
sched/sched.h:1254:static inline void double_lock(spinlock_t *l1, spinlock_t *l2)
sched/sched.h:1263:static inline void double_raw_lock(raw_spinlock_t *l1, raw_spinlock_t *l2)
sched/sched.h:1278:static inline void double_rq_lock(struct rq *rq1, struct rq *rq2)
sched/sched.h:1303:static inline void double_rq_unlock(struct rq *rq1, struct rq *rq2)
sched/sched.h:1322:static inline void double_rq_lock(struct rq *rq1, struct rq *rq2)
sched/sched.h:1338:static inline void double_rq_unlock(struct rq *rq1, struct rq *rq2)
sched/sched.h:1377:static inline void irq_time_write_begin(void)
sched/sched.h:1383:static inline void irq_time_write_end(void)
sched/sched.h:1389:static inline u64 irq_time_read(int cpu)
sched/sched.h:1403:static inline void irq_time_write_begin(void)
sched/sched.h:1407:static inline void irq_time_write_end(void)
sched/sched.h:1411:static inline u64 irq_time_read(int cpu)
sched/stop_task.c:50:static void yield_task_stop(struct rq *rq)
sched/stop_task.c:55:static void put_prev_task_stop(struct rq *rq, struct task_struct *prev)
sched/stop_task.c:74:static void task_tick_stop(struct rq *rq, struct task_struct *curr, int queued)
sched/stop_task.c:78:static void set_curr_task_stop(struct rq *rq)
sched/stop_task.c:85:static void switched_to_stop(struct rq *rq, struct task_struct *p)
sched/fair.c:116:static inline void update_load_add(struct load_weight *lw, unsigned long inc)
sched/fair.c:122:static inline void update_load_sub(struct load_weight *lw, unsigned long dec)
sched/fair.c:128:static inline void update_load_set(struct load_weight *lw, unsigned long w)
sched/fair.c:143:static int get_update_sysctl_factor(void)
sched/fair.c:164:static void update_sysctl(void)
sched/fair.c:176:void sched_init_granularity(void)
sched/fair.c:184:static void __update_inv_weight(struct load_weight *lw)
sched/fair.c:213:static u64 __calc_delta(u64 delta_exec, unsigned long weight, struct load_weight *lw)
sched/fair.c:288:static inline void list_add_leaf_cfs_rq(struct cfs_rq *cfs_rq)
sched/fair.c:312:static inline void list_del_leaf_cfs_rq(struct cfs_rq *cfs_rq)
sched/fair.c:340:static inline int depth_se(struct sched_entity *se)
sched/fair.c:418:static inline void list_add_leaf_cfs_rq(struct cfs_rq *cfs_rq)
sched/fair.c:422:static inline void list_del_leaf_cfs_rq(struct cfs_rq *cfs_rq)
sched/fair.c:454:static inline u64 max_vruntime(u64 max_vruntime, u64 vruntime)
sched/fair.c:463:static inline u64 min_vruntime(u64 min_vruntime, u64 vruntime)
sched/fair.c:478:static void update_min_vruntime(struct cfs_rq *cfs_rq)
sched/fair.c:507:static void __enqueue_entity(struct cfs_rq *cfs_rq, struct sched_entity *se)
sched/fair.c:543:static void __dequeue_entity(struct cfs_rq *cfs_rq, struct sched_entity *se)
sched/fair.c:555:struct sched_entity *__pick_first_entity(struct cfs_rq *cfs_rq)
sched/fair.c:576:struct sched_entity *__pick_last_entity(struct cfs_rq *cfs_rq)
sched/fair.c:617:static inline u64 calc_delta_fair(u64 delta, struct sched_entity *se)
sched/fair.c:633:static u64 __sched_period(unsigned long nr_running)
sched/fair.c:652:static u64 sched_slice(struct cfs_rq *cfs_rq, struct sched_entity *se)
sched/fair.c:679:static u64 sched_vslice(struct cfs_rq *cfs_rq, struct sched_entity *se)
sched/fair.c:690:void init_task_runnable_average(struct task_struct *p)
sched/fair.c:701:void init_task_runnable_average(struct task_struct *p)
sched/fair.c:709:static void update_curr(struct cfs_rq *cfs_rq)
sched/fair.c:753:static void update_stats_enqueue(struct cfs_rq *cfs_rq, struct sched_entity *se)
sched/fair.c:884:static void account_numa_enqueue(struct rq *rq, struct task_struct *p)
sched/fair.c:890:static void account_numa_dequeue(struct rq *rq, struct task_struct *p)
sched/fair.c:909:pid_t task_numa_group_id(struct task_struct *p)
sched/fair.c:914:static inline int task_faults_idx(int nid, int priv)
sched/fair.c:987:static void update_numa_stats(struct numa_stats *ns, int nid)
sched/fair.c:1174:static int task_numa_migrate(struct task_struct *p)
sched/fair.c:1271:static void numa_migrate_preferred(struct task_struct *p)
sched/fair.c:1363:static void task_numa_placement(struct task_struct *p)
sched/fair.c:1451:static inline int get_numa_group(struct numa_group *grp)
sched/fair.c:1456:static inline void put_numa_group(struct numa_group *grp)
sched/fair.c:1566:void task_numa_free(struct task_struct *p)
sched/fair.c:1593:void task_numa_fault(int last_cpupid, int node, int pages, int flags)
sched/fair.c:1653:static void reset_ptenuma_scan(struct task_struct *p)
sched/fair.c:1663:void task_numa_work(struct callback_head *work)
sched/fair.c:1785:void task_tick_numa(struct rq *rq, struct task_struct *curr)
sched/fair.c:1817:static void task_tick_numa(struct rq *rq, struct task_struct *curr)
sched/fair.c:1821:static inline void account_numa_enqueue(struct rq *rq, struct task_struct *p)
sched/fair.c:1825:static inline void account_numa_dequeue(struct rq *rq, struct task_struct *p)
sched/fair.c:1862:static inline long calc_tg_weight(struct task_group *tg, struct cfs_rq *cfs_rq)
sched/fair.c:1878:static long calc_cfs_shares(struct cfs_rq *cfs_rq, struct task_group *tg)
sched/fair.c:1897:static inline long calc_cfs_shares(struct cfs_rq *cfs_rq, struct task_group *tg)
sched/fair.c:1920:static void update_cfs_shares(struct cfs_rq *cfs_rq)
sched/fair.c:1939:static inline void update_cfs_shares(struct cfs_rq *cfs_rq)
sched/fair.c:2013:static u32 __compute_runnable_contrib(u64 n)
sched/fair.c:2132:static inline u64 __synchronize_entity_decay(struct sched_entity *se)
sched/fair.c:2184:static inline void __update_group_entity_contrib(struct sched_entity *se)
sched/fair.c:2233:static inline void __update_task_entity_contrib(struct sched_entity *se)
sched/fair.c:2244:static long __update_entity_load_avg_contrib(struct sched_entity *se)
sched/fair.c:2304:static void update_cfs_rq_blocked_load(struct cfs_rq *cfs_rq, int force_update)
sched/fair.c:2329:static inline void update_rq_runnable_avg(struct rq *rq, int runnable)
sched/fair.c:2413:void idle_enter_fair(struct rq *this_rq)
sched/fair.c:2423:void idle_exit_fair(struct rq *this_rq)
sched/fair.c:2442:static void enqueue_sleeper(struct cfs_rq *cfs_rq, struct sched_entity *se)
sched/fair.c:2504:static void check_spread(struct cfs_rq *cfs_rq, struct sched_entity *se)
sched/fair.c:2586:static void __clear_buddies_last(struct sched_entity *se)
sched/fair.c:2597:static void __clear_buddies_next(struct sched_entity *se)
sched/fair.c:2608:static void __clear_buddies_skip(struct sched_entity *se)
sched/fair.c:2619:static void clear_buddies(struct cfs_rq *cfs_rq, struct sched_entity *se)
sched/fair.c:2792:static void put_prev_entity(struct cfs_rq *cfs_rq, struct sched_entity *prev)
sched/fair.c:2861:static inline bool cfs_bandwidth_used(void)
sched/fair.c:2866:void cfs_bandwidth_usage_inc(void)
sched/fair.c:2871:void cfs_bandwidth_usage_dec(void)
sched/fair.c:2876:static bool cfs_bandwidth_used(void)
sched/fair.c:2889:static inline u64 default_cfs_period(void)
sched/fair.c:2894:static inline u64 sched_cfs_bandwidth_slice(void)
sched/fair.c:2906:void __refill_cfs_bandwidth_runtime(struct cfs_bandwidth *cfs_b)
sched/fair.c:2924:static inline u64 cfs_rq_clock_task(struct cfs_rq *cfs_rq)
sched/fair.c:2933:static int assign_cfs_rq_runtime(struct cfs_rq *cfs_rq)
sched/fair.c:2982:static void expire_cfs_rq_runtime(struct cfs_rq *cfs_rq)
sched/fair.c:3011:static void __account_cfs_rq_runtime(struct cfs_rq *cfs_rq, u64 delta_exec)
sched/fair.c:3029:void account_cfs_rq_runtime(struct cfs_rq *cfs_rq, u64 delta_exec)
sched/fair.c:3037:static inline int cfs_rq_throttled(struct cfs_rq *cfs_rq)
sched/fair.c:3043:static inline int throttled_hierarchy(struct cfs_rq *cfs_rq)
sched/fair.c:3066:static int tg_unthrottle_up(struct task_group *tg, void *data)
sched/fair.c:3083:static int tg_throttle_down(struct task_group *tg, void *data)
sched/fair.c:3096:static void throttle_cfs_rq(struct cfs_rq *cfs_rq)
sched/fair.c:3137:void unthrottle_cfs_rq(struct cfs_rq *cfs_rq)
sched/fair.c:3228:static int do_sched_cfs_period_timer(struct cfs_bandwidth *cfs_b, int overrun)
sched/fair.c:3321:static int runtime_refresh_within(struct cfs_bandwidth *cfs_b, u64 min_expire)
sched/fair.c:3338:static void start_cfs_slack_bandwidth(struct cfs_bandwidth *cfs_b)
sched/fair.c:3390:static void do_sched_cfs_slack_timer(struct cfs_bandwidth *cfs_b)
sched/fair.c:3425:static void check_enqueue_throttle(struct cfs_rq *cfs_rq)
sched/fair.c:3445:static void check_cfs_rq_runtime(struct cfs_rq *cfs_rq)
sched/fair.c:3493:void init_cfs_bandwidth(struct cfs_bandwidth *cfs_b)
sched/fair.c:3507:static void init_cfs_rq_runtime(struct cfs_rq *cfs_rq)
sched/fair.c:3514:void __start_cfs_bandwidth(struct cfs_bandwidth *cfs_b)
sched/fair.c:3537:static void destroy_cfs_bandwidth(struct cfs_bandwidth *cfs_b)
sched/fair.c:3564:static inline u64 cfs_rq_clock_task(struct cfs_rq *cfs_rq)
sched/fair.c:3574:static inline int cfs_rq_throttled(struct cfs_rq *cfs_rq)
sched/fair.c:3579:static inline int throttled_hierarchy(struct cfs_rq *cfs_rq)
sched/fair.c:3610:static void hrtick_start_fair(struct rq *rq, struct task_struct *p)
sched/fair.c:3644:static void hrtick_update(struct rq *rq)
sched/fair.c:3660:static inline void hrtick_update(struct rq *rq)
sched/fair.c:3720:static void dequeue_task_fair(struct rq *rq, struct task_struct *p, int flags)
sched/fair.c:3831:static void record_wakee(struct task_struct *p)
sched/fair.c:3849:static void task_waking_fair(struct task_struct *p)
sched/fair.c:3922:static long effective_load(struct task_group *tg, int cpu, long wl, long wg)
sched/fair.c:3979:static long effective_load(struct task_group *tg, int cpu, long wl, long wg)
sched/fair.c:3986:static int wake_wide(struct task_struct *p)
sched/fair.c:4008:static int wake_affine(struct sched_domain *sd, struct task_struct *p, int sync)
sched/fair.c:4178:static int select_idle_sibling(struct task_struct *p, int target)
sched/fair.c:4396:static void set_last_buddy(struct sched_entity *se)
sched/fair.c:4405:static void set_next_buddy(struct sched_entity *se)
sched/fair.c:4414:static void set_skip_buddy(struct sched_entity *se)
sched/fair.c:4423:static void check_preempt_wakeup(struct rq *rq, struct task_struct *p, int wake_flags)
sched/fair.c:4531:static void put_prev_task_fair(struct rq *rq, struct task_struct *prev)
sched/fair.c:4547:static void yield_task_fair(struct rq *rq)
sched/fair.c:4578:static bool yield_to_task_fair(struct rq *rq, struct task_struct *p, bool preempt)
sched/fair.c:4751:static void move_task(struct task_struct *p, struct lb_env *env)
sched/fair.c:4793:static bool migrate_improves_locality(struct task_struct *p, struct lb_env *env)
sched/fair.c:4821:static bool migrate_degrades_locality(struct task_struct *p, struct lb_env *env)
sched/fair.c:4867:int can_migrate_task(struct task_struct *p, struct lb_env *env)
sched/fair.c:4960:static int move_one_task(struct lb_env *env)
sched/fair.c:4989:static int move_tasks(struct lb_env *env)
sched/fair.c:5065:static void __update_blocked_averages_cpu(struct task_group *tg, int cpu)
sched/fair.c:5095:static void update_blocked_averages(int cpu)
sched/fair.c:5124:static void update_cfs_rq_h_load(struct cfs_rq *cfs_rq)
sched/fair.c:5166:static inline void update_blocked_averages(int cpu)
sched/fair.c:5213:static inline void init_sd_lb_stats(struct sd_lb_stats *sds)
sched/fair.c:5314:static void update_cpu_power(struct sched_domain *sd, int cpu)
sched/fair.c:5348:void update_group_power(struct sched_domain *sd, int cpu)
sched/fair.c:5471:static inline int sg_imbalanced(struct sched_group *group)
sched/fair.c:5483:static inline int sg_capacity(struct lb_env *env, struct sched_group *group)
sched/fair.c:5638:static inline void update_sd_lb_stats(struct lb_env *env, struct sd_lb_stats *sds)
sched/fair.c:5723:static int check_asym_packing(struct lb_env *env, struct sd_lb_stats *sds)
sched/fair.c:5752:void fix_small_imbalance(struct lb_env *env, struct sd_lb_stats *sds)
sched/fair.c:5822:static inline void calculate_imbalance(struct lb_env *env, struct sd_lb_stats *sds)
sched/fair.c:6073:static int need_active_balance(struct lb_env *env)
sched/fair.c:6093:static int should_we_balance(struct lb_env *env)
sched/fair.c:6374:void idle_balance(int this_cpu, struct rq *this_rq)
sched/fair.c:6449:static int active_load_balance_cpu_stop(void *data)
sched/fair.c:6524:static inline int find_new_ilb(int call_cpu)
sched/fair.c:6539:static void nohz_balancer_kick(int cpu)
sched/fair.c:6562:static inline void nohz_balance_exit_idle(int cpu)
sched/fair.c:6571:static inline void set_cpu_sd_state_busy(void)
sched/fair.c:6588:void set_cpu_sd_state_idle(void)
sched/fair.c:6609:void nohz_balance_enter_idle(int cpu)
sched/fair.c:6644:void update_max_interval(void)
sched/fair.c:6655:static void rebalance_domains(int cpu, enum cpu_idle_type idle)
sched/fair.c:6755:static void nohz_idle_balance(int this_cpu, enum cpu_idle_type idle)
sched/fair.c:6803:static inline int nohz_kick_needed(struct rq *rq, int cpu)
sched/fair.c:6866:static void run_rebalance_domains(struct softirq_action *h)
sched/fair.c:6883:static inline int on_null_domain(int cpu)
sched/fair.c:6891:void trigger_load_balance(struct rq *rq, int cpu)
sched/fair.c:6903:static void rq_online_fair(struct rq *rq)
sched/fair.c:6908:static void rq_offline_fair(struct rq *rq)
sched/fair.c:6921:static void task_tick_fair(struct rq *rq, struct task_struct *curr, int queued)
sched/fair.c:6942:static void task_fork_fair(struct task_struct *p)
sched/fair.c:7009:static void switched_from_fair(struct rq *rq, struct task_struct *p)
sched/fair.c:7048:static void switched_to_fair(struct rq *rq, struct task_struct *p)
sched/fair.c:7069:static void set_curr_task_fair(struct rq *rq)
sched/fair.c:7082:void init_cfs_rq(struct cfs_rq *cfs_rq)
sched/fair.c:7096:static void task_move_group_fair(struct task_struct *p, int on_rq)
sched/fair.c:7145:void free_fair_sched_group(struct task_group *tg)
sched/fair.c:7162:int alloc_fair_sched_group(struct task_group *tg, struct task_group *parent)
sched/fair.c:7202:void unregister_fair_sched_group(struct task_group *tg, int cpu)
sched/fair.c:7249:int sched_group_set_shares(struct task_group *tg, unsigned long shares)
sched/fair.c:7290:int alloc_fair_sched_group(struct task_group *tg, struct task_group *parent)
sched/fair.c:7356:void print_cfs_stats(struct seq_file *m, int cpu)
sched/stats.h:51:static inline void sched_info_reset_dequeued(struct task_struct *t)
sched/stats.h:62:static inline void sched_info_dequeued(struct rq *rq, struct task_struct *t)
sched/stats.h:80:static void sched_info_arrive(struct rq *rq, struct task_struct *t)
sched/stats.h:99:static inline void sched_info_queued(struct rq *rq, struct task_struct *t)
sched/stats.h:114:static inline void sched_info_depart(struct rq *rq, struct task_struct *t)
sched/stats.h:172:static inline bool cputimer_running(struct task_struct *tsk)
sched/rt.c:37:void init_rt_bandwidth(struct rt_bandwidth *rt_b, u64 period, u64 runtime)
sched/rt.c:49:static void start_rt_bandwidth(struct rt_bandwidth *rt_b)
sched/rt.c:62:void init_rt_rq(struct rt_rq *rt_rq, struct rq *rq)
sched/rt.c:90:static void destroy_rt_bandwidth(struct rt_bandwidth *rt_b)
sched/rt.c:115:void free_rt_sched_group(struct task_group *tg)
sched/rt.c:160:int alloc_rt_sched_group(struct task_group *tg, struct task_group *parent)
sched/rt.c:224:int alloc_rt_sched_group(struct task_group *tg, struct task_group *parent)
sched/rt.c:232:static inline int rt_overloaded(struct rq *rq)
sched/rt.c:237:static inline void rt_set_overload(struct rq *rq)
sched/rt.c:256:static inline void rt_clear_overload(struct rq *rq)
sched/rt.c:266:static void update_rt_migration(struct rt_rq *rt_rq)
sched/rt.c:279:static void inc_rt_migration(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)
sched/rt.c:296:static void dec_rt_migration(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)
sched/rt.c:313:static inline int has_pushable_tasks(struct rq *rq)
sched/rt.c:318:static void enqueue_pushable_task(struct rq *rq, struct task_struct *p)
sched/rt.c:329:static void dequeue_pushable_task(struct rq *rq, struct task_struct *p)
sched/rt.c:344:static inline void enqueue_pushable_task(struct rq *rq, struct task_struct *p)
sched/rt.c:348:static inline void dequeue_pushable_task(struct rq *rq, struct task_struct *p)
sched/rt.c:353:void inc_rt_migration(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)
sched/rt.c:358:void dec_rt_migration(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)
sched/rt.c:364:static inline int on_rt_rq(struct sched_rt_entity *rt_se)
sched/rt.c:371:static inline u64 sched_rt_runtime(struct rt_rq *rt_rq)
sched/rt.c:379:static inline u64 sched_rt_period(struct rt_rq *rt_rq)
sched/rt.c:415:static void sched_rt_rq_enqueue(struct rt_rq *rt_rq)
sched/rt.c:432:static void sched_rt_rq_dequeue(struct rt_rq *rt_rq)
sched/rt.c:443:static inline int rt_rq_throttled(struct rt_rq *rt_rq)
sched/rt.c:448:static int rt_se_boosted(struct sched_rt_entity *rt_se)
sched/rt.c:473:struct rt_rq *sched_rt_period_rt_rq(struct rt_bandwidth *rt_b, int cpu)
sched/rt.c:485:static inline u64 sched_rt_runtime(struct rt_rq *rt_rq)
sched/rt.c:490:static inline u64 sched_rt_period(struct rt_rq *rt_rq)
sched/rt.c:508:static inline void sched_rt_rq_enqueue(struct rt_rq *rt_rq)
sched/rt.c:514:static inline void sched_rt_rq_dequeue(struct rt_rq *rt_rq)
sched/rt.c:518:static inline int rt_rq_throttled(struct rt_rq *rt_rq)
sched/rt.c:529:struct rt_rq *sched_rt_period_rt_rq(struct rt_bandwidth *rt_b, int cpu)
sched/rt.c:545:static int do_balance_runtime(struct rt_rq *rt_rq)
sched/rt.c:600:static void __disable_runtime(struct rq *rq)
sched/rt.c:679:static void __enable_runtime(struct rq *rq)
sched/rt.c:703:static int balance_runtime(struct rt_rq *rt_rq)
sched/rt.c:719:static inline int balance_runtime(struct rt_rq *rt_rq)
sched/rt.c:725:static int do_sched_rt_period_timer(struct rt_bandwidth *rt_b, int overrun)
sched/rt.c:791:static inline int rt_se_prio(struct sched_rt_entity *rt_se)
sched/rt.c:803:static int sched_rt_runtime_exceeded(struct rt_rq *rt_rq)
sched/rt.c:856:static void update_curr_rt(struct rq *rq)
sched/rt.c:1020:void inc_rt_tasks(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)
sched/rt.c:1033:void dec_rt_tasks(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)
sched/rt.c:1044:static void __enqueue_rt_entity(struct sched_rt_entity *rt_se, bool head)
sched/rt.c:1069:static void __dequeue_rt_entity(struct sched_rt_entity *rt_se)
sched/rt.c:1085:static void dequeue_rt_stack(struct sched_rt_entity *rt_se)
sched/rt.c:1100:static void enqueue_rt_entity(struct sched_rt_entity *rt_se, bool head)
sched/rt.c:1107:static void dequeue_rt_entity(struct sched_rt_entity *rt_se)
sched/rt.c:1138:static void dequeue_task_rt(struct rq *rq, struct task_struct *p, int flags)
sched/rt.c:1168:static void requeue_task_rt(struct rq *rq, struct task_struct *p, int head)
sched/rt.c:1179:static void yield_task_rt(struct rq *rq)
sched/rt.c:1241:static void check_preempt_equal_prio(struct rq *rq, struct task_struct *p)
sched/rt.c:1267:static void check_preempt_curr_rt(struct rq *rq, struct task_struct *p, int flags)
sched/rt.c:1354:static void put_prev_task_rt(struct rq *rq, struct task_struct *p)
sched/rt.c:1371:static int pick_rt_task(struct rq *rq, struct task_struct *p, int cpu)
sched/rt.c:1401:static int find_lowest_rq(struct task_struct *task)
sched/rt.c:1547:static int push_rt_task(struct rq *rq)
sched/rt.c:1629:static void push_rt_tasks(struct rq *rq)
sched/rt.c:1636:static int pull_rt_task(struct rq *this_rq)
sched/rt.c:1719:static void pre_schedule_rt(struct rq *rq, struct task_struct *prev)
sched/rt.c:1726:static void post_schedule_rt(struct rq *rq)
sched/rt.c:1735:static void task_woken_rt(struct rq *rq, struct task_struct *p)
sched/rt.c:1787:static void rq_online_rt(struct rq *rq)
sched/rt.c:1798:static void rq_offline_rt(struct rq *rq)
sched/rt.c:1812:static void switched_from_rt(struct rq *rq, struct task_struct *p)
sched/rt.c:1828:void init_sched_rt_class(void)
sched/rt.c:1844:static void switched_to_rt(struct rq *rq, struct task_struct *p)
sched/rt.c:1909:static void watchdog(struct rq *rq, struct task_struct *p)
sched/rt.c:1931:static void task_tick_rt(struct rq *rq, struct task_struct *p, int queued)
sched/rt.c:1964:static void set_curr_task_rt(struct rq *rq)
sched/rt.c:2020:void print_rt_stats(struct seq_file *m, int cpu)
sched/idle_task.c:17:static void pre_schedule_idle(struct rq *rq, struct task_struct *prev)
sched/idle_task.c:23:static void post_schedule_idle(struct rq *rq)
sched/idle_task.c:31:static void check_preempt_curr_idle(struct rq *rq, struct task_struct *p, int flags)
sched/idle_task.c:59:static void put_prev_task_idle(struct rq *rq, struct task_struct *prev)
sched/idle_task.c:63:static void task_tick_idle(struct rq *rq, struct task_struct *curr, int queued)
sched/idle_task.c:67:static void set_curr_task_idle(struct rq *rq)
sched/idle_task.c:71:static void switched_to_idle(struct rq *rq, struct task_struct *p)
sched/cpuacct.h:8:static inline void cpuacct_charge(struct task_struct *tsk, u64 cputime)
sched/core.c:92:void start_bandwidth_timer(struct hrtimer *period_timer, ktime_t period)
sched/core.c:117:void update_rq_clock(struct rq *rq)
sched/core.c:152:static int sched_feat_show(struct seq_file *m, void *v)
sched/core.c:180:static void sched_feat_disable(int i)
sched/core.c:186:static void sched_feat_enable(int i)
sched/core.c:196:static int sched_feat_set(char *cmp)
sched/core.c:248:static int sched_feat_open(struct inode *inode, struct file *filp)
sched/core.c:340:static void __task_rq_unlock(struct rq *rq)
sched/core.c:375:static void hrtick_clear(struct rq *rq)
sched/core.c:401:static int __hrtick_restart(struct rq *rq)
sched/core.c:412:static void __hrtick_start(void *arg)
sched/core.c:427:void hrtick_start(struct rq *rq, u64 delay)
sched/core.c:471:void hrtick_start(struct rq *rq, u64 delay)
sched/core.c:477:static inline void init_hrtick(void)
sched/core.c:482:static void init_rq_hrtick(struct rq *rq)
sched/core.c:496:static inline void hrtick_clear(struct rq *rq)
sched/core.c:500:static inline void init_rq_hrtick(struct rq *rq)
sched/core.c:504:static inline void init_hrtick(void)
sched/core.c:516:void resched_task(struct task_struct *p)
sched/core.c:539:void resched_cpu(int cpu)
sched/core.c:560:int get_nohz_timer_target(void)
sched/core.c:589:static void wake_up_idle_cpu(int cpu)
sched/core.c:619:static bool wake_up_full_nohz_cpu(int cpu)
sched/core.c:631:void wake_up_nohz_cpu(int cpu)
sched/core.c:637:static inline bool got_nohz_idle_kick(void)
sched/core.c:657:static inline bool got_nohz_idle_kick(void)
sched/core.c:665:bool sched_can_stop_tick(void)
sched/core.c:682:void sched_avg_update(struct rq *rq)
sched/core.c:739:int tg_nop(struct task_group *tg, void *data)
sched/core.c:745:static void set_load_weight(struct task_struct *p)
sched/core.c:763:static void enqueue_task(struct rq *rq, struct task_struct *p, int flags)
sched/core.c:770:static void dequeue_task(struct rq *rq, struct task_struct *p, int flags)
sched/core.c:777:void activate_task(struct rq *rq, struct task_struct *p, int flags)
sched/core.c:785:void deactivate_task(struct rq *rq, struct task_struct *p, int flags)
sched/core.c:793:static void update_rq_clock_task(struct rq *rq, s64 delta)
sched/core.c:853:void sched_set_stop_task(int cpu, struct task_struct *stop)
sched/core.c:886:static inline int __normal_prio(struct task_struct *p)
sched/core.c:898:static inline int normal_prio(struct task_struct *p)
sched/core.c:916:static int effective_prio(struct task_struct *p)
sched/core.c:952:void check_preempt_curr(struct rq *rq, struct task_struct *p, int flags)
sched/core.c:978:void set_task_cpu(struct task_struct *p, unsigned int new_cpu)
sched/core.c:1016:static void __migrate_swap_task(struct task_struct *p, int cpu)
sched/core.c:1043:static int migrate_swap_stop(void *data)
sched/core.c:1083:int migrate_swap(struct task_struct *cur, struct task_struct *p)
sched/core.c:1140:unsigned long wait_task_inactive(struct task_struct *p, long match_state)
sched/core.c:1245:void kick_process(struct task_struct *p)
sched/core.c:1262:static int select_fallback_rq(int cpu, struct task_struct *p)
sched/core.c:1336:int select_task_rq(struct task_struct *p, int cpu, int sd_flags, int wake_flags)
sched/core.c:1357:static void update_avg(u64 *avg, u64 sample)
sched/core.c:1404:static void ttwu_activate(struct rq *rq, struct task_struct *p, int en_flags)
sched/core.c:1460:static int ttwu_remote(struct task_struct *p, int wake_flags)
sched/core.c:1478:static void sched_ttwu_pending(void)
sched/core.c:1495:void scheduler_ipi(void)
sched/core.c:1537:static void ttwu_queue_remote(struct task_struct *p, int cpu)
sched/core.c:1543:bool cpus_share_cache(int this_cpu, int that_cpu)
sched/core.c:1549:static void ttwu_queue(struct task_struct *p, int cpu)
sched/core.c:1646:static void try_to_wake_up_local(struct task_struct *p)
sched/core.c:1686:int wake_up_process(struct task_struct *p)
sched/core.c:1693:int wake_up_state(struct task_struct *p, unsigned int state)
sched/core.c:1704:static void __sched_fork(unsigned long clone_flags, struct task_struct *p)
sched/core.c:1751:void set_numabalancing_state(bool enabled)
sched/core.c:1761:void set_numabalancing_state(bool enabled)
sched/core.c:1771:void sched_fork(unsigned long clone_flags, struct task_struct *p)
sched/core.c:1849:void wake_up_new_task(struct task_struct *p)
sched/core.c:1884:void preempt_notifier_register(struct preempt_notifier *notifier)
sched/core.c:1896:void preempt_notifier_unregister(struct preempt_notifier *notifier)
sched/core.c:1902:static void fire_sched_in_preempt_notifiers(struct task_struct *curr)
sched/core.c:1922:static void fire_sched_in_preempt_notifiers(struct task_struct *curr)
sched/core.c:1974:static void finish_task_switch(struct rq *rq, struct task_struct *prev)
sched/core.c:2020:static inline void pre_schedule(struct rq *rq, struct task_struct *prev)
sched/core.c:2027:static inline void post_schedule(struct rq *rq)
sched/core.c:2043:static inline void pre_schedule(struct rq *rq, struct task_struct *p)
sched/core.c:2047:static inline void post_schedule(struct rq *rq)
sched/core.c:2139:unsigned long nr_running(void)
sched/core.c:2160:unsigned long nr_iowait(void)
sched/core.c:2170:unsigned long nr_iowait_cpu(int cpu)
sched/core.c:2182:void sched_exec(void)
sched/core.c:2218:static u64 do_task_delta_exec(struct task_struct *p, struct rq *rq)
sched/core.c:2281:void scheduler_tick(void)
sched/core.c:2318:u64 scheduler_tick_max_deferment(void)
sched/core.c:2413:static inline void schedule_debug(struct task_struct *prev)
sched/core.c:2429:static void put_prev_task(struct rq *rq, struct task_struct *prev)
sched/core.c:2587:static inline void sched_submit_work(struct task_struct *tsk)
sched/core.c:2762:void rt_mutex_setprio(struct task_struct *p, int prio)
sched/core.c:2817:void set_user_nice(struct task_struct *p, long nice)
sched/core.c:2869:int can_nice(const struct task_struct *p, const int nice)
sched/core.c:2928:int task_prio(const struct task_struct *p)
sched/core.c:2939:int task_nice(const struct task_struct *p)
sched/core.c:2951:int idle_cpu(int cpu)
sched/core.c:2975:struct task_struct *idle_task(int cpu)
sched/core.c:3010:static bool check_same_owner(struct task_struct *p)
sched/core.c:3334:long sched_setaffinity(pid_t pid, const struct cpumask *in_mask)
sched/core.c:3439:long sched_getaffinity(pid_t pid, struct cpumask *mask)
sched/core.c:3531:static void __cond_resched(void)
sched/core.c:3556:int __cond_resched_lock(spinlock_t *lock)
sched/core.c:3829:void sched_show_task(struct task_struct *p)
sched/core.c:3863:void show_state_filter(unsigned long state_filter)
sched/core.c:3898:void init_idle_bootup_task(struct task_struct *idle)
sched/core.c:3911:void init_idle(struct task_struct *idle, int cpu)
sched/core.c:3958:void do_set_cpus_allowed(struct task_struct *p, const struct cpumask *new_mask)
sched/core.c:3990:int set_cpus_allowed_ptr(struct task_struct *p, const struct cpumask *new_mask)
sched/core.c:4040:static int __migrate_task(struct task_struct *p, int src_cpu, int dest_cpu)
sched/core.c:4080:int migrate_task_to(struct task_struct *p, int target_cpu)
sched/core.c:4100:void sched_setnuma(struct task_struct *p, int nid)
sched/core.c:4130:static int migration_cpu_stop(void *data)
sched/core.c:4150:void idle_task_exit(void)
sched/core.c:4168:static void calc_load_migrate(struct rq *rq)
sched/core.c:4183:static void migrate_tasks(unsigned int dead_cpu)
sched/core.c:4260:static void sd_free_ctl_entry(struct ctl_table **tablep)
sched/core.c:4366:static void register_sched_domain_sysctl(void)
sched/core.c:4391:static void unregister_sched_domain_sysctl(void)
sched/core.c:4400:static void register_sched_domain_sysctl(void)
sched/core.c:4403:static void unregister_sched_domain_sysctl(void)
sched/core.c:4408:static void set_rq_online(struct rq *rq)
sched/core.c:4423:static void set_rq_offline(struct rq *rq)
sched/core.c:4562:static inline bool sched_debug(void)
sched/core.c:4654:static void sched_domain_debug(struct sched_domain *sd, int cpu)
sched/core.c:4679:static inline bool sched_debug(void)
sched/core.c:4685:static int sd_degenerate(struct sched_domain *sd)
sched/core.c:4737:static void free_rootdomain(struct rcu_head *rcu)
sched/core.c:4748:static void rq_attach_root(struct rq *rq, struct root_domain *rd)
sched/core.c:4785:static int init_rootdomain(struct root_domain *rd)
sched/core.c:4816:static void init_defrootdomain(void)
sched/core.c:4839:static void free_sched_groups(struct sched_group *sg, int free_sgp)
sched/core.c:4858:static void free_sched_domain(struct rcu_head *rcu)
sched/core.c:4875:static void destroy_sched_domain(struct sched_domain *sd, int cpu)
sched/core.c:4880:static void destroy_sched_domains(struct sched_domain *sd, int cpu)
sched/core.c:4902:static void update_top_cache_domain(int cpu)
sched/core.c:5042:static void build_group_mask(struct sched_domain *sd, struct sched_group *sg)
sched/core.c:5062:int group_balance_cpu(struct sched_group *sg)
sched/core.c:5144:static int get_group(int cpu, struct sd_data *sdd, struct sched_group **sg)
sched/core.c:5229:static void init_sched_groups_power(int cpu, struct sched_domain *sd)
sched/core.c:5358:static void claim_allocations(int cpu, struct sched_domain *sd)
sched/core.c:5408:static inline int sd_local_flags(int level)
sched/core.c:5468:static void sched_numa_warn(const char *str)
sched/core.c:5489:static bool find_numa_distance(int distance)
sched/core.c:5504:static void sched_init_numa(void)
sched/core.c:5634:static void sched_domains_numa_masks_set(int cpu)
sched/core.c:5647:static void sched_domains_numa_masks_clear(int cpu)
sched/core.c:5682:static inline void sched_init_numa(void)
sched/core.c:5694:static int __sdt_alloc(const struct cpumask *cpu_map)
sched/core.c:5747:static void __sdt_free(const struct cpumask *cpu_map)
sched/core.c:5892:cpumask_var_t *alloc_sched_domains(unsigned int ndoms)
sched/core.c:5909:void free_sched_domains(cpumask_var_t doms[], unsigned int ndoms)
sched/core.c:5922:static int init_sched_domains(const struct cpumask *cpu_map)
sched/core.c:5942:static void detach_destroy_domains(const struct cpumask *cpu_map)
sched/core.c:6163:int in_sched_functions(unsigned long addr)
sched/core.c:6361:static inline int preempt_count_equals(int preempt_offset)
sched/core.c:6368:void __might_sleep(const char *file, int line, int preempt_offset)
sched/core.c:6397:static void normalize_task(struct rq *rq, struct task_struct *p)
sched/core.c:6415:void normalize_rt_tasks(void)
sched/core.c:6479:struct task_struct *curr_task(int cpu)
sched/core.c:6502:void set_curr_task(int cpu, struct task_struct *p)
sched/core.c:6513:static void free_sched_group(struct task_group *tg)
sched/core.c:6522:struct task_group *sched_create_group(struct task_group *parent)
sched/core.c:6543:void sched_online_group(struct task_group *tg, struct task_group *parent)
sched/core.c:6559:static void free_sched_group_rcu(struct rcu_head *rhp)
sched/core.c:6566:void sched_destroy_group(struct task_group *tg)
sched/core.c:6572:void sched_offline_group(struct task_group *tg)
sched/core.c:6592:void sched_move_task(struct task_struct *tsk)
sched/core.c:6648:static inline int tg_has_rt_tasks(struct task_group *tg)
sched/core.c:6666:static int tg_rt_schedulable(struct task_group *tg, void *data)
sched/core.c:6722:static int __rt_schedulable(struct task_group *tg, u64 period, u64 runtime)
sched/core.c:6769:static int sched_group_set_rt_runtime(struct task_group *tg, long rt_runtime_us)
sched/core.c:6781:static long sched_group_rt_runtime(struct task_group *tg)
sched/core.c:6793:static int sched_group_set_rt_period(struct task_group *tg, long rt_period_us)
sched/core.c:6806:static long sched_group_rt_period(struct task_group *tg)
sched/core.c:6815:static int sched_rt_global_constraints(void)
sched/core.c:6841:static int sched_rt_can_attach(struct task_group *tg, struct task_struct *tsk)
sched/core.c:6851:static int sched_rt_global_constraints(void)
sched/core.c:6954:static int cpu_cgroup_css_online(struct cgroup_subsys_state *css)
sched/core.c:6964:static void cpu_cgroup_css_free(struct cgroup_subsys_state *css)
sched/core.c:6971:static void cpu_cgroup_css_offline(struct cgroup_subsys_state *css)
sched/core.c:7043:static int tg_set_cfs_bandwidth(struct task_group *tg, u64 period, u64 quota)
sched/core.c:7113:int tg_set_cfs_quota(struct task_group *tg, long cfs_quota_us)
sched/core.c:7126:long tg_get_cfs_quota(struct task_group *tg)
sched/core.c:7139:int tg_set_cfs_period(struct task_group *tg, long cfs_period_us)
sched/core.c:7149:long tg_get_cfs_period(struct task_group *tg)
sched/core.c:7212:static int tg_cfs_schedulable_down(struct task_group *tg, void *data)
sched/core.c:7240:static int __cfs_schedulable(struct task_group *tg, u64 period, u64 quota)
sched/core.c:7357:void dump_cpu_task(int cpu)
sched/cpupri.c:36:static int convert_prio(int prio)
sched/cpupri.c:140:void cpupri_set(struct cpupri *cp, int cpu, int newpri)
sched/cpupri.c:208:int cpupri_init(struct cpupri *cp)
sched/cpupri.c:236:void cpupri_cleanup(struct cpupri *cp)
sched/completion.c:29:void complete(struct completion *x)
sched/completion.c:49:void complete_all(struct completion *x)
sched/completion.c:265:bool try_wait_for_completion(struct completion *x)
sched/completion.c:288:bool completion_done(struct completion *x)
sched/cputime.c:29:void enable_sched_clock_irqtime(void)
sched/cputime.c:34:void disable_sched_clock_irqtime(void)
sched/cputime.c:47:void irqtime_account_irq(struct task_struct *curr)
sched/cputime.c:79:static int irqtime_account_hi_update(void)
sched/cputime.c:94:static int irqtime_account_si_update(void)
sched/cputime.c:235:void account_steal_time(cputime_t cputime)
sched/cputime.c:246:void account_idle_time(cputime_t cputime)
sched/cputime.c:280:void thread_group_cputime(struct task_struct *tsk, struct task_cputime *times)
sched/cputime.c:361:static void irqtime_account_idle_ticks(int ticks)
sched/cputime.c:381:void vtime_common_task_switch(struct task_struct *prev)
sched/cputime.c:404:void vtime_common_account_irq_enter(struct task_struct *tsk)
sched/cputime.c:431:void task_cputime_adjusted(struct task_struct *p, cputime_t *ut, cputime_t *st)
sched/cputime.c:437:void thread_group_cputime_adjusted(struct task_struct *p, cputime_t *ut, cputime_t *st)
sched/cputime.c:452:void account_process_tick(struct task_struct *p, int user_tick)
sched/cputime.c:482:void account_steal_ticks(unsigned long ticks)
sched/cputime.c:491:void account_idle_ticks(unsigned long ticks)
sched/cputime.c:506:static cputime_t scale_stime(u64 stime, u64 rtime, u64 total)
sched/cputime.c:604:void task_cputime_adjusted(struct task_struct *p, cputime_t *ut, cputime_t *st)
sched/cputime.c:617:void thread_group_cputime_adjusted(struct task_struct *p, cputime_t *ut, cputime_t *st)
sched/cputime.c:638:static cputime_t get_vtime_delta(struct task_struct *tsk)
sched/cputime.c:649:static void __vtime_account_system(struct task_struct *tsk)
sched/cputime.c:656:void vtime_account_system(struct task_struct *tsk)
sched/cputime.c:663:void vtime_gen_account_irq_exit(struct task_struct *tsk)
sched/cputime.c:672:void vtime_account_user(struct task_struct *tsk)
sched/cputime.c:683:void vtime_user_enter(struct task_struct *tsk)
sched/cputime.c:691:void vtime_guest_enter(struct task_struct *tsk)
sched/cputime.c:707:void vtime_guest_exit(struct task_struct *tsk)
sched/cputime.c:716:void vtime_account_idle(struct task_struct *tsk)
sched/cputime.c:723:void arch_vtime_task_switch(struct task_struct *prev)
sched/cputime.c:735:void vtime_init_idle(struct task_struct *t, int cpu)
sched/cputime.c:745:cputime_t task_gtime(struct task_struct *t)
sched/cputime.c:808:void task_cputime(struct task_struct *t, cputime_t *utime, cputime_t *stime)
sched/cpuacct.c:90:static void cpuacct_css_free(struct cgroup_subsys_state *css)
sched/cpuacct.c:99:static u64 cpuacct_cpuusage_read(struct cpuacct *ca, int cpu)
sched/cpuacct.c:118:static void cpuacct_cpuusage_write(struct cpuacct *ca, int cpu, u64 val)
sched/cpuacct.c:135:static u64 cpuusage_read(struct cgroup_subsys_state *css, struct cftype *cft)
sched/cpuacct.c:237:void cpuacct_charge(struct task_struct *tsk, u64 cputime)
sched/cpuacct.c:265:void cpuacct_account_field(struct task_struct *p, int index, u64 val)
sched/auto_group.h:22:static inline bool task_group_is_autogroup(struct task_group *tg)
sched/auto_group.h:46:static inline bool task_group_is_autogroup(struct task_group *tg)
sched/auto_group.h:58:static inline int autogroup_path(struct task_group *tg, char *buf, int buflen)
sched/stats.c:15:static int show_schedstat(struct seq_file *seq, void *v)
sched/stats.c:90:static void *schedstat_start(struct seq_file *file, loff_t *offset)
sched/stats.c:111:static void *schedstat_next(struct seq_file *file, void *data, loff_t *offset)
sched/stats.c:117:static void schedstat_stop(struct seq_file *file, void *data)
sched/stats.c:128:static int schedstat_open(struct inode *inode, struct file *file)
sched/auto_group.c:24:void autogroup_free(struct task_group *tg)
sched/auto_group.c:29:static inline void autogroup_destroy(struct kref *kref)
sched/auto_group.c:42:static inline void autogroup_kref_put(struct autogroup *ag)
sched/auto_group.c:113:bool task_wants_autogroup(struct task_struct *p, struct task_group *tg)
sched/auto_group.c:162:void sched_autogroup_create_attach(struct task_struct *p)
sched/auto_group.c:173:void sched_autogroup_detach(struct task_struct *p)
sched/auto_group.c:179:void sched_autogroup_fork(struct signal_struct *sig)
sched/auto_group.c:184:void sched_autogroup_exit(struct signal_struct *sig)
sched/auto_group.c:200:int proc_sched_autogroup_set_nice(struct task_struct *p, int nice)
sched/auto_group.c:234:void proc_sched_autogroup_show_task(struct task_struct *p, struct seq_file *m)
sched/auto_group.c:251:int autogroup_path(struct task_group *tg, char *buf, int buflen)
sched/clock.c:105:void sched_clock_init(void)
sched/clock.c:125:static inline u64 wrap_min(u64 x, u64 y)
sched/clock.c:130:static inline u64 wrap_max(u64 x, u64 y)
sched/clock.c:141:static u64 sched_clock_local(struct sched_clock_data *scd)
sched/clock.c:173:static u64 sched_clock_remote(struct sched_clock_data *scd)
sched/clock.c:240:u64 sched_clock_cpu(int cpu)
sched/clock.c:263:void sched_clock_tick(void)
sched/clock.c:288:void sched_clock_idle_sleep_event(void)
sched/clock.c:297:void sched_clock_idle_wakeup_event(u64 delta_ns)
sched/clock.c:317:u64 cpu_clock(int cpu)
sched/clock.c:336:u64 local_clock(void)
sched/clock.c:350:void sched_clock_init(void)
sched/clock.c:355:u64 sched_clock_cpu(int cpu)
sched/clock.c:363:u64 cpu_clock(int cpu)
sched/clock.c:368:u64 local_clock(void)
sched/proc.c:11:unsigned long this_cpu_load(void)
sched/proc.c:79:void get_avenrun(unsigned long *loads, unsigned long offset, int shift)
sched/proc.c:86:long calc_load_fold_active(struct rq *this_rq)
sched/proc.c:159:static inline int calc_load_write_idx(void)
sched/proc.c:179:static inline int calc_load_read_idx(void)
sched/proc.c:184:void calc_load_enter_idle(void)
sched/proc.c:200:void calc_load_exit_idle(void)
sched/proc.c:220:static long calc_load_fold_idle(void)
sched/proc.c:308:static void calc_global_nohz(void)
sched/proc.c:350:void calc_global_load(unsigned long ticks)
sched/proc.c:383:static void calc_load_account_active(struct rq *this_rq)
sched/proc.c:534:void update_idle_cpu_load(struct rq *this_rq)
sched/proc.c:555:void update_cpu_load_nohz(void)
sched/proc.c:581:void update_cpu_load_active(struct rq *this_rq)
seccomp.c:77:static inline u32 get_u32(u64 data, int index)
seccomp.c:92:u32 seccomp_bpf_load(int off)
seccomp.c:126:static int seccomp_check_filter(struct sock_filter *filter, unsigned int flen)
seccomp.c:202:static u32 seccomp_run_filters(int syscall)
seccomp.c:229:static long seccomp_attach_filter(struct sock_fprog *fprog)
seccomp.c:296:long seccomp_attach_user_filter(char __user *user_filter)
seccomp.c:318:void get_seccomp_filter(struct task_struct *tsk)
seccomp.c:328:void put_seccomp_filter(struct task_struct *tsk)
seccomp.c:346:static void seccomp_send_sigsys(int syscall, int reason)
seccomp.c:377:int __secure_computing(int this_syscall)
seccomp.c:464:long prctl_get_seccomp(void)
seccomp.c:483:long prctl_set_seccomp(unsigned long seccomp_mode, char __user *filter)
signal.c:59:static int sig_handler_ignored(void __user *handler, int sig)
signal.c:66:static int sig_task_ignored(struct task_struct *t, int sig, bool force)
signal.c:79:static int sig_ignored(struct task_struct *t, int sig, bool force)
signal.c:102:static inline int has_pending_signals(sigset_t *signal, sigset_t *blocked)
signal.c:130:static int recalc_sigpending_tsk(struct task_struct *t)
signal.c:150:void recalc_sigpending_and_wake(struct task_struct *t)
signal.c:156:void recalc_sigpending(void)
signal.c:169:int next_signal(struct sigpending *pending, sigset_t *mask)
signal.c:215:static inline void print_dropped_signal(int sig)
signal.c:246:bool task_set_jobctl_pending(struct task_struct *task, unsigned int mask)
signal.c:274:void task_clear_jobctl_trapping(struct task_struct *task)
signal.c:297:void task_clear_jobctl_pending(struct task_struct *task, unsigned int mask)
signal.c:326:static bool task_participate_group_stop(struct task_struct *task)
signal.c:392:static void __sigqueue_free(struct sigqueue *q)
signal.c:401:void flush_sigqueue(struct sigpending *queue)
signal.c:416:void __flush_signals(struct task_struct *t)
signal.c:423:void flush_signals(struct task_struct *t)
signal.c:432:static void __flush_itimer_signals(struct sigpending *pending)
signal.c:455:void flush_itimer_signals(void)
signal.c:466:void ignore_signals(struct task_struct *t)
signal.c:497:int unhandled_signal(struct task_struct *tsk, int sig)
signal.c:543:static void collect_signal(int sig, struct sigpending *list, siginfo_t *info)
signal.c:607:int dequeue_signal(struct task_struct *tsk, sigset_t *mask, siginfo_t *info)
signal.c:687:void signal_wake_up_state(struct task_struct *t, unsigned int state)
signal.c:710:static int rm_from_queue_full(sigset_t *mask, struct sigpending *s)
signal.c:734:static int rm_from_queue(unsigned long mask, struct sigpending *s)
signal.c:752:static inline int is_si_special(const struct siginfo *info)
signal.c:757:static inline bool si_fromuser(const struct siginfo *info)
signal.c:766:static int kill_ok_by_cred(struct task_struct *t)
signal.c:839:static void ptrace_trap_notify(struct task_struct *t)
signal.c:858:static bool prepare_signal(int sig, struct task_struct *p, bool force)
signal.c:931:static inline int wants_signal(int sig, struct task_struct *p)
signal.c:944:static void complete_signal(int sig, struct task_struct *p, int group)
signal.c:1020:static inline int legacy_queue(struct sigpending *signals, int sig)
signal.c:1026:static inline void userns_fixup_signal_uid(struct siginfo *info, struct task_struct *t)
signal.c:1040:static inline void userns_fixup_signal_uid(struct siginfo *info, struct task_struct *t)
signal.c:1163:static void print_fatal_signal(int signr)
signal.c:1262:int zap_other_threads(struct task_struct *p)
signal.c:1314:int group_send_sig_info(int sig, struct siginfo *info, struct task_struct *p)
signal.c:1333:int __kill_pgrp_info(int sig, struct siginfo *info, struct pid *pgrp)
signal.c:1348:int kill_pid_info(int sig, struct siginfo *info, struct pid *pid)
signal.c:1372:int kill_proc_info(int sig, struct siginfo *info, pid_t pid)
signal.c:1436:static int kill_something_info(int sig, struct siginfo *info, pid_t pid)
signal.c:1475:int send_sig_info(int sig, struct siginfo *info, struct task_struct *p)
signal.c:1521:int kill_pgrp(struct pid *pid, int sig, int priv)
signal.c:1533:int kill_pid(struct pid *pid, int sig, int priv)
signal.c:1548:struct sigqueue *sigqueue_alloc(void)
signal.c:1558:void sigqueue_free(struct sigqueue *q)
signal.c:1583:int send_sigqueue(struct sigqueue *q, struct task_struct *t, int group)
signal.c:1634:bool do_notify_parent(struct task_struct *tsk, int sig)
signal.c:1794:static inline int may_ptrace_stop(void)
signal.c:1822:static int sigkill_pending(struct task_struct *tsk)
signal.c:1839:static void ptrace_stop(int exit_code, int why, int clear_code, siginfo_t *info)
signal.c:1961:static void ptrace_do_notify(int signr, int exit_code, int why)
signal.c:1975:void ptrace_notify(int exit_code)
signal.c:2008:static bool do_signal_stop(int signr)
signal.c:2125:static void do_jobctl_trap(void)
signal.c:2144:static int ptrace_signal(int signr, siginfo_t *info)
signal.c:2408:void signal_setup_done(int failed, struct ksignal *ksig, int stepping)
signal.c:2422:static void retarget_shared_pending(struct task_struct *tsk, sigset_t *which)
signal.c:2449:void exit_signals(struct task_struct *tsk)
signal.c:2523:long do_no_restart_syscall(struct restart_block *param)
signal.c:2528:static void __set_task_blocked(struct task_struct *tsk, const sigset_t *newset)
signal.c:2547:void set_current_blocked(sigset_t *newset)
signal.c:2553:void __set_current_blocked(const sigset_t *newset)
signal.c:2570:int sigprocmask(int how, sigset_t *set, sigset_t *oldset)
signal.c:2673:static int do_sigpending(void *set, unsigned long sigsetsize)
signal.c:2726:int copy_siginfo_to_user(siginfo_t __user *to, const siginfo_t *from)
signal.c:2952:static int do_tkill(pid_t tgid, pid_t pid, int sig)
signal.c:3000:static int do_rt_sigqueueinfo(pid_t pid, int sig, siginfo_t *info)
signal.c:3046:static int do_rt_tgsigqueueinfo(pid_t tgid, pid_t pid, int sig, siginfo_t *info)
signal.c:3092:int do_sigaction(int sig, struct k_sigaction *act, struct k_sigaction *oact)
signal.c:3207:int restore_altstack(const stack_t __user *uss)
signal.c:3214:int __save_altstack(stack_t __user *uss, unsigned long sp)
signal.c:3257:int compat_restore_altstack(const compat_stack_t __user *uss)
signal.c:3264:int __compat_save_altstack(compat_stack_t __user *uss, unsigned long sp)
signal.c:3553:int sigsuspend(sigset_t *set)
smp.c:106:static void csd_lock_wait(struct call_single_data *csd)
smp.c:112:static void csd_lock(struct call_single_data *csd)
smp.c:125:static void csd_unlock(struct call_single_data *csd)
smp.c:142:static void generic_exec_single(int cpu, struct call_single_data *csd, int wait)
smp.c:178:void generic_smp_call_function_single_interrupt(void)
smp.c:456:int smp_call_function(smp_call_func_t func, void *info, int wait)
smp.c:667:static void do_nothing(void *unused)
smp.c:682:void kick_all_cpus_sync(void)
smpboot.c:27:struct task_struct *idle_thread_get(unsigned int cpu)
smpboot.c:48:static inline void idle_init(unsigned int cpu)
smpboot.c:104:static int smpboot_thread_fn(void *data)
smpboot.c:203:int smpboot_create_threads(unsigned int cpu)
smpboot.c:218:static void smpboot_unpark_thread(struct smp_hotplug_thread *ht, unsigned int cpu)
smpboot.c:227:void smpboot_unpark_threads(unsigned int cpu)
smpboot.c:237:static void smpboot_park_thread(struct smp_hotplug_thread *ht, unsigned int cpu)
smpboot.c:245:void smpboot_park_threads(unsigned int cpu)
smpboot.c:255:static void smpboot_destroy_threads(struct smp_hotplug_thread *ht)
smpboot.c:277:int smpboot_register_percpu_thread(struct smp_hotplug_thread *plug_thread)
smpboot.c:304:void smpboot_unregister_percpu_thread(struct smp_hotplug_thread *plug_thread)
softirq.c:68:static void wakeup_softirqd(void)
softirq.c:92:static void __local_bh_disable(unsigned long ip, unsigned int cnt)
softirq.c:118:static inline void __local_bh_disable(unsigned long ip, unsigned int cnt)
softirq.c:125:void local_bh_disable(void)
softirq.c:132:static void __local_bh_enable(unsigned int cnt)
softirq.c:146:void _local_bh_enable(void)
softirq.c:154:static inline void _local_bh_enable_ip(unsigned long ip)
softirq.c:186:void local_bh_enable(void)
softirq.c:192:void local_bh_enable_ip(unsigned long ip)
softirq.c:312:void irq_enter(void)
softirq.c:330:static inline void invoke_softirq(void)
softirq.c:353:static inline void tick_irq_exit(void)
softirq.c:369:void irq_exit(void)
softirq.c:407:void raise_softirq(unsigned int nr)
softirq.c:416:void __raise_softirq_irqoff(unsigned int nr)
softirq.c:439:void __tasklet_schedule(struct tasklet_struct *t)
softirq.c:453:void __tasklet_hi_schedule(struct tasklet_struct *t)
softirq.c:467:void __tasklet_hi_schedule_first(struct tasklet_struct *t)
softirq.c:478:static void tasklet_action(struct softirq_action *a)
softirq.c:513:static void tasklet_hi_action(struct softirq_action *a)
softirq.c:561:void tasklet_kill(struct tasklet_struct *t)
softirq.c:599:static void __tasklet_hrtimer_trampoline(unsigned long data)
softirq.c:643:static int ksoftirqd_should_run(unsigned int cpu)
softirq.c:648:static void run_ksoftirqd(unsigned int cpu)
softirq.c:675:void tasklet_kill_immediate(struct tasklet_struct *t, unsigned int cpu)
softirq.c:698:static void takeover_tasklets(unsigned int cpu)
stacktrace.c:14:void print_stack_trace(struct stack_trace *trace, int spaces)
stop_machine.c:55:static void cpu_stop_init_done(struct cpu_stop_done *done, unsigned int nr_todo)
stop_machine.c:63:static void cpu_stop_signal_done(struct cpu_stop_done *done, bool executed)
stop_machine.c:74:static void cpu_stop_queue_work(unsigned int cpu, struct cpu_stop_work *work)
stop_machine.c:116:int stop_one_cpu(unsigned int cpu, cpu_stop_fn_t fn, void *arg)
stop_machine.c:162:static void ack_state(struct multi_stop_data *msdata)
stop_machine.c:169:static int multi_cpu_stop(void *data)
stop_machine.c:226:static void irq_cpu_stop_queue_work(void *arg)
stop_machine.c:244:int stop_two_cpus(unsigned int cpu1, unsigned int cpu2, cpu_stop_fn_t fn, void *arg)
stop_machine.c:394:int stop_cpus(const struct cpumask *cpumask, cpu_stop_fn_t fn, void *arg)
stop_machine.c:423:int try_stop_cpus(const struct cpumask *cpumask, cpu_stop_fn_t fn, void *arg)
stop_machine.c:435:static int cpu_stop_should_run(unsigned int cpu)
stop_machine.c:447:static void cpu_stopper_thread(unsigned int cpu)
stop_machine.c:490:static void cpu_stop_create(unsigned int cpu)
stop_machine.c:495:static void cpu_stop_park(unsigned int cpu)
stop_machine.c:509:static void cpu_stop_unpark(unsigned int cpu)
sys.c:123:static bool set_one_prio_perm(struct task_struct *p)
sys.c:139:static int set_one_prio(struct task_struct *p, int niceval, int error)
sys.c:406:static int set_user(struct cred *new)
sys.c:861:void do_sys_times(struct tms *tms)
sys.c:1037:static void set_special_pids(struct pid *pid)
sys.c:1096:static int override_release(char __user *release, size_t len)
sys.c:1308:static inline bool rlim64_is_infinity(__u64 rlim64)
sys.c:1317:static void rlim_to_rlim64(const struct rlimit *rlim, struct rlimit64 *rlim64)
sys.c:1329:static void rlim64_to_rlim(const struct rlimit64 *rlim64, struct rlimit *rlim)
sys.c:1409:static int check_prlimit_permission(struct task_struct *task)
sys.c:1514:static void accumulate_thread_rusage(struct task_struct *t, struct rusage *r)
sys.c:1524:static void k_getrusage(struct task_struct *p, int who, struct rusage *r)
sys.c:1598:int getrusage(struct task_struct *p, int who, struct rusage __user *ru)
sys.c:1633:static int prctl_set_mm_exe_file(struct mm_struct *mm, unsigned int fd)
sys.c:1827:static int prctl_get_tid_address(struct task_struct *me, int __user **tid_addr)
sys.c:1832:static int prctl_get_tid_address(struct task_struct *me, int __user **tid_addr)
sys.c:2024:static int do_sysinfo(struct sysinfo *info)
sysctl.c:1773:static size_t proc_skip_spaces(char **buf)
sysctl.c:1782:static void proc_skip_char(char **buf, size_t *size, const char v)
sysctl.c:1886:static int proc_put_char(void __user **buf, size_t *size, char c)
sysctl.c:2137:static void validate_coredump_safety(void)
sysctl_binary.c:1277:static char *sysctl_getname(const int *name, int nlen, const struct bin_table **tablep)
sysctl_binary.c:1349:static void deprecated_sysctl_warning(const int *name, int nlen)
sysctl_binary.c:1387:static void warn_on_bintable(const int *name, int nlen)
task_work.c:85:void task_work_run(void)
taskstats.c:110:static int send_reply(struct sk_buff *skb, struct genl_info *info)
taskstats.c:202:static int fill_stats_for_pid(pid_t pid, struct taskstats *stats)
taskstats.c:218:static int fill_stats_for_tgid(pid_t tgid, struct taskstats *stats)
taskstats.c:268:static void fill_tgid_exit(struct task_struct *tsk)
taskstats.c:288:static int add_del_listener(pid_t pid, const struct cpumask *mask, int isadd)
taskstats.c:347:static int parse(struct nlattr *na, struct cpumask *mask)
taskstats.c:425:static int cgroupstats_user_cmd(struct sk_buff *skb, struct genl_info *info)
taskstats.c:475:static int cmd_attr_register_cpumask(struct genl_info *info)
taskstats.c:491:static int cmd_attr_deregister_cpumask(struct genl_info *info)
taskstats.c:507:static size_t taskstats_packet_size(void)
taskstats.c:519:static int cmd_attr_pid(struct genl_info *info)
taskstats.c:548:static int cmd_attr_tgid(struct genl_info *info)
taskstats.c:577:static int taskstats_user_cmd(struct sk_buff *skb, struct genl_info *info)
taskstats.c:616:void taskstats_exit(struct task_struct *tsk, int group_dead)
test_kprobes.c:33:static int kp_pre_handler(struct kprobe *p, struct pt_regs *regs)
test_kprobes.c:56:static int test_kprobe(void)
test_kprobes.c:90:static int kp_pre_handler2(struct kprobe *p, struct pt_regs *regs)
test_kprobes.c:113:static int test_kprobes(void)
test_kprobes.c:165:static u32 j_kprobe_target(u32 value)
test_kprobes.c:183:static int test_jprobe(void)
test_kprobes.c:210:static int test_jprobes(void)
test_kprobes.c:247:static int entry_handler(struct kretprobe_instance *ri, struct pt_regs *regs)
test_kprobes.c:278:static int test_kretprobe(void)
test_kprobes.c:325:static int test_kretprobes(void)
test_kprobes.c:360:int init_test_probes(void)
time.c:139:static inline void warp_clock(void)
time.c:162:int do_sys_settimeofday(const struct timespec *tv, const struct timezone *tz)
time.c:231:struct timespec current_fs_time(struct super_block *sb)
time.c:244:unsigned int jiffies_to_msecs(const unsigned long j)
time.c:260:unsigned int jiffies_to_usecs(const unsigned long j)
time.c:288:struct timespec timespec_trunc(struct timespec t, unsigned gran)
time.c:358:void set_normalized_timespec(struct timespec *ts, time_t sec, s64 nsec)
time.c:386:struct timespec ns_to_timespec(const s64 nsec)
time.c:411:struct timeval ns_to_timeval(const s64 nsec)
time.c:437:unsigned long msecs_to_jiffies(const unsigned int m)
time.c:479:unsigned long usecs_to_jiffies(const unsigned int u)
time.c:564:void jiffies_to_timeval(const unsigned long jiffies, struct timeval *value)
time.c:581:clock_t jiffies_to_clock_t(unsigned long x)
time.c:595:unsigned long clock_t_to_jiffies(unsigned long x)
time.c:612:u64 jiffies_64_to_clock_t(u64 x)
time.c:634:u64 nsec_to_clock_t(u64 x)
time.c:663:u64 nsecs_to_jiffies64(u64 n)
time.c:693:unsigned long nsecs_to_jiffies(u64 n)
time/clockevents.c:91:u64 clockevent_delta2ns(unsigned long latch, struct clock_event_device *evt)
time/clockevents.c:128:void clockevents_shutdown(struct clock_event_device *dev)
time/clockevents.c:145:static int clockevents_increase_min_delta(struct clock_event_device *dev)
time/clockevents.c:174:static int clockevents_program_min_delta(struct clock_event_device *dev)
time/clockevents.c:213:static int clockevents_program_min_delta(struct clock_event_device *dev)
time/clockevents.c:277:static void clockevents_notify_released(void)
time/clockevents.c:293:static int clockevents_replace(struct clock_event_device *ced)
time/clockevents.c:321:static int __clockevents_try_unbind(struct clock_event_device *ced, int cpu)
time/clockevents.c:335:static void __clockevents_unbind(void *arg)
time/clockevents.c:352:static int clockevents_unbind(struct clock_event_device *ced, int cpu)
time/clockevents.c:363:int clockevents_unbind_device(struct clock_event_device *ced, int cpu)
time/clockevents.c:378:void clockevents_register_device(struct clock_event_device *dev)
time/clockevents.c:398:void clockevents_config(struct clock_event_device *dev, u32 freq)
time/clockevents.c:452:int clockevents_update_freq(struct clock_event_device *dev, u32 freq)
time/clockevents.c:465:void clockevents_handle_noop(struct clock_event_device *dev)
time/clockevents.c:503:void clockevents_suspend(void)
time/clockevents.c:515:void clockevents_resume(void)
time/clockevents.c:528:void clockevents_notify(unsigned long reason, void *arg)
time/timer_list.c:46:static void print_name_offset(struct seq_file *m, void *sym)
time/timer_list.c:138:static void print_cpu(struct seq_file *m, int cpu, u64 now)
time/timer_list.c:242:static void timer_list_show_tickdevices_header(struct seq_file *m)
time/timer_list.c:257:static inline void timer_list_header(struct seq_file *m, u64 now)
time/timer_list.c:265:static int timer_list_show(struct seq_file *m, void *v)
time/timer_list.c:282:void sysrq_timer_list_show(void)
time/timer_list.c:300:static void *move_iter(struct timer_list_iter *iter, loff_t offset)
time/timer_list.c:319:static void *timer_list_start(struct seq_file *file, loff_t *offset)
time/timer_list.c:330:static void *timer_list_next(struct seq_file *file, void *v, loff_t *offset)
time/timer_list.c:337:static void timer_list_stop(struct seq_file *seq, void *v)
time/timer_list.c:348:static int timer_list_open(struct inode *inode, struct file *filp)
time/jiffies.c:56:static cycle_t jiffies_read(struct clocksource *cs)
time/jiffies.c:73:u64 get_jiffies_64(void)
time/jiffies.c:103:int register_refined_jiffies(long cycles_per_second)
time/posix-clock.c:47:static void put_posix_clock(struct posix_clock *clk)
time/posix-clock.c:85:static int posix_clock_fasync(int fd, struct file *fp, int on)
time/posix-clock.c:101:static int posix_clock_mmap(struct file *fp, struct vm_area_struct *vma)
time/posix-clock.c:153:static int posix_clock_open(struct inode *inode, struct file *fp)
time/posix-clock.c:179:static int posix_clock_release(struct inode *inode, struct file *fp)
time/posix-clock.c:209:int posix_clock_register(struct posix_clock *clk, dev_t devid)
time/posix-clock.c:224:static void delete_clock(struct kref *kref)
time/posix-clock.c:232:void posix_clock_unregister(struct posix_clock *clk)
time/posix-clock.c:249:static int get_clock_desc(const clockid_t id, struct posix_clock_desc *cd)
time/posix-clock.c:270:static void put_clock_desc(struct posix_clock_desc *cd)
time/posix-clock.c:276:static int pc_clock_adjtime(clockid_t id, struct timex *tx)
time/posix-clock.c:300:static int pc_clock_gettime(clockid_t id, struct timespec *ts)
time/posix-clock.c:319:static int pc_clock_getres(clockid_t id, struct timespec *ts)
time/posix-clock.c:338:static int pc_clock_settime(clockid_t id, const struct timespec *ts)
time/posix-clock.c:362:static int pc_timer_create(struct k_itimer *kit)
time/posix-clock.c:382:static int pc_timer_delete(struct k_itimer *kit)
time/posix-clock.c:402:static void pc_timer_gettime(struct k_itimer *kit, struct itimerspec *ts)
time/ntp.c:117:static inline s64 ntp_offset_chunk(s64 offset)
time/ntp.c:125:static inline void pps_reset_freq_interval(void)
time/ntp.c:136:static inline void pps_clear(void)
time/ntp.c:150:static inline void pps_dec_valid(void)
time/ntp.c:161:static inline void pps_set_freq(s64 freq)
time/ntp.c:166:static inline int is_error_status(int status)
time/ntp.c:185:static inline void pps_fill_timex(struct timex *txc)
time/ntp.c:202:static inline s64 ntp_offset_chunk(s64 offset)
time/ntp.c:212:static inline int is_error_status(int status)
time/ntp.c:217:static inline void pps_fill_timex(struct timex *txc)
time/ntp.c:237:static inline int ntp_synced(void)
time/ntp.c:251:static void ntp_update_frequency(void)
time/ntp.c:273:static inline s64 ntp_update_offset_fll(s64 offset64, long secs)
time/ntp.c:288:static void ntp_update_offset(long offset)
time/ntp.c:341:void ntp_clear(void)
time/ntp.c:358:u64 ntp_tick_length(void)
time/ntp.c:374:int second_overflow(unsigned long secs)
time/ntp.c:467:static void sync_cmos_clock(struct work_struct *work)
time/ntp.c:520:void ntp_notify_cmos_timer(void)
time/ntp.c:533:static inline void process_adj_status(struct timex *txc, struct timespec *ts)
time/ntp.c:608:int ntp_validate_timex(struct timex *txc)
time/ntp.c:642:int __do_adjtimex(struct timex *txc, struct timespec *ts, s32 *time_tai)
time/ntp.c:723:static inline long pps_phase_filter_get(long *jitter)
time/ntp.c:734:static inline void pps_phase_filter_add(long err)
time/ntp.c:744:static inline void pps_dec_freq_interval(void)
time/ntp.c:758:static inline void pps_inc_freq_interval(void)
time/ntp.c:778:static long hardpps_update_freq(struct pps_normtime freq_norm)
time/ntp.c:832:static void hardpps_update_phase(long error)
time/ntp.c:873:void __hardpps(const struct timespec *phase_ts, const struct timespec *raw_ts)
time/clocksource.c:57:static u64 timecounter_read_delta(struct timecounter *tc)
time/clocksource.c:77:u64 timecounter_read(struct timecounter *tc)
time/clocksource.c:203:static void clocksource_watchdog_work(struct work_struct *work)
time/clocksource.c:212:static void __clocksource_unstable(struct clocksource *cs)
time/clocksource.c:220:static void clocksource_unstable(struct clocksource *cs, int64_t delta)
time/clocksource.c:236:void clocksource_mark_unstable(struct clocksource *cs)
time/clocksource.c:249:static void clocksource_watchdog(unsigned long data)
time/clocksource.c:352:static inline void clocksource_start_watchdog(void)
time/clocksource.c:363:static inline void clocksource_stop_watchdog(void)
time/clocksource.c:371:static inline void clocksource_reset_watchdog(void)
time/clocksource.c:379:static void clocksource_resume_watchdog(void)
time/clocksource.c:384:static void clocksource_enqueue_watchdog(struct clocksource *cs)
time/clocksource.c:409:static void clocksource_dequeue_watchdog(struct clocksource *cs)
time/clocksource.c:425:static int __clocksource_watchdog_kthread(void)
time/clocksource.c:456:static int clocksource_watchdog_kthread(void *data)
time/clocksource.c:465:static bool clocksource_is_watchdog(struct clocksource *cs)
time/clocksource.c:472:static void clocksource_enqueue_watchdog(struct clocksource *cs)
time/clocksource.c:489:void clocksource_suspend(void)
time/clocksource.c:501:void clocksource_resume(void)
time/clocksource.c:519:void clocksource_touch_watchdog(void)
time/clocksource.c:529:static u32 clocksource_max_adjustment(struct clocksource *cs)
time/clocksource.c:547:u64 clocks_calc_max_nsecs(u32 mult, u32 shift, u32 maxadj, u64 mask)
time/clocksource.c:584:static u64 clocksource_max_deferment(struct clocksource *cs)
time/clocksource.c:623:static void __clocksource_select(bool skipcur)
time/clocksource.c:670:static void clocksource_select(void)
time/clocksource.c:675:static void clocksource_select_fallback(void)
time/clocksource.c:712:static void clocksource_enqueue(struct clocksource *cs)
time/clocksource.c:735:void __clocksource_updatefreq_scale(struct clocksource *cs, u32 scale, u32 freq)
time/clocksource.c:787:int __clocksource_register_scale(struct clocksource *cs, u32 scale, u32 freq)
time/clocksource.c:810:int clocksource_register(struct clocksource *cs)
time/clocksource.c:830:static void __clocksource_change_rating(struct clocksource *cs, int rating)
time/clocksource.c:842:void clocksource_change_rating(struct clocksource *cs, int rating)
time/clocksource.c:854:static int clocksource_unbind(struct clocksource *cs)
time/clocksource.c:878:int clocksource_unregister(struct clocksource *cs)
time/clocksource.c:912:ssize_t sysfs_get_uname(const char *buf, char *dst, size_t cnt)
time/alarmtimer.c:63:struct rtc_device *alarmtimer_get_rtcdev(void)
time/alarmtimer.c:100:static inline void alarmtimer_rtc_timer_init(void)
time/alarmtimer.c:109:static int alarmtimer_rtc_interface_setup(void)
time/alarmtimer.c:114:static void alarmtimer_rtc_interface_remove(void)
time/alarmtimer.c:119:struct rtc_device *alarmtimer_get_rtcdev(void)
time/alarmtimer.c:138:static void alarmtimer_enqueue(struct alarm_base *base, struct alarm *alarm)
time/alarmtimer.c:156:static void alarmtimer_dequeue(struct alarm_base *base, struct alarm *alarm)
time/alarmtimer.c:202:ktime_t alarm_expires_remaining(const struct alarm *alarm)
time/alarmtimer.c:220:static int alarmtimer_suspend(struct device *dev)
time/alarmtimer.c:275:static int alarmtimer_suspend(struct device *dev)
time/alarmtimer.c:281:static void alarmtimer_freezerset(ktime_t absexp, enum alarmtimer_type type)
time/alarmtimer.c:320:int alarm_start(struct alarm *alarm, ktime_t start)
time/alarmtimer.c:341:int alarm_start_relative(struct alarm *alarm, ktime_t start)
time/alarmtimer.c:350:void alarm_restart(struct alarm *alarm)
time/alarmtimer.c:370:int alarm_try_to_cancel(struct alarm *alarm)
time/alarmtimer.c:392:int alarm_cancel(struct alarm *alarm)
time/alarmtimer.c:404:u64 alarm_forward(struct alarm *alarm, ktime_t now, ktime_t interval)
time/alarmtimer.c:436:u64 alarm_forward_now(struct alarm *alarm, ktime_t interval)
time/alarmtimer.c:488:static int alarm_clock_getres(const clockid_t which_clock, struct timespec *tp)
time/alarmtimer.c:505:static int alarm_clock_get(clockid_t which_clock, struct timespec *tp)
time/alarmtimer.c:522:static int alarm_timer_create(struct k_itimer *new_timer)
time/alarmtimer.c:564:static int alarm_timer_del(struct k_itimer *timr)
time/alarmtimer.c:629:static int alarmtimer_do_nsleep(struct alarm *alarm, ktime_t absexp)
time/timeconv.c:37:static int __isleap(long year)
time/timeconv.c:43:static long math_div(long a, long b)
time/timeconv.c:49:static long leaps_between(long y1, long y2)
time/timeconv.c:77:void time_to_tm(time_t totalsecs, int offset, struct tm *result)
time/timekeeping.c:46:static inline void tk_normalize_xtime(struct timekeeper *tk)
time/timekeeping.c:54:static void tk_set_xtime(struct timekeeper *tk, const struct timespec *ts)
time/timekeeping.c:60:static void tk_xtime_add(struct timekeeper *tk, const struct timespec *ts)
time/timekeeping.c:67:static void tk_set_wall_to_mono(struct timekeeper *tk, struct timespec wtm)
time/timekeeping.c:84:static void tk_set_sleep_time(struct timekeeper *tk, struct timespec t)
time/timekeeping.c:103:static void tk_setup_internals(struct timekeeper *tk, struct clocksource *clock)
time/timekeeping.c:157:u32 get_arch_timeoffset(void)
time/timekeeping.c:167:static inline s64 timekeeping_get_ns(struct timekeeper *tk)
time/timekeeping.c:187:static inline s64 timekeeping_get_ns_raw(struct timekeeper *tk)
time/timekeeping.c:209:static void update_pvclock_gtod(struct timekeeper *tk, bool was_set)
time/timekeeping.c:217:int pvclock_gtod_register_notifier(struct notifier_block *nb)
time/timekeeping.c:236:int pvclock_gtod_unregister_notifier(struct notifier_block *nb)
time/timekeeping.c:250:static void timekeeping_update(struct timekeeper *tk, unsigned int action)
time/timekeeping.c:270:static void timekeeping_forward_now(struct timekeeper *tk)
time/timekeeping.c:299:int __getnstimeofday(struct timespec *ts)
time/timekeeping.c:332:void getnstimeofday(struct timespec *ts)
time/timekeeping.c:338:ktime_t ktime_get(void)
time/timekeeping.c:368:void ktime_get_ts(struct timespec *ts)
time/timekeeping.c:398:void timekeeping_clocktai(struct timespec *ts)
time/timekeeping.c:426:ktime_t ktime_get_clocktai(void)
time/timekeeping.c:446:void getnstime_raw_and_real(struct timespec *ts_raw, struct timespec *ts_real)
time/timekeeping.c:479:void do_gettimeofday(struct timeval *tv)
time/timekeeping.c:495:int do_settimeofday(const struct timespec *tv)
time/timekeeping.c:535:int timekeeping_inject_offset(struct timespec *ts)
time/timekeeping.c:578:s32 timekeeping_get_tai_offset(void)
time/timekeeping.c:596:static void __timekeeping_set_tai_offset(struct timekeeper *tk, s32 tai_offset)
time/timekeeping.c:606:void timekeeping_set_tai_offset(s32 tai_offset)
time/timekeeping.c:624:static int change_clocksource(void *data)
time/timekeeping.c:666:int timekeeping_notify(struct clocksource *clock)
time/timekeeping.c:682:ktime_t ktime_get_real(void)
time/timekeeping.c:698:void getrawmonotonic(struct timespec *ts)
time/timekeeping.c:718:int timekeeping_valid_for_hres(void)
time/timekeeping.c:737:u64 timekeeping_max_deferment(void)
time/timekeeping.c:873:void timekeeping_inject_sleeptime(struct timespec *delta)
time/timekeeping.c:908:static void timekeeping_resume(void)
time/timekeeping.c:986:static int timekeeping_suspend(void)
time/timekeeping.c:1107:static void timekeeping_adjust(struct timekeeper *tk, s64 offset)
time/timekeeping.c:1333:static inline void old_vsyscall_fixup(struct timekeeper *tk)
time/timekeeping.c:1363:static void update_wall_time(void)
time/timekeeping.c:1456:void getboottime(struct timespec *ts)
time/timekeeping.c:1479:void get_monotonic_boottime(struct timespec *ts)
time/timekeeping.c:1511:ktime_t ktime_get_boottime(void)
time/timekeeping.c:1524:void monotonic_to_bootbased(struct timespec *ts)
time/timekeeping.c:1532:unsigned long get_seconds(void)
time/timekeeping.c:1550:struct timespec __current_kernel_time(void)
time/timekeeping.c:1557:struct timespec current_kernel_time(void)
time/timekeeping.c:1573:struct timespec get_monotonic_coarse(void)
time/timekeeping.c:1594:void do_timer(unsigned long ticks)
time/timekeeping.c:1660:ktime_t ktime_get_monotonic_offset(void)
time/timekeeping.c:1678:int do_adjtimex(struct timex *txc)
time/timekeeping.c:1727:void hardpps(const struct timespec *phase_ts, const struct timespec *raw_ts)
time/timekeeping.c:1748:void xtime_update(unsigned long ticks)
time/tick-common.c:56:struct tick_device *tick_get_device(int cpu)
time/tick-common.c:64:int tick_is_oneshot_available(void)
time/tick-common.c:78:static void tick_periodic(int cpu)
time/tick-common.c:97:void tick_handle_periodic(struct clock_event_device *dev)
time/tick-common.c:132:void tick_setup_periodic(struct clock_event_device *dev, int broadcast)
time/tick-common.c:224:void tick_install_replacement(struct clock_event_device *newdev)
time/tick-common.c:288:void tick_check_new_device(struct clock_event_device *newdev)
time/tick-common.c:339:void tick_handover_do_timer(int *cpup)
time/tick-common.c:356:void tick_shutdown(unsigned int *cpup)
time/tick-common.c:374:void tick_suspend(void)
time/tick-common.c:381:void tick_resume(void)
time/sched_clock.c:193:static int sched_clock_suspend(void)
time/sched_clock.c:200:static void sched_clock_resume(void)
time/timekeeping_debug.c:26:static int tk_debug_show_sleep_time(struct seq_file *s, void *data)
time/timekeeping_debug.c:41:static int tk_debug_sleep_time_open(struct inode *inode, struct file *file)
time/timekeeping_debug.c:68:void tk_debug_account_sleep_time(struct timespec *t)
time/tick-internal.h:57:static inline void tick_broadcast_setup_oneshot(struct clock_event_device *bc)
time/tick-internal.h:77:static inline void tick_resume_oneshot(void)
time/tick-internal.h:81:static inline int tick_program_event(ktime_t expires, int force)
time/tick-internal.h:86:static inline void tick_broadcast_setup_oneshot(struct clock_event_device *bc)
time/tick-internal.h:92:static inline int tick_resume_broadcast_oneshot(struct clock_event_device *bc)
time/tick-internal.h:117:static inline void tick_install_broadcast_device(struct clock_event_device *dev)
time/tick-internal.h:121:static inline int tick_is_broadcast_device(struct clock_event_device *dev)
time/tick-internal.h:150:static inline int tick_device_is_functional(struct clock_event_device *dev)
time/tick-oneshot.c:27:int tick_program_event(ktime_t expires, int force)
time/tick-oneshot.c:37:void tick_resume_oneshot(void)
time/tick-oneshot.c:94:int tick_oneshot_mode_active(void)
time/tick-oneshot.c:112:int tick_init_highres(void)
time/tick-sched.c:44:struct tick_sched *tick_get_tick_sched(int cpu)
time/tick-sched.c:52:static void tick_do_update_jiffies64(ktime_t now)
time/tick-sched.c:94:static ktime_t tick_init_jiffy_update(void)
time/tick-sched.c:108:static void tick_sched_do_timer(ktime_t now)
time/tick-sched.c:130:static void tick_sched_handle(struct tick_sched *ts, struct pt_regs *regs)
time/tick-sched.c:155:static bool can_stop_full_tick(void)
time/tick-sched.c:201:void __tick_nohz_full_check(void)
time/tick-sched.c:213:static void nohz_full_kick_work_func(struct irq_work *work)
time/tick-sched.c:226:void tick_nohz_full_kick(void)
time/tick-sched.c:232:static void nohz_full_kick_ipi(void *info)
time/tick-sched.c:241:void tick_nohz_full_kick_all(void)
time/tick-sched.c:258:void __tick_nohz_task_switch(struct task_struct *tsk)
time/tick-sched.c:322:static int tick_nohz_init_all(void)
time/tick-sched.c:392:static void tick_nohz_update_jiffies(ktime_t now)
time/tick-sched.c:429:static void tick_nohz_stop_idle(int cpu, ktime_t now)
time/tick-sched.c:439:static ktime_t tick_nohz_start_idle(int cpu, struct tick_sched *ts)
time/tick-sched.c:463:u64 get_cpu_idle_time_us(int cpu, u64 *last_update_time)
time/tick-sched.c:504:u64 get_cpu_iowait_time_us(int cpu, u64 *last_update_time)
time/tick-sched.c:681:static void tick_nohz_full_stop_tick(struct tick_sched *ts)
time/tick-sched.c:699:static bool can_stop_idle_tick(int cpu, struct tick_sched *ts)
time/tick-sched.c:752:static void __tick_nohz_idle_enter(struct tick_sched *ts)
time/tick-sched.c:787:void tick_nohz_idle_enter(void)
time/tick-sched.c:819:void tick_nohz_irq_exit(void)
time/tick-sched.c:834:ktime_t tick_nohz_get_sleep_length(void)
time/tick-sched.c:841:static void tick_nohz_restart(struct tick_sched *ts, ktime_t now)
time/tick-sched.c:867:static void tick_nohz_restart_sched_tick(struct tick_sched *ts, ktime_t now)
time/tick-sched.c:884:static void tick_nohz_account_idle_ticks(struct tick_sched *ts)
time/tick-sched.c:912:void tick_nohz_idle_exit(void)
time/tick-sched.c:939:static int tick_nohz_reprogram(struct tick_sched *ts, ktime_t now)
time/tick-sched.c:948:static void tick_nohz_handler(struct clock_event_device *dev)
time/tick-sched.c:968:static void tick_nohz_switch_to_nohz(void)
time/tick-sched.c:1012:static void tick_nohz_kick_tick(int cpu, ktime_t now)
time/tick-sched.c:1032:static inline void tick_check_nohz(int cpu)
time/tick-sched.c:1058:void tick_check_idle(int cpu)
time/tick-sched.c:1106:void tick_setup_sched_timer(void)
time/tick-sched.c:1148:void tick_cancel_sched_timer(int cpu)
time/tick-sched.c:1164:void tick_clock_notify(void)
time/tick-sched.c:1175:void tick_oneshot_notify(void)
time/tick-sched.c:1190:int tick_check_oneshot_change(int allow_nohz)
time/timer_stats.c:138:static void reset_entries(void)
time/timer_stats.c:154:static int match_entries(struct entry *entry1, struct entry *entry2)
time/timer_stats.c:270:static void print_name_offset(struct seq_file *m, unsigned long addr)
time/timer_stats.c:280:static int tstats_show(struct seq_file *m, void *v)
time/timer_stats.c:345:static void sync_access(void)
time/timer_stats.c:395:static int tstats_open(struct inode *inode, struct file *filp)
time/tick-broadcast.c:47:struct tick_device *tick_get_broadcast_device(void)
time/tick-broadcast.c:52:struct cpumask *tick_get_broadcast_mask(void)
time/tick-broadcast.c:60:static void tick_broadcast_start_periodic(struct clock_event_device *bc)
time/tick-broadcast.c:87:void tick_install_broadcast_device(struct clock_event_device *dev)
time/tick-broadcast.c:118:int tick_is_broadcast_device(struct clock_event_device *dev)
time/tick-broadcast.c:123:static void err_broadcast(const struct cpumask *mask)
time/tick-broadcast.c:128:static void tick_device_setup_broadcast_func(struct clock_event_device *dev)
time/tick-broadcast.c:143:int tick_device_uses_broadcast(struct clock_event_device *dev, int cpu)
time/tick-broadcast.c:224:int tick_receive_broadcast(void)
time/tick-broadcast.c:243:static void tick_do_broadcast(struct cpumask *mask)
time/tick-broadcast.c:273:static void tick_do_periodic_broadcast(void)
time/tick-broadcast.c:286:static void tick_handle_periodic_broadcast(struct clock_event_device *dev)
time/tick-broadcast.c:318:static void tick_do_broadcast_on_off(unsigned long *reason)
time/tick-broadcast.c:386:void tick_broadcast_on_off(unsigned long reason, int *oncpu)
time/tick-broadcast.c:398:void tick_set_periodic_handler(struct clock_event_device *dev, int broadcast)
time/tick-broadcast.c:409:void tick_shutdown_broadcast(unsigned int *cpup)
time/tick-broadcast.c:429:void tick_suspend_broadcast(void)
time/tick-broadcast.c:443:int tick_resume_broadcast(void)
time/tick-broadcast.c:484:struct cpumask *tick_get_broadcast_oneshot_mask(void)
time/tick-broadcast.c:496:int tick_check_broadcast_expired(void)
time/tick-broadcast.c:531:int tick_resume_broadcast_oneshot(struct clock_event_device *bc)
time/tick-broadcast.c:541:void tick_check_oneshot_broadcast(int cpu)
time/tick-broadcast.c:561:static void tick_handle_oneshot_broadcast(struct clock_event_device *dev)
time/tick-broadcast.c:637:void tick_broadcast_oneshot_control(unsigned long reason)
time/tick-broadcast.c:756:static void tick_broadcast_clear_oneshot(int cpu)
time/tick-broadcast.c:777:void tick_broadcast_setup_oneshot(struct clock_event_device *bc)
time/tick-broadcast.c:820:void tick_broadcast_switch_to_oneshot(void)
time/tick-broadcast.c:839:void tick_shutdown_broadcast_oneshot(unsigned int *cpup)
time/tick-broadcast.c:860:int tick_broadcast_oneshot_active(void)
time/tick-broadcast.c:868:bool tick_broadcast_oneshot_available(void)
timer.c:179:unsigned long __round_jiffies(unsigned long j, int cpu)
timer.c:205:unsigned long __round_jiffies_relative(unsigned long j, int cpu)
timer.c:229:unsigned long round_jiffies(unsigned long j)
timer.c:250:unsigned long round_jiffies_relative(unsigned long j)
timer.c:266:unsigned long __round_jiffies_up(unsigned long j, int cpu)
timer.c:282:unsigned long __round_jiffies_up_relative(unsigned long j, int cpu)
timer.c:300:unsigned long round_jiffies_up(unsigned long j)
timer.c:315:unsigned long round_jiffies_up_relative(unsigned long j)
timer.c:334:void set_timer_slack(struct timer_list *timer, int slack_hz)
timer.c:384:static void internal_add_timer(struct tvec_base *base, struct timer_list *timer)
timer.c:398:void __timer_stats_timer_set_start_info(struct timer_list *timer, void *addr)
timer.c:408:static void timer_stats_account_timer(struct timer_list *timer)
timer.c:429:static void *timer_debug_hint(void *addr)
timer.c:438:static int timer_fixup_init(void *addr, enum debug_obj_state state)
timer.c:453:static void stub_timer(unsigned long data)
timer.c:463:static int timer_fixup_activate(void *addr, enum debug_obj_state state)
timer.c:498:static int timer_fixup_free(void *addr, enum debug_obj_state state)
timer.c:516:static int timer_fixup_assert_init(void *addr, enum debug_obj_state state)
timer.c:548:static inline void debug_timer_init(struct timer_list *timer)
timer.c:553:static inline void debug_timer_activate(struct timer_list *timer)
timer.c:558:static inline void debug_timer_deactivate(struct timer_list *timer)
timer.c:563:static inline void debug_timer_free(struct timer_list *timer)
timer.c:568:static inline void debug_timer_assert_init(struct timer_list *timer)
timer.c:584:void destroy_timer_on_stack(struct timer_list *timer)
timer.c:597:static inline void debug_init(struct timer_list *timer)
timer.c:610:static inline void debug_deactivate(struct timer_list *timer)
timer.c:616:static inline void debug_assert_init(struct timer_list *timer)
timer.c:656:static inline void detach_timer(struct timer_list *timer, bool clear_pending)
timer.c:787:int mod_timer_pending(struct timer_list *timer, unsigned long expires)
timer.c:804:unsigned long apply_slack(struct timer_list *timer, unsigned long expires)
timer.c:852:int mod_timer(struct timer_list *timer, unsigned long expires)
timer.c:887:int mod_timer_pinned(struct timer_list *timer, unsigned long expires)
timer.c:910:void add_timer(struct timer_list *timer)
timer.c:924:void add_timer_on(struct timer_list *timer, int cpu)
timer.c:959:int del_timer(struct timer_list *timer)
timer.c:985:int try_to_del_timer_sync(struct timer_list *timer)
timer.c:1042:int del_timer_sync(struct timer_list *timer)
timer.c:1071:static int cascade(struct tvec_base *base, struct tvec *tv, int index)
timer.c:1144:static inline void __run_timers(struct tvec_base *base)
timer.c:1318:unsigned long get_next_timer_interrupt(unsigned long now)
timer.c:1349:void update_process_times(int user_tick)
timer.c:1369:static void run_timer_softirq(struct softirq_action *h)
timer.c:1382:void run_local_timers(void)
timer.c:1401:static void process_timeout(unsigned long __data)
timer.c:1508:static int init_timers_cpu(int cpu)
timer.c:1566:static void migrate_timer_list(struct tvec_base *new_base, struct list_head *head)
timer.c:1579:static void migrate_timers(int cpu)
timer.c:1662:void msleep(unsigned int msecs)
timer.c:1676:unsigned long msleep_interruptible(unsigned int msecs)
timer.c:1702:void usleep_range(unsigned long min, unsigned long max)
trace/trace_mmiotrace.c:29:static void mmio_reset_data(struct trace_array *tr)
trace/trace_mmiotrace.c:37:static int mmio_trace_init(struct trace_array *tr)
trace/trace_mmiotrace.c:47:static void mmio_trace_reset(struct trace_array *tr)
trace/trace_mmiotrace.c:56:static void mmio_trace_start(struct trace_array *tr)
trace/trace_mmiotrace.c:62:static int mmio_print_pcidev(struct trace_seq *s, const struct pci_dev *dev)
trace/trace_mmiotrace.c:97:static void destroy_header_iter(struct header_iter *hiter)
trace/trace_mmiotrace.c:105:static void mmio_pipe_open(struct trace_iterator *iter)
trace/trace_mmiotrace.c:121:static void mmio_close(struct trace_iterator *iter)
trace/trace_mmiotrace.c:330:void mmio_trace_rw(struct mmiotrace_rw *rw)
trace/trace_mmiotrace.c:360:void mmio_trace_mapping(struct mmiotrace_map *map)
trace/trace_mmiotrace.c:371:int mmio_trace_printk(const char *fmt, va_list args)
trace/trace_probe.h:134:static inline int is_good_name(const char *name)
trace/ftrace.c:141:static inline void ftrace_ops_init(struct ftrace_ops *ops)
trace/ftrace.c:156:int ftrace_nr_registered_ops(void)
trace/ftrace.c:198:static void set_ftrace_pid_function(ftrace_func_t func)
trace/ftrace.c:211:void clear_ftrace_function(void)
trace/ftrace.c:217:static void control_ops_disable_all(struct ftrace_ops *ops)
trace/ftrace.c:225:static int control_ops_alloc(struct ftrace_ops *ops)
trace/ftrace.c:238:static void control_ops_free(struct ftrace_ops *ops)
trace/ftrace.c:243:static void update_global_ops(void)
trace/ftrace.c:281:static void update_ftrace_function(void)
trace/ftrace.c:312:static void add_ftrace_ops(struct ftrace_ops **list, struct ftrace_ops *ops)
trace/ftrace.c:324:static int remove_ftrace_ops(struct ftrace_ops **list, struct ftrace_ops *ops)
trace/ftrace.c:368:static int __register_ftrace_function(struct ftrace_ops *ops)
trace/ftrace.c:413:static void ftrace_sync(struct work_struct *work)
trace/ftrace.c:424:static int __unregister_ftrace_function(struct ftrace_ops *ops)
trace/ftrace.c:479:static void ftrace_update_pid_func(void)
trace/ftrace.c:553:static void *function_stat_start(struct tracer_stat *trace)
trace/ftrace.c:566:static int function_stat_cmp(void *p1, void *p2)
trace/ftrace.c:580:static int function_stat_cmp(void *p1, void *p2)
trace/ftrace.c:594:static int function_stat_headers(struct seq_file *m)
trace/ftrace.c:608:static int function_stat_show(struct seq_file *m, void *v)
trace/ftrace.c:667:static void ftrace_profile_reset(struct ftrace_profile_stat *stat)
trace/ftrace.c:683:int ftrace_profile_pages_init(struct ftrace_profile_stat *stat)
trace/ftrace.c:739:static int ftrace_profile_init_cpu(int cpu)
trace/ftrace.c:773:static int ftrace_profile_init(void)
trace/ftrace.c:884:static int profile_graph_entry(struct ftrace_graph_ent *trace)
trace/ftrace.c:933:static int register_ftrace_profiler(void)
trace/ftrace.c:939:static void unregister_ftrace_profiler(void)
trace/ftrace.c:950:static int register_ftrace_profiler(void)
trace/ftrace.c:955:static void unregister_ftrace_profiler(void)
trace/ftrace.c:1165:static bool ftrace_hash_empty(struct ftrace_hash *hash)
trace/ftrace.c:1210:static int add_hash_entry(struct ftrace_hash *hash, unsigned long ip)
trace/ftrace.c:1241:static void ftrace_hash_clear(struct ftrace_hash *hash)
trace/ftrace.c:1260:static void free_ftrace_hash(struct ftrace_hash *hash)
trace/ftrace.c:1269:static void __free_ftrace_hash_rcu(struct rcu_head *rcu)
trace/ftrace.c:1277:static void free_ftrace_hash_rcu(struct ftrace_hash *hash)
trace/ftrace.c:1284:void ftrace_free_filter(struct ftrace_ops *ops)
trace/ftrace.c:1483:static int ftrace_cmp_recs(const void *a, const void *b)
trace/ftrace.c:1527:unsigned long ftrace_location(unsigned long ip)
trace/ftrace.c:1542:int ftrace_text_reserved(void *start, void *end)
trace/ftrace.c:1657:static void print_ip_ins(const char *fmt, unsigned char *p)
trace/ftrace.c:1679:void ftrace_bug(int failed, unsigned long ip)
trace/ftrace.c:1706:static int ftrace_check_record(struct dyn_ftrace *rec, int enable, int update)
trace/ftrace.c:1789:int ftrace_update_record(struct dyn_ftrace *rec, int enable)
trace/ftrace.c:1803:int ftrace_test_record(struct dyn_ftrace *rec, int enable)
trace/ftrace.c:1878:struct ftrace_rec_iter *ftrace_rec_iter_start(void)
trace/ftrace.c:1906:struct ftrace_rec_iter *ftrace_rec_iter_next(struct ftrace_rec_iter *iter)
trace/ftrace.c:1931:struct dyn_ftrace *ftrace_rec_iter_record(struct ftrace_rec_iter *iter)
trace/ftrace.c:1973:void ftrace_modify_all_code(int command)
trace/ftrace.c:2004:static int __ftrace_modify_code(void *data)
trace/ftrace.c:2020:void ftrace_run_stop_machine(int command)
trace/ftrace.c:2037:static void ftrace_run_update_code(int command)
trace/ftrace.c:2069:static void ftrace_startup_enable(int command)
trace/ftrace.c:2082:static int ftrace_startup(struct ftrace_ops *ops, int command)
trace/ftrace.c:2115:static int ftrace_shutdown(struct ftrace_ops *ops, int command)
trace/ftrace.c:2166:static void ftrace_startup_sysctl(void)
trace/ftrace.c:2178:static void ftrace_shutdown_sysctl(void)
trace/ftrace.c:2192:static inline int ops_traces_mod(struct ftrace_ops *ops)
trace/ftrace.c:2232:static int referenced_filters(struct dyn_ftrace *rec)
trace/ftrace.c:2245:static int ftrace_update_code(struct module *mod)
trace/ftrace.c:2326:static int ftrace_allocate_records(struct ftrace_page *pg, int count)
trace/ftrace.c:2487:static void *t_hash_start(struct seq_file *m, loff_t *pos)
trace/ftrace.c:2585:static void reset_iter_read(struct ftrace_iterator *iter)
trace/ftrace.c:2592:static void *t_start(struct seq_file *m, loff_t *pos)
trace/ftrace.c:2647:static void t_stop(struct seq_file *m, void *p)
trace/ftrace.c:2652:static int t_show(struct seq_file *m, void *v)
trace/ftrace.c:2722:static void ftrace_filter_reset(struct ftrace_hash *hash)
trace/ftrace.c:2828:static int ftrace_match(char *str, char *regex, int len, int type)
trace/ftrace.c:3047:static void __enable_ftrace_function_probe(void)
trace/ftrace.c:3073:static void __disable_ftrace_function_probe(void)
trace/ftrace.c:3093:static void ftrace_free_entry(struct ftrace_func_probe *entry)
trace/ftrace.c:3302:void unregister_ftrace_function_probe_all(char *glob)
trace/ftrace.c:3463:static void ftrace_ops_update_code(struct ftrace_ops *ops)
trace/ftrace.c:3601:void ftrace_set_global_filter(unsigned char *buf, int len, int reset)
trace/ftrace.c:3618:void ftrace_set_global_notrace(unsigned char *buf, int len, int reset)
trace/ftrace.c:3703:int ftrace_regex_release(struct inode *inode, struct file *file)
trace/ftrace.c:3815:static void *g_start(struct seq_file *m, loff_t *pos)
trace/ftrace.c:3828:static void g_stop(struct seq_file *m, void *p)
trace/ftrace.c:3833:static int g_show(struct seq_file *m, void *v)
trace/ftrace.c:4081:static int ftrace_cmp_ips(const void *a, const void *b)
trace/ftrace.c:4093:static void ftrace_swap_ips(void *a, void *b, int size)
trace/ftrace.c:4210:void ftrace_release_mod(struct module *mod)
trace/ftrace.c:4474:static void ftrace_ops_no_ops(unsigned long ip, unsigned long parent_ip)
trace/ftrace.c:4480:static void clear_ftrace_swapper(void)
trace/ftrace.c:4493:static void set_ftrace_swapper(void)
trace/ftrace.c:4506:static void clear_ftrace_pid(struct pid *pid)
trace/ftrace.c:4519:static void set_ftrace_pid(struct pid *pid)
trace/ftrace.c:4530:static void clear_ftrace_pid_task(struct pid *pid)
trace/ftrace.c:4538:static void set_ftrace_pid_task(struct pid *pid)
trace/ftrace.c:4546:static int ftrace_pid_add(int p)
trace/ftrace.c:4594:static void ftrace_pid_reset(void)
trace/ftrace.c:4614:static void *fpid_start(struct seq_file *m, loff_t *pos)
trace/ftrace.c:4624:static void *fpid_next(struct seq_file *m, void *v, loff_t *pos)
trace/ftrace.c:4632:static void fpid_stop(struct seq_file *m, void *p)
trace/ftrace.c:4637:static int fpid_show(struct seq_file *m, void *v)
trace/ftrace.c:4752:void ftrace_kill(void)
trace/ftrace.c:4762:int ftrace_is_dead(void)
trace/ftrace.c:4778:int register_ftrace_function(struct ftrace_ops *ops)
trace/ftrace.c:4800:int unregister_ftrace_function(struct ftrace_ops *ops)
trace/ftrace.c:4856:int ftrace_graph_entry_stub(struct ftrace_graph_ent *trace)
trace/ftrace.c:4867:static int alloc_retstack_tasklist(struct ftrace_ret_stack **ret_stack_list)
trace/ftrace.c:4945:static int start_graph_tracing(void)
trace/ftrace.c:5039:void unregister_ftrace_graph(void)
trace/ftrace.c:5074:void ftrace_graph_init_idle_task(struct task_struct *t, int cpu)
trace/ftrace.c:5101:void ftrace_graph_init_task(struct task_struct *t)
trace/ftrace.c:5119:void ftrace_graph_exit_task(struct task_struct *t)
trace/ftrace.c:5130:void ftrace_graph_stop(void)
trace/trace_stack.c:272:static void *t_start(struct seq_file *m, loff_t *pos)
trace/trace_stack.c:289:static void t_stop(struct seq_file *m, void *p)
trace/trace_stack.c:301:static int trace_lookup_stack(struct seq_file *m, long i)
trace/trace_stack.c:308:static void print_disabled(struct seq_file *m)
trace/trace_stack.c:319:static int t_show(struct seq_file *m, void *v)
trace/trace_stack.c:362:static int stack_trace_open(struct inode *inode, struct file *file)
trace/trace_irqsoff.c:163:static int irqsoff_set_flag(u32 old_flags, u32 bit, int set)
trace/trace_irqsoff.c:184:static int irqsoff_graph_entry(struct ftrace_graph_ent *trace)
trace/trace_irqsoff.c:217:static void irqsoff_trace_open(struct trace_iterator *iter)
trace/trace_irqsoff.c:224:static void irqsoff_trace_close(struct trace_iterator *iter)
trace/trace_irqsoff.c:247:static void irqsoff_print_header(struct seq_file *s)
trace/trace_irqsoff.c:269:static int irqsoff_set_flag(u32 old_flags, u32 bit, int set)
trace/trace_irqsoff.c:274:static int irqsoff_graph_entry(struct ftrace_graph_ent *trace)
trace/trace_irqsoff.c:289:static void irqsoff_print_header(struct seq_file *s)
trace/trace_irqsoff.c:294:static void irqsoff_print_header(struct seq_file *s)
trace/trace_irqsoff.c:304:static int report_latency(cycle_t delta)
trace/trace_irqsoff.c:438:void start_critical_timings(void)
trace/trace_irqsoff.c:445:void stop_critical_timings(void)
trace/trace_irqsoff.c:454:void time_hardirqs_on(unsigned long a0, unsigned long a1)
trace/trace_irqsoff.c:460:void time_hardirqs_off(unsigned long a0, unsigned long a1)
trace/trace_irqsoff.c:472:void trace_softirqs_on(unsigned long ip)
trace/trace_irqsoff.c:476:void trace_softirqs_off(unsigned long ip)
trace/trace_irqsoff.c:487:void trace_hardirqs_on(void)
trace/trace_irqsoff.c:494:void trace_hardirqs_off(void)
trace/trace_irqsoff.c:501:void trace_hardirqs_on_caller(unsigned long caller_addr)
trace/trace_irqsoff.c:508:void trace_hardirqs_off_caller(unsigned long caller_addr)
trace/trace_irqsoff.c:519:void trace_preempt_on(unsigned long a0, unsigned long a1)
trace/trace_irqsoff.c:525:void trace_preempt_off(unsigned long a0, unsigned long a1)
trace/trace_irqsoff.c:532:static int register_irqsoff_function(int graph, int set)
trace/trace_irqsoff.c:552:static void unregister_irqsoff_function(int graph)
trace/trace_irqsoff.c:565:static void irqsoff_function_set(int set)
trace/trace_irqsoff.c:573:static int irqsoff_flag_changed(struct tracer *tracer, u32 mask, int set)
trace/trace_irqsoff.c:581:static int start_irqsoff_tracer(struct trace_array *tr, int graph)
trace/trace_irqsoff.c:595:static void stop_irqsoff_tracer(struct trace_array *tr, int graph)
trace/trace_irqsoff.c:602:static void __irqsoff_tracer_init(struct trace_array *tr)
trace/trace_irqsoff.c:620:static void irqsoff_tracer_reset(struct trace_array *tr)
trace/trace_irqsoff.c:631:static void irqsoff_tracer_start(struct trace_array *tr)
trace/trace_irqsoff.c:636:static void irqsoff_tracer_stop(struct trace_array *tr)
trace/trace_irqsoff.c:642:static int irqsoff_tracer_init(struct trace_array *tr)
trace/trace_irqsoff.c:675:static int preemptoff_tracer_init(struct trace_array *tr)
trace/trace_irqsoff.c:711:static int preemptirqsoff_tracer_init(struct trace_array *tr)
trace/trace.h:742:static inline int ftrace_graph_addr(unsigned long addr)
trace/trace.h:767:static inline int ftrace_graph_notrace_addr(unsigned long addr)
trace/trace.h:782:static inline int ftrace_graph_addr(unsigned long addr)
trace/trace.h:787:static inline int ftrace_graph_notrace_addr(unsigned long addr)
trace/trace.h:804:static inline int ftrace_trace_task(struct task_struct *task)
trace/trace.h:813:static inline int ftrace_trace_task(struct task_struct *task)
trace/trace.h:836:static inline bool trace_parser_loaded(struct trace_parser *parser)
trace/trace.h:841:static inline bool trace_parser_cont(struct trace_parser *parser)
trace/trace.h:846:static inline void trace_parser_clear(struct trace_parser *parser)
trace/trace.h:905:static inline int trace_branch_enable(struct trace_array *tr)
trace/trace.h:911:static inline void trace_branch_disable(void)
trace/trace.h:917:static inline int trace_branch_enable(struct trace_array *tr)
trace/trace.h:921:static inline void trace_branch_disable(void)
trace/trace_output.c:23:int trace_print_seq(struct seq_file *m, struct trace_seq *s)
trace/trace_output.c:162:int trace_seq_bprintf(struct trace_seq *s, const char *fmt, const u32 *binary)
trace/trace_output.c:193:int trace_seq_puts(struct trace_seq *s, const char *str)
trace/trace_output.c:211:int trace_seq_putc(struct trace_seq *s, unsigned char c)
trace/trace_output.c:227:int trace_seq_putmem(struct trace_seq *s, const void *mem, size_t len)
trace/trace_output.c:243:int trace_seq_putmem_hex(struct trace_seq *s, const void *mem, size_t len)
trace/trace_output.c:265:void *trace_seq_reserve(struct trace_seq *s, size_t len)
trace/trace_output.c:283:int trace_seq_path(struct trace_seq *s, const struct path *path)
trace/trace_output.c:605:int trace_print_lat_fmt(struct trace_seq *s, struct trace_entry *entry)
trace/trace_output.c:712:int trace_print_context(struct trace_iterator *iter)
trace/trace_output.c:743:int trace_print_lat_context(struct trace_iterator *iter)
trace/trace_output.c:782:static int task_state_char(unsigned long state)
trace/trace_output.c:796:struct trace_event *ftrace_find_event(int type)
trace/trace_output.c:813:static int trace_search_list(struct list_head **list)
trace/trace_output.c:841:void trace_event_read_lock(void)
trace/trace_output.c:846:void trace_event_read_unlock(void)
trace/trace_output.c:866:int register_ftrace_event(struct trace_event *event)
trace/trace_output.c:935:int __unregister_ftrace_event(struct trace_event *event)
trace/trace_output.c:946:int unregister_ftrace_event(struct trace_event *event)
trace/trace_output.c:1093:static int trace_ctxwake_raw(struct trace_iterator *iter, char S)
trace/trace_output.c:1129:static int trace_ctxwake_hex(struct trace_iterator *iter, char S)
trace/trace.c:76:static int dummy_set_flag(u32 old_flags, u32 bit, int set)
trace/trace.c:207:int trace_array_get(struct trace_array *this_tr)
trace/trace.c:225:static void __trace_array_put(struct trace_array *this_tr)
trace/trace.c:231:void trace_array_put(struct trace_array *this_tr)
trace/trace.c:266:cycle_t buffer_ftrace_now(struct trace_buffer *buf, int cpu)
trace/trace.c:280:cycle_t ftrace_now(int cpu)
trace/trace.c:294:int tracing_is_enabled(void)
trace/trace.c:353:static inline void trace_access_lock(int cpu)
trace/trace.c:369:static inline void trace_access_unlock(int cpu)
trace/trace.c:379:static inline void trace_access_lock_init(void)
trace/trace.c:391:static inline void trace_access_lock(int cpu)
trace/trace.c:397:static inline void trace_access_unlock(int cpu)
trace/trace.c:403:static inline void trace_access_lock_init(void)
trace/trace.c:415:static void tracer_tracing_on(struct trace_array *tr)
trace/trace.c:438:void tracing_on(void)
trace/trace.c:450:int __trace_puts(unsigned long ip, const char *str, int size)
trace/trace.c:490:int __trace_bputs(unsigned long ip, const char *str)
trace/trace.c:530:void tracing_snapshot(void)
trace/trace.c:566:static int alloc_snapshot(struct trace_array *tr)
trace/trace.c:584:void free_snapshot(struct trace_array *tr)
trace/trace.c:608:void tracing_snapshot_alloc(void)
trace/trace.c:621:void tracing_snapshot(void)
trace/trace.c:626:void tracing_snapshot_alloc(void)
trace/trace.c:634:static void tracer_tracing_off(struct trace_array *tr)
trace/trace.c:659:void tracing_off(void)
trace/trace.c:665:void disable_trace_on_warning(void)
trace/trace.c:677:static int tracer_tracing_is_on(struct trace_array *tr)
trace/trace.c:687:int tracing_is_on(void)
trace/trace.c:723:unsigned long nsecs_to_usecs(unsigned long nsecs)
trace/trace.c:775:int trace_parser_get_init(struct trace_parser *parser, int size)
trace/trace.c:790:void trace_parser_put(struct trace_parser *parser)
trace/trace.c:881:ssize_t trace_seq_to_user(struct trace_seq *s, char __user *ubuf, size_t cnt)
trace/trace.c:905:static ssize_t trace_seq_to_buffer(struct trace_seq *s, void *buf, size_t cnt)
trace/trace.c:1061:static void default_wait_pipe(struct trace_iterator *iter)
trace/trace.c:1071:static int run_tracer_selftest(struct tracer *type)
trace/trace.c:1130:static inline int run_tracer_selftest(struct tracer *type)
trace/trace.c:1142:int register_tracer(struct tracer *type)
trace/trace.c:1213:void tracing_reset(struct trace_buffer *buf, int cpu)
trace/trace.c:1229:void tracing_reset_online_cpus(struct trace_buffer *buf)
trace/trace.c:1251:void tracing_reset_all_online_cpus(void)
trace/trace.c:1274:static void trace_init_cmdlines(void)
trace/trace.c:1281:int is_tracing_stopped(void)
trace/trace.c:1292:void tracing_start(void)
trace/trace.c:1330:static void tracing_start_tr(struct trace_array *tr)
trace/trace.c:1367:void tracing_stop(void)
trace/trace.c:1396:static void tracing_stop_tr(struct trace_array *tr)
trace/trace.c:1419:static void trace_save_cmdline(struct task_struct *tsk)
trace/trace.c:1460:void trace_find_cmdline(int pid, char comm[])
trace/trace.c:1491:void tracing_record_cmdline(struct task_struct *tsk)
trace/trace.c:1765:void trace_dump_stack(int skip)
trace/trace.c:1838:static void __trace_userstack(struct trace_array *tr, unsigned long flags)
trace/trace.c:1863:static char *get_trace_buf(void)
trace/trace.c:1886:static int alloc_percpu_trace_buffer(void)
trace/trace.c:1929:void trace_printk_init_buffers(void)
trace/trace.c:1954:void trace_printk_start_comm(void)
trace/trace.c:1962:static void trace_printk_start_stop_comm(int enabled)
trace/trace.c:1977:int trace_vbprintk(unsigned long ip, const char *fmt, va_list args)
trace/trace.c:2122:int trace_vprintk(unsigned long ip, const char *fmt, va_list args)
trace/trace.c:2128:static void trace_iterator_increment(struct trace_iterator *iter)
trace/trace.c:2226:void *trace_find_next_entry_inc(struct trace_iterator *iter)
trace/trace.c:2237:static void trace_consume(struct trace_iterator *iter)
trace/trace.c:2243:static void *s_next(struct seq_file *m, void *v, loff_t *pos)
trace/trace.c:2270:void tracing_iter_reset(struct trace_iterator *iter, int cpu)
trace/trace.c:2304:static void *s_start(struct seq_file *m, loff_t *pos)
trace/trace.c:2365:static void s_stop(struct seq_file *m, void *p)
trace/trace.c:2409:static void print_lat_help_header(struct seq_file *m)
trace/trace.c:2421:static void print_event_info(struct trace_buffer *buf, struct seq_file *m)
trace/trace.c:2432:static void print_func_help_header(struct trace_buffer *buf, struct seq_file *m)
trace/trace.c:2439:static void print_func_help_header_irq(struct trace_buffer *buf, struct seq_file *m)
trace/trace.c:2513:static void test_cpu_buff_start(struct trace_iterator *iter)
trace/trace.c:2643:int trace_empty(struct trace_iterator *iter)
trace/trace.c:2719:void trace_latency_header(struct seq_file *m)
trace/trace.c:2734:void trace_default_header(struct seq_file *m)
trace/trace.c:2758:static void test_ftrace_alive(struct seq_file *m)
trace/trace.c:2767:static void show_snapshot_main_help(struct seq_file *m)
trace/trace.c:2777:static void show_snapshot_percpu_help(struct seq_file *m)
trace/trace.c:2792:static void print_snapshot_help(struct seq_file *m, struct trace_iterator *iter)
trace/trace.c:2810:static int s_show(struct seq_file *m, void *v)
trace/trace.c:2858:static inline int tracing_get_cpu(struct inode *inode)
trace/trace.c:2967:int tracing_open_generic(struct inode *inode, struct file *filp)
trace/trace.c:2976:bool tracing_is_disabled(void)
trace/trace.c:2985:static int tracing_open_generic_tr(struct inode *inode, struct file *filp)
trace/trace.c:3000:static int tracing_release(struct inode *inode, struct file *file)
trace/trace.c:3041:static int tracing_release_generic_tr(struct inode *inode, struct file *file)
trace/trace.c:3049:static int tracing_single_release_tr(struct inode *inode, struct file *file)
trace/trace.c:3058:static int tracing_open(struct inode *inode, struct file *file)
trace/trace.c:3104:static void *t_start(struct seq_file *m, loff_t *pos)
trace/trace.c:3116:static void t_stop(struct seq_file *m, void *p)
trace/trace.c:3121:static int t_show(struct seq_file *m, void *v)
trace/trace.c:3144:static int show_traces_open(struct inode *inode, struct file *file)
trace/trace.c:3159:static loff_t tracing_seek(struct file *file, loff_t offset, int origin)
trace/trace.c:3276:static int tracing_trace_options_show(struct seq_file *m, void *v)
trace/trace.c:3323:static int set_tracer_option(struct tracer *trace, char *cmp, int neg)
trace/trace.c:3341:int trace_keep_overwrite(struct tracer *tracer, u32 mask, int set)
trace/trace.c:3349:int set_tracer_flag(struct trace_array *tr, unsigned int mask, int enabled)
trace/trace.c:3381:static int trace_set_options(struct trace_array *tr, char *option)
trace/trace.c:3439:static int tracing_trace_options_open(struct inode *inode, struct file *file)
trace/trace.c:3627:int tracer_init(struct tracer *t, struct trace_array *tr)
trace/trace.c:3633:static void set_buffer_entries(struct trace_buffer *buf, unsigned long val)
trace/trace.c:3771:int tracing_update_buffers(void)
trace/trace.c:3792:static int tracing_set_tracer(const char *buf)
trace/trace.c:3939:static int tracing_open_pipe(struct inode *inode, struct file *filp)
trace/trace.c:4009:static int tracing_release_pipe(struct inode *inode, struct file *file)
trace/trace.c:4068:void poll_wait_pipe(struct trace_iterator *iter)
trace/trace.c:4076:static int tracing_wait_pipe(struct file *filp)
trace/trace.c:4597:static int tracing_clock_show(struct seq_file *m, void *v)
trace/trace.c:4663:static int tracing_clock_open(struct inode *inode, struct file *file)
trace/trace.c:4688:static int tracing_snapshot_open(struct inode *inode, struct file *file)
trace/trace.c:4802:static int tracing_snapshot_release(struct inode *inode, struct file *file)
trace/trace.c:4827:static int snapshot_raw_open(struct inode *inode, struct file *filp)
trace/trace.c:4930:static int tracing_buffers_open(struct inode *inode, struct file *filp)
trace/trace.c:5059:static int tracing_buffers_release(struct inode *inode, struct file *file)
trace/trace.c:5119:static void buffer_spd_release(struct splice_pipe_desc *spd, unsigned int i)
trace/trace.c:5479:struct dentry *tracing_init_dentry_tr(struct trace_array *tr)
trace/trace.c:5496:struct dentry *tracing_init_dentry(void)
trace/trace.c:5903:static int allocate_trace_buffers(struct trace_array *tr, int size)
trace/trace.c:5930:static int new_instance_create(const char *name)
trace/trace.c:5999:static int instance_delete(const char *name)
trace/trace.c:6039:static int instance_mkdir (struct inode *inode, struct dentry *dentry, umode_t mode)
trace/trace.c:6066:static int instance_rmdir(struct inode *inode, struct dentry *dentry)
trace/trace.c:6264:void trace_init_global_iter(struct trace_iterator *iter)
trace/trace.c:6283:void ftrace_dump(enum ftrace_dump_mode oops_dump_mode)
trace/trace_uprobe.c:82:static inline void init_trace_uprobe_filter(struct trace_uprobe_filter *filter)
trace/trace_uprobe.c:89:static inline bool uprobe_filter_is_empty(struct trace_uprobe_filter *filter)
trace/trace_uprobe.c:94:static inline bool is_ret_probe(struct trace_uprobe *tu)
trace/trace_uprobe.c:141:static void free_trace_uprobe(struct trace_uprobe *tu)
trace/trace_uprobe.c:168:static int unregister_trace_uprobe(struct trace_uprobe *tu)
trace/trace_uprobe.c:182:static int register_trace_uprobe(struct trace_uprobe *tu)
trace/trace_uprobe.c:218:static int create_trace_uprobe(int argc, char **argv)
trace/trace_uprobe.c:423:static int cleanup_all_probes(void)
trace/trace_uprobe.c:440:static void *probes_seq_start(struct seq_file *m, loff_t *pos)
trace/trace_uprobe.c:446:static void *probes_seq_next(struct seq_file *m, void *v, loff_t *pos)
trace/trace_uprobe.c:451:static void probes_seq_stop(struct seq_file *m, void *v)
trace/trace_uprobe.c:456:static int probes_seq_show(struct seq_file *m, void *v)
trace/trace_uprobe.c:479:static int probes_open(struct inode *inode, struct file *file)
trace/trace_uprobe.c:508:static int probes_profile_seq_show(struct seq_file *m, void *v)
trace/trace_uprobe.c:523:static int profile_open(struct inode *inode, struct file *file)
trace/trace_uprobe.c:570:static int uprobe_trace_func(struct trace_uprobe *tu, struct pt_regs *regs)
trace/trace_uprobe.c:621:static inline bool is_trace_uprobe_enabled(struct trace_uprobe *tu)
trace/trace_uprobe.c:649:static void probe_event_disable(struct trace_uprobe *tu, int flag)
trace/trace_uprobe.c:660:static int uprobe_event_define_fields(struct ftrace_event_call *event_call)
trace/trace_uprobe.c:690:static int __set_print_fmt(struct trace_uprobe *tu, char *buf, int len)
trace/trace_uprobe.c:724:static int set_print_fmt(struct trace_uprobe *tu)
trace/trace_uprobe.c:765:static int uprobe_perf_open(struct trace_uprobe *tu, struct perf_event *event)
trace/trace_uprobe.c:795:static int uprobe_perf_close(struct trace_uprobe *tu, struct perf_event *event)
trace/trace_uprobe.c:870:static int uprobe_perf_func(struct trace_uprobe *tu, struct pt_regs *regs)
trace/trace_uprobe.c:888:int trace_uprobe_register(struct ftrace_event_call *event, enum trace_reg type, void *data)
trace/trace_uprobe.c:921:static int uprobe_dispatcher(struct uprobe_consumer *con, struct pt_regs *regs)
trace/trace_uprobe.c:960:static int register_uprobe_event(struct trace_uprobe *tu)
trace/trace_uprobe.c:992:static int unregister_uprobe_event(struct trace_uprobe *tu)
trace/trace_stat.c:46:static void __reset_stat_session(struct stat_session *session)
trace/trace_stat.c:59:static void reset_stat_session(struct stat_session *session)
trace/trace_stat.c:66:static void destroy_session(struct stat_session *session)
trace/trace_stat.c:76:static int insert_stat(struct rb_root *root, void *stat, cmp_stat_t cmp)
trace/trace_stat.c:114:static int dummy_cmp(void *p1, void *p2)
trace/trace_stat.c:124:static int stat_seq_init(struct stat_session *session)
trace/trace_stat.c:172:static void *stat_seq_start(struct seq_file *s, loff_t *pos)
trace/trace_stat.c:196:static void *stat_seq_next(struct seq_file *s, void *p, loff_t *pos)
trace/trace_stat.c:209:static void stat_seq_stop(struct seq_file *s, void *p)
trace/trace_stat.c:215:static int stat_seq_show(struct seq_file *s, void *v)
trace/trace_stat.c:234:static int tracing_stat_open(struct inode *inode, struct file *file)
trace/trace_stat.c:258:static int tracing_stat_release(struct inode *i, struct file *f)
trace/trace_stat.c:274:static int tracing_stat_init(void)
trace/trace_stat.c:289:static int init_stat_file(struct stat_session *session)
trace/trace_stat.c:302:int register_stat_tracer(struct tracer_stat *trace)
trace/trace_stat.c:346:void unregister_stat_tracer(struct tracer_stat *trace)
trace/trace_functions.c:28:static int function_trace_init(struct trace_array *tr)
trace/trace_functions.c:39:static void function_trace_reset(struct trace_array *tr)
trace/trace_functions.c:45:static void function_trace_start(struct trace_array *tr)
trace/trace_functions.c:156:static void tracing_start_function_trace(void)
trace/trace_functions.c:168:static void tracing_stop_function_trace(void)
trace/trace_functions.c:178:static int func_set_flag(u32 old_flags, u32 bit, int set)
trace/trace_functions.c:217:static int update_count(void **data)
trace/trace_functions.c:556:static inline int init_func_cmd_traceon(void)
trace/trace_syscalls.c:35:static inline bool arch_syscall_match_sym_name(const char *sym, const char *name)
trace/trace_syscalls.c:302:static void ftrace_syscall_enter(void *data, struct pt_regs *regs, long id)
trace/trace_syscalls.c:351:static void ftrace_syscall_exit(void *data, struct pt_regs *regs, long ret)
trace/trace_syscalls.c:562:static void perf_syscall_enter(void *ignore, struct pt_regs *regs, long id)
trace/trace_syscalls.c:601:static int perf_sysenter_enable(struct ftrace_event_call *call)
trace/trace_syscalls.c:622:static void perf_sysenter_disable(struct ftrace_event_call *call)
trace/trace_syscalls.c:636:static void perf_syscall_exit(void *ignore, struct pt_regs *regs, long ret)
trace/trace_syscalls.c:673:static int perf_sysexit_enable(struct ftrace_event_call *call)
trace/trace_syscalls.c:694:static void perf_sysexit_disable(struct ftrace_event_call *call)
trace/trace_events.c:46:static inline int system_refcount(struct event_subsystem *system)
trace/trace_events.c:51:static int system_refcount_inc(struct event_subsystem *system)
trace/trace_events.c:56:static int system_refcount_dec(struct event_subsystem *system)
trace/trace_events.c:160:static int trace_define_common_fields(void)
trace/trace_events.c:173:static void trace_destroy_fields(struct ftrace_event_call *call)
trace/trace_events.c:185:int trace_event_raw_init(struct ftrace_event_call *call)
trace/trace_events.c:234:void trace_event_enable_cmd_record(bool enable)
trace/trace_events.c:351:static void ftrace_clear_events(struct trace_array *tr)
trace/trace_events.c:362:static void __put_system(struct event_subsystem *system)
trace/trace_events.c:381:static void __get_system(struct event_subsystem *system)
trace/trace_events.c:387:static void __get_system_dir(struct ftrace_subsystem_dir *dir)
trace/trace_events.c:394:static void __put_system_dir(struct ftrace_subsystem_dir *dir)
trace/trace_events.c:405:static void put_system(struct ftrace_subsystem_dir *dir)
trace/trace_events.c:412:static void remove_subsystem(struct ftrace_subsystem_dir *dir)
trace/trace_events.c:424:static void *event_file_data(struct file *filp)
trace/trace_events.c:429:static void remove_event_file_dir(struct ftrace_event_file *file)
trace/trace_events.c:502:static int ftrace_set_clr_event(struct trace_array *tr, char *buf, int set)
trace/trace_events.c:545:int trace_set_clr_event(const char *system, const char *event, int set)
trace/trace_events.c:620:static void *t_start(struct seq_file *m, loff_t *pos)
trace/trace_events.c:653:static void *s_start(struct seq_file *m, loff_t *pos)
trace/trace_events.c:670:static int t_show(struct seq_file *m, void *v)
trace/trace_events.c:682:static void t_stop(struct seq_file *m, void *p)
trace/trace_events.c:845:static void *f_next(struct seq_file *m, void *v, loff_t *pos)
trace/trace_events.c:877:static int f_show(struct seq_file *m, void *v)
trace/trace_events.c:927:static void *f_start(struct seq_file *m, loff_t *pos)
trace/trace_events.c:943:static void f_stop(struct seq_file *m, void *p)
trace/trace_events.c:955:static int trace_format_open(struct inode *inode, struct file *file)
trace/trace_events.c:1058:static int subsystem_open(struct inode *inode, struct file *filp)
trace/trace_events.c:1108:static int system_tr_open(struct inode *inode, struct file *filp)
trace/trace_events.c:1141:static int subsystem_release(struct inode *inode, struct file *file)
trace/trace_events.c:1347:static int ftrace_event_release(struct inode *inode, struct file *file)
trace/trace_events.c:1558:static void remove_event_from_tracers(struct ftrace_event_call *call)
trace/trace_events.c:1578:static void event_remove(struct ftrace_event_call *call)
trace/trace_events.c:1603:static int event_init(struct ftrace_event_call *call)
trace/trace_events.c:1688:int trace_add_event_call(struct ftrace_event_call *call)
trace/trace_events.c:1707:static void __trace_remove_event_call(struct ftrace_event_call *call)
trace/trace_events.c:1714:static int probe_remove_event_call(struct ftrace_event_call *call)
trace/trace_events.c:1748:int trace_remove_event_call(struct ftrace_event_call *call)
trace/trace_events.c:1770:static void trace_module_add_events(struct module *mod)
trace/trace_events.c:1783:static void trace_module_remove_events(struct module *mod)
trace/trace_events.c:2194:static void __add_event_to_tracers(struct ftrace_event_call *call)
trace/trace_events.c:2265:int event_trace_add_tracer(struct dentry *parent, struct trace_array *tr)
trace/trace_events.c:2310:int event_trace_del_tracer(struct trace_array *tr)
trace/trace_sched_wakeup.c:138:static int register_wakeup_function(int graph, int set)
trace/trace_sched_wakeup.c:158:static void unregister_wakeup_function(int graph)
trace/trace_sched_wakeup.c:171:static void wakeup_function_set(int set)
trace/trace_sched_wakeup.c:179:static int wakeup_flag_changed(struct tracer *tracer, u32 mask, int set)
trace/trace_sched_wakeup.c:187:static int start_func_tracer(int graph)
trace/trace_sched_wakeup.c:201:static void stop_func_tracer(int graph)
trace/trace_sched_wakeup.c:209:static int wakeup_set_flag(u32 old_flags, u32 bit, int set)
trace/trace_sched_wakeup.c:226:static int wakeup_graph_entry(struct ftrace_graph_ent *trace)
trace/trace_sched_wakeup.c:262:static void wakeup_trace_open(struct trace_iterator *iter)
trace/trace_sched_wakeup.c:268:static void wakeup_trace_close(struct trace_iterator *iter)
trace/trace_sched_wakeup.c:290:static void wakeup_print_header(struct seq_file *s)
trace/trace_sched_wakeup.c:311:static int wakeup_set_flag(u32 old_flags, u32 bit, int set)
trace/trace_sched_wakeup.c:316:static int wakeup_graph_entry(struct ftrace_graph_ent *trace)
trace/trace_sched_wakeup.c:331:static void wakeup_print_header(struct seq_file *s)
trace/trace_sched_wakeup.c:336:static void wakeup_print_header(struct seq_file *s)
trace/trace_sched_wakeup.c:346:static int report_latency(cycle_t delta)
trace/trace_sched_wakeup.c:436:static void __wakeup_reset(struct trace_array *tr)
trace/trace_sched_wakeup.c:447:static void wakeup_reset(struct trace_array *tr)
trace/trace_sched_wakeup.c:521:static void start_wakeup_tracer(struct trace_array *tr)
trace/trace_sched_wakeup.c:574:static void stop_wakeup_tracer(struct trace_array *tr)
trace/trace_sched_wakeup.c:584:static int __wakeup_tracer_init(struct trace_array *tr)
trace/trace_sched_wakeup.c:598:static int wakeup_tracer_init(struct trace_array *tr)
trace/trace_sched_wakeup.c:604:static int wakeup_rt_tracer_init(struct trace_array *tr)
trace/trace_sched_wakeup.c:610:static void wakeup_tracer_reset(struct trace_array *tr)
trace/trace_sched_wakeup.c:623:static void wakeup_tracer_start(struct trace_array *tr)
trace/trace_sched_wakeup.c:629:static void wakeup_tracer_stop(struct trace_array *tr)
trace/trace_sched_switch.c:135:static int tracing_sched_register(void)
trace/trace_sched_switch.c:168:static void tracing_sched_unregister(void)
trace/trace_sched_switch.c:175:static void tracing_start_sched_switch(void)
trace/trace_sched_switch.c:183:static void tracing_stop_sched_switch(void)
trace/trace_sched_switch.c:191:void tracing_start_cmdline_record(void)
trace/trace_sched_switch.c:196:void tracing_stop_cmdline_record(void)
trace/trace_sched_switch.c:206:void tracing_start_sched_switch_record(void)
trace/trace_sched_switch.c:225:void tracing_stop_sched_switch_record(void)
trace/trace_sched_switch.c:243:void tracing_sched_switch_assign_trace(struct trace_array *tr)
trace/trace_branch.c:90:void trace_likely_condition(struct ftrace_branch_data *f, int val, int expect)
trace/trace_branch.c:98:int enable_branch_tracing(struct trace_array *tr)
trace/trace_branch.c:113:void disable_branch_tracing(void)
trace/trace_branch.c:126:static void start_branch_trace(struct trace_array *tr)
trace/trace_branch.c:131:static void stop_branch_trace(struct trace_array *tr)
trace/trace_branch.c:136:static int branch_trace_init(struct trace_array *tr)
trace/trace_branch.c:142:static void branch_trace_reset(struct trace_array *tr)
trace/trace_branch.c:164:static void branch_print_header(struct seq_file *s)
trace/trace_branch.c:208:void trace_likely_condition(struct ftrace_branch_data *f, int val, int expect)
trace/trace_branch.c:213:void ftrace_likely_update(struct ftrace_branch_data *f, int val, int expect)
trace/trace_branch.c:234:static int annotated_branch_stat_headers(struct seq_file *m)
trace/trace_branch.c:245:static inline long get_incorrect_percent(struct ftrace_branch_data *p)
trace/trace_branch.c:258:static int branch_stat_show(struct seq_file *m, void *v)
trace/trace_branch.c:284:static void *annotated_branch_stat_start(struct tracer_stat *trace)
trace/trace_branch.c:302:static int annotated_branch_stat_cmp(void *p1, void *p2)
trace/trace_branch.c:363:static int all_branch_stat_headers(struct seq_file *m)
trace/trace_branch.c:374:static void *all_branch_stat_start(struct tracer_stat *trace)
trace/trace_functions_graph.c:279:static inline int ftrace_graph_ignore_irqs(void)
trace/trace_functions_graph.c:287:int trace_graph_entry(struct ftrace_graph_ent *trace)
trace/trace_functions_graph.c:333:int trace_graph_thresh_entry(struct ftrace_graph_ent *trace)
trace/trace_functions_graph.c:413:void set_graph_array(struct trace_array *tr)
trace/trace_functions_graph.c:431:static int graph_trace_init(struct trace_array *tr)
trace/trace_functions_graph.c:449:static void graph_trace_reset(struct trace_array *tr)
trace/trace_functions_graph.c:656:static int print_graph_abs_time(u64 t, struct trace_seq *s)
trace/trace_functions_graph.c:1351:static void print_lat_header(struct seq_file *s, u32 flags)
trace/trace_functions_graph.c:1372:static void __print_graph_headers_flags(struct seq_file *s, u32 flags)
trace/trace_functions_graph.c:1408:void print_graph_headers(struct seq_file *s)
trace/trace_functions_graph.c:1413:void print_graph_headers_flags(struct seq_file *s, u32 flags)
trace/trace_functions_graph.c:1431:void graph_trace_open(struct trace_iterator *iter)
trace/trace_functions_graph.c:1469:void graph_trace_close(struct trace_iterator *iter)
trace/trace_functions_graph.c:1479:static int func_graph_set_flag(u32 old_flags, u32 bit, int set)
trace/trace_events_filter.c:199:static int filter_pred_string(struct filter_pred *pred, void *event)
trace/trace_events_filter.c:212:static int filter_pred_pchar(struct filter_pred *pred, void *event)
trace/trace_events_filter.c:235:static int filter_pred_strloc(struct filter_pred *pred, void *event)
trace/trace_events_filter.c:250:static int filter_pred_none(struct filter_pred *pred, void *event)
trace/trace_events_filter.c:267:static int regex_match_full(char *str, struct regex *r, int len)
trace/trace_events_filter.c:274:static int regex_match_front(char *str, struct regex *r, int len)
trace/trace_events_filter.c:281:static int regex_match_middle(char *str, struct regex *r, int len)
trace/trace_events_filter.c:288:static int regex_match_end(char *str, struct regex *r, int len)
trace/trace_events_filter.c:348:static void filter_build_regex(struct filter_pred *pred)
trace/trace_events_filter.c:539:int filter_match_preds(struct event_filter *filter, void *rec)
trace/trace_events_filter.c:572:static void parse_error(struct filter_parse_state *ps, int err, int pos)
trace/trace_events_filter.c:578:static void remove_filter_string(struct event_filter *filter)
trace/trace_events_filter.c:649:void print_event_filter(struct ftrace_event_file *file, struct trace_seq *s)
trace/trace_events_filter.c:673:static int __alloc_pred_stack(struct pred_stack *stack, int n_preds)
trace/trace_events_filter.c:682:static void __free_pred_stack(struct pred_stack *stack)
trace/trace_events_filter.c:763:static void __free_preds(struct event_filter *filter)
trace/trace_events_filter.c:777:static void call_filter_disable(struct ftrace_event_call *call)
trace/trace_events_filter.c:782:static void filter_disable(struct ftrace_event_file *file)
trace/trace_events_filter.c:792:static void __free_filter(struct event_filter *filter)
trace/trace_events_filter.c:802:void destroy_call_preds(struct ftrace_event_call *call)
trace/trace_events_filter.c:808:static void destroy_file_preds(struct ftrace_event_file *file)
trace/trace_events_filter.c:820:void destroy_preds(struct ftrace_event_file *file)
trace/trace_events_filter.c:836:static int __alloc_preds(struct event_filter *filter, int n_preds)
trace/trace_events_filter.c:860:static inline void __remove_filter(struct ftrace_event_file *file)
trace/trace_events_filter.c:886:static inline void __free_subsystem_filter(struct ftrace_event_file *file)
trace/trace_events_filter.c:934:int filter_assign_type(const char *type)
trace/trace_events_filter.c:945:static bool is_function_field(struct ftrace_event_field *field)
trace/trace_events_filter.c:950:static bool is_string_field(struct ftrace_event_field *field)
trace/trace_events_filter.c:957:static int is_legal_op(struct ftrace_event_field *field, int op)
trace/trace_events_filter.c:1082:static char infix_next(struct filter_parse_state *ps)
trace/trace_events_filter.c:1089:static char infix_peek(struct filter_parse_state *ps)
trace/trace_events_filter.c:1097:static void infix_advance(struct filter_parse_state *ps)
trace/trace_events_filter.c:1109:static inline int is_op_char(struct filter_parse_state *ps, char c)
trace/trace_events_filter.c:1121:static int infix_get_op(struct filter_parse_state *ps, char firstc)
trace/trace_events_filter.c:1148:static inline void clear_operand_string(struct filter_parse_state *ps)
trace/trace_events_filter.c:1154:static inline int append_operand_char(struct filter_parse_state *ps, char c)
trace/trace_events_filter.c:1164:static int filter_opstack_push(struct filter_parse_state *ps, int op)
trace/trace_events_filter.c:1178:static int filter_opstack_empty(struct filter_parse_state *ps)
trace/trace_events_filter.c:1183:static int filter_opstack_top(struct filter_parse_state *ps)
trace/trace_events_filter.c:1195:static int filter_opstack_pop(struct filter_parse_state *ps)
trace/trace_events_filter.c:1212:static void filter_opstack_clear(struct filter_parse_state *ps)
trace/trace_events_filter.c:1218:static char *curr_operand(struct filter_parse_state *ps)
trace/trace_events_filter.c:1223:static int postfix_append_operand(struct filter_parse_state *ps, char *operand)
trace/trace_events_filter.c:1243:static int postfix_append_op(struct filter_parse_state *ps, int op)
trace/trace_events_filter.c:1259:static void postfix_clear(struct filter_parse_state *ps)
trace/trace_events_filter.c:1271:static int filter_parse(struct filter_parse_state *ps)
trace/trace_events_filter.c:1393:static int check_preds(struct filter_parse_state *ps)
trace/trace_events_filter.c:1417:static int count_preds(struct filter_parse_state *ps)
trace/trace_events_filter.c:1483:static int count_leafs(struct filter_pred *preds, struct filter_pred *root)
trace/trace_events_filter.c:1519:static int fold_pred(struct filter_pred *preds, struct filter_pred *root)
trace/trace_events_filter.c:1680:static inline void event_set_filtered_flag(struct ftrace_event_file *file)
trace/trace_events_filter.c:1701:static inline void event_clear_filter(struct ftrace_event_file *file)
trace/trace_events_filter.c:1896:static void create_filter_finish(struct filter_parse_state *ps)
trace/trace_events_filter.c:1976:int apply_event_filter(struct ftrace_event_file *file, char *filter_string)
trace/trace_events_filter.c:2072:void ftrace_profile_free_filter(struct perf_event *event)
trace/trace_events_filter.c:2153:static int ftrace_function_check_pred(struct filter_pred *pred, int leaf)
trace/trace_events_filter.c:2346:static int test_pred_visited_fn(struct filter_pred *pred, void *event)
trace/trace_selftest.c:8:static inline int trace_valid_entry(struct trace_entry *entry)
trace/trace_selftest.c:24:static int trace_test_buffer_cpu(struct trace_buffer *buf, int cpu)
trace/trace_selftest.c:61:static int trace_test_buffer(struct trace_buffer *buf, unsigned long *count)
trace/trace_selftest.c:95:static inline void warn_failed_init_tracer(struct tracer *trace, int init_ret)
trace/trace_selftest.c:169:static void print_counts(void)
trace/trace_selftest.c:179:static void reset_counts(void)
trace/trace_selftest.c:188:static int trace_selftest_ops(int cnt)
trace/trace_selftest.c:716:static int trace_graph_entry_watchdog(struct ftrace_graph_ent *trace)
trace/trace_selftest.c:1023:static int trace_wakeup_test_thread(void *data)
trace/trace_nop.c:38:static void start_nop_trace(struct trace_array *tr)
trace/trace_nop.c:43:static void stop_nop_trace(struct trace_array *tr)
trace/trace_nop.c:48:static int nop_trace_init(struct trace_array *tr)
trace/trace_nop.c:55:static void nop_trace_reset(struct trace_array *tr)
trace/trace_nop.c:65:static int nop_set_flag(u32 old_flags, u32 bit, int set)
trace/trace_event_perf.c:116:static void perf_trace_event_unreg(struct perf_event *p_event)
trace/trace_event_perf.c:145:static int perf_trace_event_open(struct perf_event *p_event)
trace/trace_event_perf.c:151:static void perf_trace_event_close(struct perf_event *p_event)
trace/trace_event_perf.c:179:int perf_trace_init(struct perf_event *p_event)
trace/trace_event_perf.c:201:void perf_trace_destroy(struct perf_event *p_event)
trace/trace_event_perf.c:209:int perf_trace_add(struct perf_event *p_event, int flags)
trace/trace_event_perf.c:228:void perf_trace_del(struct perf_event *p_event, int flags)
trace/trace_event_perf.c:302:static int perf_ftrace_function_register(struct perf_event *event)
trace/trace_event_perf.c:311:static int perf_ftrace_function_unregister(struct perf_event *event)
trace/trace_event_perf.c:319:static void perf_ftrace_function_enable(struct perf_event *event)
trace/trace_event_perf.c:324:static void perf_ftrace_function_disable(struct perf_event *event)
trace/ring_buffer.c:35:int ring_buffer_print_entry_header(struct trace_seq *s)
trace/ring_buffer.c:174:void tracing_off_permanent(void)
trace/ring_buffer.c:205:static inline int rb_null_event(struct ring_buffer_event *event)
trace/ring_buffer.c:210:static void rb_event_set_padding(struct ring_buffer_event *event)
trace/ring_buffer.c:286:unsigned ring_buffer_event_length(struct ring_buffer_event *event)
trace/ring_buffer.c:321:void *ring_buffer_event_data(struct ring_buffer_event *event)
trace/ring_buffer.c:377:static void rb_init_page(struct buffer_data_page *bpage)
trace/ring_buffer.c:388:size_t ring_buffer_page_len(void *page)
trace/ring_buffer.c:398:static void free_buffer_page(struct buffer_page *bpage)
trace/ring_buffer.c:407:static inline int test_time_stamp(u64 delta)
trace/ring_buffer.c:419:int ring_buffer_print_page_header(struct trace_seq *s)
trace/ring_buffer.c:530:static void rb_wake_up_waiters(struct irq_work *work)
trace/ring_buffer.c:546:void ring_buffer_wait(struct ring_buffer *buffer, int cpu)
trace/ring_buffer.c:658:static inline u64 rb_time_stamp(struct ring_buffer *buffer)
trace/ring_buffer.c:664:u64 ring_buffer_time_stamp(struct ring_buffer *buffer, int cpu)
trace/ring_buffer.c:802:static int rb_is_reader_page(struct buffer_page *page)
trace/ring_buffer.c:825:static void rb_head_page_activate(struct ring_buffer_per_cpu *cpu_buffer)
trace/ring_buffer.c:839:static void rb_list_head_clear(struct list_head *list)
trace/ring_buffer.c:1075:static int rb_check_pages(struct ring_buffer_per_cpu *cpu_buffer)
trace/ring_buffer.c:1110:static int __rb_allocate_pages(int nr_pages, struct list_head *pages, int cpu)
trace/ring_buffer.c:1234:static void rb_free_cpu_buffer(struct ring_buffer_per_cpu *cpu_buffer)
trace/ring_buffer.c:1584:static void rb_update_pages(struct ring_buffer_per_cpu *cpu_buffer)
trace/ring_buffer.c:1598:static void update_pages_handler(struct work_struct *work)
trace/ring_buffer.c:1812:void ring_buffer_change_overwrite(struct ring_buffer *buffer, int val)
trace/ring_buffer.c:1829:static inline void *__rb_page_index(struct buffer_page *bpage, unsigned index)
trace/ring_buffer.c:1847:static inline unsigned rb_page_commit(struct buffer_page *bpage)
trace/ring_buffer.c:1853:static inline unsigned rb_page_size(struct buffer_page *bpage)
trace/ring_buffer.c:1939:static void rb_reset_reader_page(struct ring_buffer_per_cpu *cpu_buffer)
trace/ring_buffer.c:1945:static void rb_inc_iter(struct ring_buffer_iter *iter)
trace/ring_buffer.c:2180:static unsigned rb_calculate_event_length(unsigned length)
trace/ring_buffer.c:2466:static void rb_start_commit(struct ring_buffer_per_cpu *cpu_buffer)
trace/ring_buffer.c:2472:static inline void rb_end_commit(struct ring_buffer_per_cpu *cpu_buffer)
trace/ring_buffer.c:2815:static inline void rb_event_discard(struct ring_buffer_event *event)
trace/ring_buffer.c:2989:static int rb_per_cpu_empty(struct ring_buffer_per_cpu *cpu_buffer)
trace/ring_buffer.c:3014:void ring_buffer_record_disable(struct ring_buffer *buffer)
trace/ring_buffer.c:3027:void ring_buffer_record_enable(struct ring_buffer *buffer)
trace/ring_buffer.c:3044:void ring_buffer_record_off(struct ring_buffer *buffer)
trace/ring_buffer.c:3067:void ring_buffer_record_on(struct ring_buffer *buffer)
trace/ring_buffer.c:3085:int ring_buffer_record_is_on(struct ring_buffer *buffer)
trace/ring_buffer.c:3100:void ring_buffer_record_disable_cpu(struct ring_buffer *buffer, int cpu)
trace/ring_buffer.c:3120:void ring_buffer_record_enable_cpu(struct ring_buffer *buffer, int cpu)
trace/ring_buffer.c:3150:u64 ring_buffer_oldest_event_ts(struct ring_buffer *buffer, int cpu)
trace/ring_buffer.c:3183:unsigned long ring_buffer_bytes_cpu(struct ring_buffer *buffer, int cpu)
trace/ring_buffer.c:3203:unsigned long ring_buffer_entries_cpu(struct ring_buffer *buffer, int cpu)
trace/ring_buffer.c:3222:unsigned long ring_buffer_overrun_cpu(struct ring_buffer *buffer, int cpu)
trace/ring_buffer.c:3307:unsigned long ring_buffer_entries(struct ring_buffer *buffer)
trace/ring_buffer.c:3330:unsigned long ring_buffer_overruns(struct ring_buffer *buffer)
trace/ring_buffer.c:3346:static void rb_iter_reset(struct ring_buffer_iter *iter)
trace/ring_buffer.c:3375:void ring_buffer_iter_reset(struct ring_buffer_iter *iter)
trace/ring_buffer.c:3395:int ring_buffer_iter_empty(struct ring_buffer_iter *iter)
trace/ring_buffer.c:3597:static void rb_advance_reader(struct ring_buffer_per_cpu *cpu_buffer)
trace/ring_buffer.c:3620:static void rb_advance_iter(struct ring_buffer_iter *iter)
trace/ring_buffer.c:3662:static int rb_lost_events(struct ring_buffer_per_cpu *cpu_buffer)
trace/ring_buffer.c:3811:static inline int rb_ok_to_lock(void)
trace/ring_buffer.c:4098:unsigned long ring_buffer_size(struct ring_buffer *buffer, int cpu)
trace/ring_buffer.c:4160:void ring_buffer_reset_cpu(struct ring_buffer *buffer, int cpu)
trace/ring_buffer.c:4197:void ring_buffer_reset(struct ring_buffer *buffer)
trace/ring_buffer.c:4210:int ring_buffer_empty(struct ring_buffer *buffer)
trace/ring_buffer.c:4244:int ring_buffer_empty_cpu(struct ring_buffer *buffer, int cpu)
trace/ring_buffer.c:4363:void *ring_buffer_alloc_read_page(struct ring_buffer *buffer, int cpu)
trace/ring_buffer.c:4388:void ring_buffer_free_read_page(struct ring_buffer *buffer, void *data)
trace/trace_probe.c:61:static inline void *get_rloc_data(u32 *dl)
trace/trace_probe.c:67:static inline void *get_loc_data(u32 *dl, void *ent)
trace/trace_probe.c:242:static void free_symbol_cache(struct symbol_cache *sc)
trace/trace_probe.c:494:int traceprobe_split_symbol_offset(char *symbol, unsigned long *offset)
trace/trace_probe.c:743:void traceprobe_update_arg(struct probe_arg *arg)
trace/trace_probe.c:753:void traceprobe_free_probe_arg(struct probe_arg *arg)
trace/trace_printk.c:49:void hold_module_trace_bprintk_format(const char **start, const char **end)
trace/trace_printk.c:157:static void format_mod_start(void)
trace/trace_printk.c:162:static void format_mod_stop(void)
trace/trace_printk.c:189:int __trace_bprintk(unsigned long ip, const char *fmt, ...)
trace/trace_printk.c:207:int __ftrace_vbprintk(unsigned long ip, const char *fmt, va_list ap)
trace/trace_printk.c:219:int __trace_printk(unsigned long ip, const char *fmt, ...)
trace/trace_printk.c:234:int __ftrace_vprintk(unsigned long ip, const char *fmt, va_list ap)
trace/trace_printk.c:282:static void *t_next(struct seq_file *m, void * v, loff_t *pos)
trace/trace_printk.c:288:static int t_show(struct seq_file *m, void *v)
trace/trace_printk.c:322:static void t_stop(struct seq_file *m, void *p)
trace/ring_buffer_benchmark.c:175:static void ring_buffer_consumer(void)
trace/ring_buffer_benchmark.c:214:static void ring_buffer_producer(void)
trace/ring_buffer_benchmark.c:360:static void wait_to_die(void)
trace/ring_buffer_benchmark.c:370:static int ring_buffer_consumer_thread(void *arg)
trace/ring_buffer_benchmark.c:392:static int ring_buffer_producer_thread(void *arg)
trace/blktrace.c:114:static void trace_note_tsk(struct task_struct *tsk)
trace/blktrace.c:128:static void trace_note_time(struct blk_trace *bt)
trace/blktrace.c:143:void __trace_note_message(struct blk_trace *bt, const char *fmt, ...)
trace/blktrace.c:292:static void blk_trace_free(struct blk_trace *bt)
trace/blktrace.c:303:static void blk_trace_cleanup(struct blk_trace *bt)
trace/blktrace.c:310:int blk_trace_remove(struct request_queue *q)
trace/blktrace.c:393:static int blk_remove_buf_file_callback(struct dentry *dentry)
trace/blktrace.c:596:int blk_trace_startstop(struct request_queue *q, int start)
trace/blktrace.c:644:int blk_trace_ioctl(struct block_device *bdev, unsigned cmd, char __user *arg)
trace/blktrace.c:689:void blk_trace_shutdown(struct request_queue *q)
trace/blktrace.c:853:static void blk_add_trace_plug(void *ignore, struct request_queue *q)
trace/blktrace.c:988:static void blk_register_tracepoints(void)
trace/blktrace.c:1028:static void blk_unregister_tracepoints(void)
trace/blktrace.c:1055:static void fill_rwbs(char *rwbs, const struct blk_io_trace *t)
trace/blktrace.c:1100:static inline u32 t_action(const struct trace_entry *ent)
trace/blktrace.c:1105:static inline u32 t_bytes(const struct trace_entry *ent)
trace/blktrace.c:1110:static inline u32 t_sec(const struct trace_entry *ent)
trace/blktrace.c:1120:static inline __u16 t_error(const struct trace_entry *ent)
trace/blktrace.c:1125:static __u64 get_pdu_int(const struct trace_entry *ent)
trace/blktrace.c:1144:static int blk_log_action_classic(struct trace_iterator *iter, const char *act)
trace/blktrace.c:1160:static int blk_log_action(struct trace_iterator *iter, const char *act)
trace/blktrace.c:1170:static int blk_log_dump_pdu(struct trace_seq *s, const struct trace_entry *ent)
trace/blktrace.c:1209:static int blk_log_generic(struct trace_seq *s, const struct trace_entry *ent)
trace/blktrace.c:1253:static int blk_log_remap(struct trace_seq *s, const struct trace_entry *ent)
trace/blktrace.c:1264:static int blk_log_plug(struct trace_seq *s, const struct trace_entry *ent)
trace/blktrace.c:1273:static int blk_log_unplug(struct trace_seq *s, const struct trace_entry *ent)
trace/blktrace.c:1282:static int blk_log_split(struct trace_seq *s, const struct trace_entry *ent)
trace/blktrace.c:1292:static int blk_log_msg(struct trace_seq *s, const struct trace_entry *ent)
trace/blktrace.c:1307:static void blk_tracer_print_header(struct seq_file *m)
trace/blktrace.c:1315:static void blk_tracer_start(struct trace_array *tr)
trace/blktrace.c:1320:static int blk_tracer_init(struct trace_array *tr)
trace/blktrace.c:1327:static void blk_tracer_stop(struct trace_array *tr)
trace/blktrace.c:1332:static void blk_tracer_reset(struct trace_array *tr)
trace/blktrace.c:1397:static int blk_trace_synthesize_old_trace(struct trace_iterator *iter)
trace/blktrace.c:1429:static int blk_tracer_set_flag(u32 old_flags, u32 bit, int set)
trace/blktrace.c:1481:static int blk_trace_remove_queue(struct request_queue *q)
trace/blktrace.c:1593:static int blk_trace_str2mask(const char *str)
trace/blktrace.c:1628:static ssize_t blk_trace_mask2str(char *buf, int mask)
trace/blktrace.c:1763:int blk_trace_init_sysfs(struct device *dev)
trace/blktrace.c:1768:void blk_trace_remove_sysfs(struct device *dev)
trace/blktrace.c:1777:void blk_dump_cmd(char *buf, struct request *rq)
trace/blktrace.c:1802:void blk_fill_rwbs(char *rwbs, u32 rw, int bytes)
trace/trace_export.c:193:int ftrace_event_is_function(struct ftrace_event_call *call)
trace/trace_selftest_dynamic.c:3:int DYN_FTRACE_TEST_NAME(void)
trace/trace_selftest_dynamic.c:9:int DYN_FTRACE_TEST_NAME2(void)
trace/trace_kdb.c:19:static void ftrace_dump_buf(int skip_lines, long cpu_file)
trace/trace_kdb.c:97:static int kdb_ftdump(int argc, const char **argv)
trace/trace_kprobe.c:167:static void free_trace_probe(struct trace_probe *tp)
trace/trace_kprobe.c:291:static int __register_trace_probe(struct trace_probe *tp)
trace/trace_kprobe.c:333:static void __unregister_trace_probe(struct trace_probe *tp)
trace/trace_kprobe.c:348:static int unregister_trace_probe(struct trace_probe *tp)
trace/trace_kprobe.c:365:static int register_trace_probe(struct trace_probe *tp)
trace/trace_kprobe.c:434:static int create_trace_probe(int argc, char **argv)
trace/trace_kprobe.c:623:static int release_all_trace_probes(void)
trace/trace_kprobe.c:651:static void *probes_seq_start(struct seq_file *m, loff_t *pos)
trace/trace_kprobe.c:657:static void *probes_seq_next(struct seq_file *m, void *v, loff_t *pos)
trace/trace_kprobe.c:662:static void probes_seq_stop(struct seq_file *m, void *v)
trace/trace_kprobe.c:667:static int probes_seq_show(struct seq_file *m, void *v)
trace/trace_kprobe.c:697:static int probes_open(struct inode *inode, struct file *file)
trace/trace_kprobe.c:727:static int probes_profile_seq_show(struct seq_file *m, void *v)
trace/trace_kprobe.c:744:static int profile_open(struct inode *inode, struct file *file)
trace/trace_kprobe.c:982:static int kprobe_event_define_fields(struct ftrace_event_call *event_call)
trace/trace_kprobe.c:1003:static int kretprobe_event_define_fields(struct ftrace_event_call *event_call)
trace/trace_kprobe.c:1025:static int __set_print_fmt(struct trace_probe *tp, char *buf, int len)
trace/trace_kprobe.c:1068:static int set_print_fmt(struct trace_probe *tp)
trace/trace_kprobe.c:1183:int kprobe_dispatcher(struct kprobe *kp, struct pt_regs *regs)
trace/trace_kprobe.c:1199:int kretprobe_dispatcher(struct kretprobe_instance *ri, struct pt_regs *regs)
trace/trace_kprobe.c:1222:static int register_probe_event(struct trace_probe *tp)
trace/trace_kprobe.c:1255:static int unregister_probe_event(struct trace_probe *tp)
tracepoint.c:76:static inline void *allocate_probes(int count)
tracepoint.c:83:static void rcu_free_old_probes(struct rcu_head *head)
tracepoint.c:88:static inline void release_probes(struct tracepoint_func *old)
tracepoint.c:97:static void debug_print_probes(struct tracepoint_entry *entry)
tracepoint.c:248:static inline void remove_tracepoint(struct tracepoint_entry *e)
tracepoint.c:287:static void disable_tracepoint(struct tracepoint *elem)
tracepoint.c:326:void module_update_tracepoints(void)
tracepoint.c:335:void module_update_tracepoints(void)
tracepoint.c:345:static void tracepoint_update_probes(void)
tracepoint.c:380:int tracepoint_probe_register(const char *name, void *probe, void *data)
tracepoint.c:424:int tracepoint_probe_unregister(const char *name, void *probe, void *data)
tracepoint.c:444:static void tracepoint_add_old_probes(void *old)
tracepoint.c:505:void tracepoint_probe_update_all(void)
tracepoint.c:550:static void tracepoint_get_iter(struct tracepoint_iter *iter)
tracepoint.c:588:static void tracepoint_get_iter(struct tracepoint_iter *iter)
tracepoint.c:601:void tracepoint_iter_start(struct tracepoint_iter *iter)
tracepoint.c:607:void tracepoint_iter_next(struct tracepoint_iter *iter)
tracepoint.c:619:void tracepoint_iter_stop(struct tracepoint_iter *iter)
tracepoint.c:624:void tracepoint_iter_reset(struct tracepoint_iter *iter)
tracepoint.c:634:static int tracepoint_module_coming(struct module *mod)
tracepoint.c:678:static int tracepoint_module_going(struct module *mod)
tracepoint.c:726:static int init_tracepoints(void)
tracepoint.c:738:void syscall_regfunc(void)
tracepoint.c:755:void syscall_unregfunc(void)
tsacct.c:93:void xacct_add_tsk(struct taskstats *stats, struct task_struct *p)
tsacct.c:154:void acct_update_integrals(struct task_struct *tsk)
tsacct.c:166:void acct_account_cputime(struct task_struct *tsk)
tsacct.c:175:void acct_clear_integrals(struct task_struct *tsk)
up.c:36:int on_each_cpu(smp_call_func_t func, void *info, int wait)
user.c:99:static void uid_hash_insert(struct user_struct *up, struct hlist_head *hashent)
user.c:104:static void uid_hash_remove(struct user_struct *up)
user.c:127:static void free_user(struct user_struct *up, unsigned long flags)
user.c:143:struct user_struct *find_user(kuid_t uid)
user.c:154:void free_uid(struct user_struct *up)
user.c:168:struct user_struct *alloc_uid(kuid_t uid)
user_namespace.c:32:static void set_cred_user_ns(struct cred *cred, struct user_namespace *user_ns)
user_namespace.c:58:int create_user_ns(struct cred *new)
user_namespace.c:110:int unshare_userns(unsigned long unshare_flags, struct cred **new_cred)
user_namespace.c:130:void free_user_ns(struct user_namespace *ns)
user_namespace.c:146:static u32 map_id_range_down(struct uid_gid_map *map, u32 id, u32 count)
user_namespace.c:172:static u32 map_id_down(struct uid_gid_map *map, u32 id)
user_namespace.c:195:static u32 map_id_up(struct uid_gid_map *map, u32 id)
user_namespace.c:231:kuid_t make_kuid(struct user_namespace *ns, uid_t uid)
user_namespace.c:250:uid_t from_kuid(struct user_namespace *targ, kuid_t kuid)
user_namespace.c:275:uid_t from_kuid_munged(struct user_namespace *targ, kuid_t kuid)
user_namespace.c:299:kgid_t make_kgid(struct user_namespace *ns, gid_t gid)
user_namespace.c:318:gid_t from_kgid(struct user_namespace *targ, kgid_t kgid)
user_namespace.c:342:gid_t from_kgid_munged(struct user_namespace *targ, kgid_t kgid)
user_namespace.c:366:kprojid_t make_kprojid(struct user_namespace *ns, projid_t projid)
user_namespace.c:385:projid_t from_kprojid(struct user_namespace *targ, kprojid_t kprojid)
user_namespace.c:410:projid_t from_kprojid_munged(struct user_namespace *targ, kprojid_t kprojid)
user_namespace.c:422:static int uid_m_show(struct seq_file *seq, void *v)
user_namespace.c:443:static int gid_m_show(struct seq_file *seq, void *v)
user_namespace.c:464:static int projid_m_show(struct seq_file *seq, void *v)
user_namespace.c:485:static void *m_start(struct seq_file *seq, loff_t *ppos, struct uid_gid_map *map)
user_namespace.c:496:static void *uid_m_start(struct seq_file *seq, loff_t *ppos)
user_namespace.c:503:static void *gid_m_start(struct seq_file *seq, loff_t *ppos)
user_namespace.c:510:static void *projid_m_start(struct seq_file *seq, loff_t *ppos)
user_namespace.c:517:static void *m_next(struct seq_file *seq, void *v, loff_t *pos)
user_namespace.c:523:static void m_stop(struct seq_file *seq, void *v)
user_namespace.c:549:static bool mappings_overlap(struct uid_gid_map *new_map, struct uid_gid_extent *extent)
user_namespace.c:755:ssize_t proc_uid_map_write(struct file *file, const char __user *buf, size_t size, loff_t *ppos)
user_namespace.c:771:ssize_t proc_gid_map_write(struct file *file, const char __user *buf, size_t size, loff_t *ppos)
user_namespace.c:787:ssize_t proc_projid_map_write(struct file *file, const char __user *buf, size_t size, loff_t *ppos)
user_namespace.c:838:static void *userns_get(struct task_struct *task)
user_namespace.c:849:static void userns_put(void *ns)
user_namespace.c:854:static int userns_install(struct nsproxy *nsproxy, void *ns)
utsname.c:81:void free_uts_ns(struct kref *kref)
utsname.c:91:static void *utsns_get(struct task_struct *task)
utsname.c:107:static void utsns_put(void *ns)
utsname.c:112:static int utsns_install(struct nsproxy *nsproxy, void *new)
utsname_sysctl.c:20:static void *get_uts(ctl_table *table, int write)
utsname_sysctl.c:35:static void put_uts(ctl_table *table, int write, void *which)
utsname_sysctl.c:124:void uts_proc_notify(enum uts_proc proc)
watchdog.c:106:static int get_softlockup_thresh(void)
watchdog.c:121:static void set_sample_period(void)
watchdog.c:134:static void __touch_watchdog(void)
watchdog.c:139:void touch_softlockup_watchdog(void)
watchdog.c:145:void touch_all_softlockup_watchdogs(void)
watchdog.c:159:void touch_nmi_watchdog(void)
watchdog.c:175:void touch_softlockup_watchdog_sync(void)
watchdog.c:183:static int is_hardlockup(void)
watchdog.c:195:static int is_softlockup(unsigned long touch_ts)
watchdog.c:256:static void watchdog_interrupt_count(void)
watchdog.c:335:static void watchdog_set_prio(unsigned int policy, unsigned int prio)
watchdog.c:342:static void watchdog_enable(unsigned int cpu)
watchdog.c:362:static void watchdog_disable(unsigned int cpu)
watchdog.c:372:static void watchdog_cleanup(unsigned int cpu, bool online)
watchdog.c:377:static int watchdog_should_run(unsigned int cpu)
watchdog.c:391:static void watchdog(unsigned int cpu)
watchdog.c:406:static int watchdog_nmi_enable(unsigned int cpu)
watchdog.c:460:static void watchdog_nmi_disable(unsigned int cpu)
watchdog.c:489:static void restart_watchdog_hrtimer(void *info)
watchdog.c:506:static void update_timers(int cpu)
watchdog.c:522:static void update_timers_all_cpus(void)
watchdog.c:534:static int watchdog_enable_all_cpus(bool sample_period_changed)
watchdog.c:554:static void watchdog_disable_all_cpus(void)
workqueue.c:412:static void *work_debug_hint(void *addr)
workqueue.c:421:static int work_fixup_init(void *addr, enum debug_obj_state state)
workqueue.c:440:static int work_fixup_activate(void *addr, enum debug_obj_state state)
workqueue.c:472:static int work_fixup_free(void *addr, enum debug_obj_state state)
workqueue.c:494:static inline void debug_work_activate(struct work_struct *work)
workqueue.c:499:static inline void debug_work_deactivate(struct work_struct *work)
workqueue.c:504:void __init_work(struct work_struct *work, int onstack)
workqueue.c:513:void destroy_work_on_stack(struct work_struct *work)
workqueue.c:531:static int worker_pool_assign_id(struct worker_pool *pool)
workqueue.c:569:static int get_work_color(struct work_struct *work)
workqueue.c:575:static int work_next_color(int color)
workqueue.c:634:static void clear_work_data(struct work_struct *work)
workqueue.c:690:static int get_work_pool_id(struct work_struct *work)
workqueue.c:701:static void mark_work_canceling(struct work_struct *work)
workqueue.c:709:static bool work_is_canceling(struct work_struct *work)
workqueue.c:722:static bool __need_more_worker(struct worker_pool *pool)
workqueue.c:735:static bool need_more_worker(struct worker_pool *pool)
workqueue.c:741:static bool may_start_working(struct worker_pool *pool)
workqueue.c:747:static bool keep_working(struct worker_pool *pool)
workqueue.c:754:static bool need_to_create_worker(struct worker_pool *pool)
workqueue.c:760:static bool need_to_manage_workers(struct worker_pool *pool)
workqueue.c:767:static bool too_many_workers(struct worker_pool *pool)
workqueue.c:805:static void wake_up_worker(struct worker_pool *pool)
workqueue.c:824:void wq_worker_waking_up(struct task_struct *task, int cpu)
workqueue.c:849:struct task_struct *wq_worker_sleeping(struct task_struct *task, int cpu)
workqueue.c:933:static inline void worker_clr_flags(struct worker *worker, unsigned int flags)
workqueue.c:1047:static void get_pwq(struct pool_workqueue *pwq)
workqueue.c:1061:static void put_pwq(struct pool_workqueue *pwq)
workqueue.c:1085:static void put_pwq_unlocked(struct pool_workqueue *pwq)
workqueue.c:1098:static void pwq_activate_delayed_work(struct work_struct *work)
workqueue.c:1108:static void pwq_activate_first_delayed(struct pool_workqueue *pwq)
workqueue.c:1127:static void pwq_dec_nr_in_flight(struct pool_workqueue *pwq, int color)
workqueue.c:1302:static bool is_chained_work(struct workqueue_struct *wq)
workqueue.c:1444:void delayed_work_timer_fn(unsigned long __data)
workqueue.c:1566:static void worker_enter_idle(struct worker *worker)
workqueue.c:1606:static void worker_leave_idle(struct worker *worker)
workqueue.c:1649:static bool worker_maybe_bind_and_lock(struct worker_pool *pool)
workqueue.c:1794:static void start_worker(struct worker *worker)
workqueue.c:1810:static int create_and_start_worker(struct worker_pool *pool)
workqueue.c:1837:static void destroy_worker(struct worker *worker)
workqueue.c:1867:static void idle_worker_timeout(unsigned long __pool)
workqueue.c:1893:static void send_mayday(struct work_struct *work)
workqueue.c:1910:static void pool_mayday_timeout(unsigned long __pool)
workqueue.c:1957:static bool maybe_create_worker(struct worker_pool *pool)
workqueue.c:2014:static bool maybe_destroy_workers(struct worker_pool *pool)
workqueue.c:2060:static bool manage_workers(struct worker *worker)
workqueue.c:2128:static void process_one_work(struct worker *worker, struct work_struct *work)
workqueue.c:2261:static void process_scheduled_works(struct worker *worker)
workqueue.c:2282:static int worker_thread(void *__worker)
workqueue.c:2382:static int rescuer_thread(void *__rescuer)
workqueue.c:2459:static void wq_barrier_func(struct work_struct *work)
workqueue.c:2604:void flush_workqueue(struct workqueue_struct *wq)
workqueue.c:2761:void drain_workqueue(struct workqueue_struct *wq)
workqueue.c:2805:static bool start_flush_work(struct work_struct *work, struct wq_barrier *barr)
workqueue.c:2865:bool flush_work(struct work_struct *work)
workqueue.c:2882:static bool __cancel_work_timer(struct work_struct *work, bool is_dwork)
workqueue.c:2924:bool cancel_work_sync(struct work_struct *work)
workqueue.c:2942:bool flush_delayed_work(struct delayed_work *dwork)
workqueue.c:2968:bool cancel_delayed_work(struct delayed_work *dwork)
workqueue.c:2996:bool cancel_delayed_work_sync(struct delayed_work *dwork)
workqueue.c:3013:int schedule_on_each_cpu(work_func_t func)
workqueue.c:3063:void flush_scheduled_work(void)
workqueue.c:3081:int execute_in_process_context(work_func_t fn, struct execute_work *ew)
workqueue.c:3318:static void wq_device_release(struct device *dev)
workqueue.c:3340:int workqueue_sysfs_register(struct workqueue_struct *wq)
workqueue.c:3398:static void workqueue_sysfs_unregister(struct workqueue_struct *wq)
workqueue.c:3418:void free_workqueue_attrs(struct workqueue_attrs *attrs)
workqueue.c:3435:struct workqueue_attrs *alloc_workqueue_attrs(gfp_t gfp_mask)
workqueue.c:3466:static u32 wqattrs_hash(const struct workqueue_attrs *attrs)
workqueue.c:3497:static int init_worker_pool(struct worker_pool *pool)
workqueue.c:3529:static void rcu_free_pool(struct rcu_head *rcu)
workqueue.c:3549:static void put_unbound_pool(struct worker_pool *pool)
workqueue.c:3668:static void rcu_free_pwq(struct rcu_head *rcu)
workqueue.c:3678:static void pwq_unbound_release_workfn(struct work_struct *work)
workqueue.c:3723:static void pwq_adjust_max_active(struct pool_workqueue *pwq)
workqueue.c:3775:static void link_pwq(struct pool_workqueue *pwq)
workqueue.c:3822:static void free_unbound_pwq(struct pool_workqueue *pwq)
workqueue.c:4112:static int alloc_and_link_pwqs(struct workqueue_struct *wq)
workqueue.c:4272:void destroy_workqueue(struct workqueue_struct *wq)
workqueue.c:4357:void workqueue_set_max_active(struct workqueue_struct *wq, int max_active)
workqueue.c:4386:bool current_is_workqueue_rescuer(void)
workqueue.c:4411:bool workqueue_congested(int cpu, struct workqueue_struct *wq)
workqueue.c:4444:unsigned int work_busy(struct work_struct *work)
workqueue.c:4477:void set_worker_desc(const char *fmt, ...)
workqueue.c:4503:void print_worker_info(const char *log_lvl, struct task_struct *task)
workqueue.c:4559:static void wq_unbind_fn(struct work_struct *work)
workqueue.c:4622:static void rebind_workers(struct worker_pool *pool)
workqueue.c:4690:static void restore_unbound_workers_cpumask(struct worker_pool *pool, int cpu)
workqueue.c:4806:static void work_for_cpu_fn(struct work_struct *work)
workqueue.c:4848:void freeze_workqueues_begin(void)
workqueue.c:4891:bool freeze_workqueues_busy(void)
workqueue.c:4933:void thaw_workqueues(void)
