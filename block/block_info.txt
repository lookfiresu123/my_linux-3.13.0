blk-map.c:28:static int __blk_rq_unmap_user(struct bio *bio)
blk-map.c:255:int blk_rq_unmap_user(struct bio *bio)
compat_ioctl.c:14:static int compat_put_ushort(unsigned long arg, unsigned short val)
compat_ioctl.c:19:static int compat_put_int(unsigned long arg, int val)
compat_ioctl.c:24:static int compat_put_uint(unsigned long arg, unsigned int val)
compat_ioctl.c:29:static int compat_put_long(unsigned long arg, long val)
compat_ioctl.c:34:static int compat_put_ulong(unsigned long arg, compat_ulong_t val)
compat_ioctl.c:39:static int compat_put_u64(unsigned long arg, u64 val)
compat_ioctl.c:657:long compat_blkdev_ioctl(struct file *file, unsigned cmd, unsigned long arg)
blk.h:17:static inline void __blk_get_queue(struct request_queue *q)
blk.h:68:static inline int blk_mark_rq_complete(struct request *rq)
blk.h:73:static inline void blk_clear_rq_complete(struct request *rq)
blk.h:122:static inline void elv_activate_rq(struct request_queue *q, struct request *rq)
blk.h:130:static inline void elv_deactivate_rq(struct request_queue *q, struct request *rq)
blk.h:144:static inline int blk_should_fake_timeout(struct request_queue *q)
blk.h:175:static inline int queue_congestion_on_threshold(struct request_queue *q)
blk.h:183:static inline int queue_congestion_off_threshold(struct request_queue *q)
blk.h:195:static inline int blk_do_io_stat(struct request *rq)
blk.h:242:static inline bool blk_throtl_bio(struct request_queue *q, struct bio *bio)
blk-softirq.c:21:static void blk_done_softirq(struct softirq_action *h)
blk-softirq.c:40:static void trigger_softirq(void *data)
blk-softirq.c:59:static int raise_blk_irq(int cpu, struct request *rq)
blk-softirq.c:75:static int raise_blk_irq(int cpu, struct request *rq)
blk-softirq.c:105:void __blk_complete_request(struct request *req)
blk-softirq.c:166:void blk_complete_request(struct request *req)
elevator.c:56:static int elv_iosched_allow_merge(struct request *rq, struct bio *bio)
elevator.c:70:bool elv_rq_merge_ok(struct request *rq, struct bio *bio)
elevator.c:94:static void elevator_put(struct elevator_type *e)
elevator.c:175:static void elevator_release(struct kobject *kobj)
elevator.c:184:int elevator_init(struct request_queue *q, char *name)
elevator.c:236:void elevator_exit(struct elevator_queue *e)
elevator.c:247:static inline void __elv_rqhash_del(struct request *rq)
elevator.c:252:static void elv_rqhash_del(struct request_queue *q, struct request *rq)
elevator.c:258:static void elv_rqhash_add(struct request_queue *q, struct request *rq)
elevator.c:266:static void elv_rqhash_reposition(struct request_queue *q, struct request *rq)
elevator.c:297:void elv_rb_add(struct rb_root *root, struct request *rq)
elevator.c:318:void elv_rb_del(struct rb_root *root, struct request *rq)
elevator.c:326:struct request *elv_rb_find(struct rb_root *root, sector_t sector)
elevator.c:351:void elv_dispatch_sort(struct request_queue *q, struct request *rq)
elevator.c:396:void elv_dispatch_add_tail(struct request_queue *q, struct request *rq)
elevator.c:411:int elv_merge(struct request_queue *q, struct request **req, struct bio *bio)
elevator.c:497:void elv_merged_request(struct request_queue *q, struct request *rq, int type)
elevator.c:539:static void blk_pm_requeue_request(struct request *rq)
elevator.c:545:static void blk_pm_add_request(struct request_queue *q, struct request *rq)
elevator.c:559:void elv_requeue_request(struct request_queue *q, struct request *rq)
elevator.c:578:void elv_drain_elevator(struct request_queue *q)
elevator.c:593:void __elv_add_request(struct request_queue *q, struct request *rq, int where)
elevator.c:674:void elv_add_request(struct request_queue *q, struct request *rq, int where)
elevator.c:684:struct request *elv_latter_request(struct request_queue *q, struct request *rq)
elevator.c:693:struct request *elv_former_request(struct request_queue *q, struct request *rq)
elevator.c:712:void elv_put_request(struct request_queue *q, struct request *rq)
elevator.c:720:int elv_may_queue(struct request_queue *q, int rw)
elevator.c:730:void elv_abort_queue(struct request_queue *q)
elevator.c:750:void elv_completed_request(struct request_queue *q, struct request *rq)
elevator.c:812:int elv_register_queue(struct request_queue *q)
elevator.c:834:void elv_unregister_queue(struct request_queue *q)
elevator.c:846:int elv_register(struct elevator_type *e)
elevator.c:887:void elv_unregister(struct elevator_type *e)
elevator.c:912:static int elevator_switch(struct request_queue *q, struct elevator_type *new_e)
elevator.c:968:static int __elevator_change(struct request_queue *q, const char *name)
elevator.c:991:int elevator_change(struct request_queue *q, const char *name)
elevator.c:1020:ssize_t elv_iosched_show(struct request_queue *q, char *name)
noop-iosched.c:21:static int noop_dispatch(struct request_queue *q, int force)
noop-iosched.c:35:static void noop_add_request(struct request_queue *q, struct request *rq)
noop-iosched.c:62:static int noop_init_queue(struct request_queue *q, struct elevator_type *e)
noop-iosched.c:86:static void noop_exit_queue(struct elevator_queue *e)
blk-iopoll.c:33:void blk_iopoll_sched(struct blk_iopoll *iop)
blk-iopoll.c:52:void __blk_iopoll_complete(struct blk_iopoll *iop)
blk-iopoll.c:70:void blk_iopoll_complete(struct blk_iopoll *iopoll)
blk-iopoll.c:80:static void blk_iopoll_softirq(struct softirq_action *h)
blk-iopoll.c:147:void blk_iopoll_disable(struct blk_iopoll *iop)
blk-iopoll.c:164:void blk_iopoll_enable(struct blk_iopoll *iop)
blk-iopoll.c:182:void blk_iopoll_init(struct blk_iopoll *iop, int weight, blk_iopoll_fn *poll_fn)
partition-generic.c:35:char *disk_name(struct gendisk *hd, int partno, char *buf)
partition-generic.c:69:static ssize_t part_partition_show(struct device *dev, struct device_attribute *attr, char *buf)
partition-generic.c:76:static ssize_t part_start_show(struct device *dev, struct device_attribute *attr, char *buf)
partition-generic.c:211:static void part_release(struct device *dev)
partition-generic.c:225:static void delete_partition_rcu_cb(struct rcu_head *head)
partition-generic.c:235:void __delete_partition(struct hd_struct *part)
partition-generic.c:240:void delete_partition(struct gendisk *disk, int partno)
partition-generic.c:378:static bool disk_unlock_native_capacity(struct gendisk *disk)
partition-generic.c:394:static int drop_partitions(struct gendisk *disk, struct block_device *bdev)
partition-generic.c:414:int rescan_partitions(struct gendisk *disk, struct block_device *bdev)
partition-generic.c:532:int invalidate_partitions(struct gendisk *disk, struct block_device *bdev)
partition-generic.c:552:unsigned char *read_dev_sector(struct block_device *bdev, sector_t n, Sector *p)
blk-merge.c:71:void blk_recalc_rq_segments(struct request *rq)
blk-merge.c:76:void blk_recount_segments(struct request_queue *q, struct bio *bio)
blk-merge.c:315:static bool req_no_special_merge(struct request *req)
blk-merge.c:372:void blk_rq_set_mixed_merge(struct request *rq)
blk-merge.c:393:static void blk_account_io_merge(struct request *req)
blk-merge.c:490:int attempt_back_merge(struct request_queue *q, struct request *rq)
blk-merge.c:500:int attempt_front_merge(struct request_queue *q, struct request *rq)
blk-merge.c:516:bool blk_rq_merge_ok(struct request *rq, struct bio *bio)
blk-merge.c:544:int blk_try_merge(struct request *rq, struct bio *bio)
blk-exec.c:23:static void blk_end_sync_rq(struct request *rq, int error)
bsg-lib.c:35:static void bsg_destroy_job(struct bsg_job *job)
bsg-lib.c:82:static void bsg_softirq_done(struct request *rq)
bsg-lib.c:90:static int bsg_map_buffer(struct bsg_buffer *buf, struct request *req)
bsg-lib.c:110:static int bsg_create_job(struct device *dev, struct request *req)
bsg-lib.c:163:void bsg_request_fn(struct request_queue *q)
blk-mq.c:49:static void blk_mq_put_ctx(struct blk_mq_ctx *ctx)
blk-mq.c:57:static bool blk_mq_hctx_has_pending(struct blk_mq_hw_ctx *hctx)
blk-mq.c:95:static int blk_mq_queue_enter(struct request_queue *q)
blk-mq.c:118:static void blk_mq_queue_exit(struct request_queue *q)
blk-mq.c:127:static void blk_mq_freeze_queue(struct request_queue *q)
blk-mq.c:153:static void blk_mq_unfreeze_queue(struct request_queue *q)
blk-mq.c:168:bool blk_mq_can_queue(struct blk_mq_hw_ctx *hctx)
blk-mq.c:250:static void blk_mq_rq_init(struct blk_mq_hw_ctx *hctx, struct request *rq)
blk-mq.c:270:void blk_mq_free_request(struct request *rq)
blk-mq.c:282:static void blk_mq_bio_endio(struct request *rq, struct bio *bio, int error)
blk-mq.c:297:void blk_mq_complete_request(struct request *rq, int error)
blk-mq.c:323:void __blk_mq_end_io(struct request *rq, int error)
blk-mq.c:334:static void ipi_end_io(void *data)
blk-mq.c:384:void blk_mq_end_io(struct request *rq, int error)
blk-mq.c:402:static void blk_mq_start_request(struct request *rq)
blk-mq.c:417:static void blk_mq_requeue_request(struct request *rq)
blk-mq.c:431:static void blk_mq_timeout_check(void *__data, unsigned long *free_tags)
blk-mq.c:476:static void blk_mq_rq_timer(unsigned long data)
blk-mq.c:529:void blk_mq_add_timer(struct request *rq)
blk-mq.c:540:static void __blk_mq_run_hw_queue(struct blk_mq_hw_ctx *hctx)
blk-mq.c:646:void blk_mq_run_hw_queue(struct blk_mq_hw_ctx *hctx, bool async)
blk-mq.c:660:void blk_mq_run_queues(struct request_queue *q, bool async)
blk-mq.c:676:void blk_mq_stop_hw_queue(struct blk_mq_hw_ctx *hctx)
blk-mq.c:683:void blk_mq_stop_hw_queues(struct request_queue *q)
blk-mq.c:693:void blk_mq_start_hw_queue(struct blk_mq_hw_ctx *hctx)
blk-mq.c:700:void blk_mq_start_stopped_hw_queues(struct request_queue *q)
blk-mq.c:715:static void blk_mq_work_fn(struct work_struct *work)
blk-mq.c:774:void blk_mq_run_request(struct request *rq, bool run_queue, bool async)
blk-mq.c:838:static int plug_ctx_cmp(void *priv, struct list_head *a, struct list_head *b)
blk-mq.c:848:void blk_mq_flush_plug_list(struct blk_plug *plug, bool from_schedule)
blk-mq.c:895:static void blk_mq_bio_to_request(struct request *rq, struct bio *bio)
blk-mq.c:901:static void blk_mq_make_request(struct request_queue *q, struct bio *bio)
blk-mq.c:999:struct blk_mq_hw_ctx *blk_mq_map_queue(struct request_queue *q, const int cpu)
blk-mq.c:1089:static void blk_mq_free_rq_map(struct blk_mq_hw_ctx *hctx)
blk-mq.c:1105:static size_t order_to_size(unsigned int order)
blk-mq.c:1299:static void blk_mq_map_swqueue(struct request_queue *q)
blk-mq.c:1426:void blk_mq_free_queue(struct request_queue *q)
blk-mq.c:1457:static void blk_mq_queue_reinit(struct request_queue *q)
cfq-iosched.c:488:static void cfqg_stats_update_group_wait_time(struct cfqg_stats *stats)
cfq-iosched.c:517:static void cfqg_stats_end_empty_time(struct cfqg_stats *stats)
cfq-iosched.c:531:static void cfqg_stats_update_dequeue(struct cfq_group *cfqg)
cfq-iosched.c:536:static void cfqg_stats_set_start_empty_time(struct cfq_group *cfqg)
cfq-iosched.c:555:static void cfqg_stats_update_idle_time(struct cfq_group *cfqg)
cfq-iosched.c:569:static void cfqg_stats_set_start_idle_time(struct cfq_group *cfqg)
cfq-iosched.c:579:static void cfqg_stats_update_avg_queue_size(struct cfq_group *cfqg)
cfq-iosched.c:617:static inline void cfqg_get(struct cfq_group *cfqg)
cfq-iosched.c:622:static inline void cfqg_put(struct cfq_group *cfqg)
cfq-iosched.c:661:static inline void cfqg_stats_update_io_remove(struct cfq_group *cfqg, int rw)
cfq-iosched.c:666:static inline void cfqg_stats_update_io_merged(struct cfq_group *cfqg, int rw)
cfq-iosched.c:693:static void cfqg_stats_reset(struct cfqg_stats *stats)
cfq-iosched.c:714:static void cfqg_stats_merge(struct cfqg_stats *to, struct cfqg_stats *from)
cfq-iosched.c:739:static void cfqg_stats_xfer_dead(struct cfq_group *cfqg)
cfq-iosched.c:806:static inline bool iops_mode(struct cfq_data *cfqd)
cfq-iosched.c:898:static inline bool cfq_bio_sync(struct bio *bio)
cfq-iosched.c:907:static inline void cfq_schedule_dispatch(struct cfq_data *cfqd)
cfq-iosched.c:959:static inline u64 max_vdisktime(u64 min_vdisktime, u64 vdisktime)
cfq-iosched.c:968:static inline u64 min_vdisktime(u64 min_vdisktime, u64 vdisktime)
cfq-iosched.c:977:static void update_min_vdisktime(struct cfq_rb_root *st)
cfq-iosched.c:1061:static inline bool cfq_slice_used(struct cfq_queue *cfqq)
cfq-iosched.c:1190:static void rb_erase_init(struct rb_node *n, struct rb_root *root)
cfq-iosched.c:1196:static void cfq_rb_erase(struct rb_node *n, struct cfq_rb_root *root)
cfq-iosched.c:1498:static void cfq_init_cfqg_base(struct cfq_group *cfqg)
cfq-iosched.c:1511:static void cfqg_stats_init(struct cfqg_stats *stats)
cfq-iosched.c:1534:static void cfq_pd_init(struct blkcg_gq *blkg)
cfq-iosched.c:1545:static void cfq_pd_offline(struct blkcg_gq *blkg)
cfq-iosched.c:1561:static u64 cfqg_stat_pd_recursive_sum(struct blkg_policy_data *pd, int off)
cfq-iosched.c:1582:static void cfq_pd_reset_stats(struct blkcg_gq *blkg)
cfq-iosched.c:1614:static void cfq_link_cfqq_cfqg(struct cfq_queue *cfqq, struct cfq_group *cfqg)
cfq-iosched.c:2141:static void cfq_prio_tree_add(struct cfq_data *cfqd, struct cfq_queue *cfqq)
cfq-iosched.c:2169:static void cfq_resort_rr_list(struct cfq_data *cfqd, struct cfq_queue *cfqq)
cfq-iosched.c:2184:static void cfq_add_cfqq_rr(struct cfq_data *cfqd, struct cfq_queue *cfqq)
cfq-iosched.c:2200:static void cfq_del_cfqq_rr(struct cfq_data *cfqd, struct cfq_queue *cfqq)
cfq-iosched.c:2225:static void cfq_del_rq_rb(struct request *rq)
cfq-iosched.c:2248:static void cfq_add_rq_rb(struct request *rq)
cfq-iosched.c:2276:static void cfq_reposition_rq_rb(struct cfq_queue *cfqq, struct request *rq)
cfq-iosched.c:2304:static void cfq_activate_request(struct request_queue *q, struct request *rq)
cfq-iosched.c:2315:static void cfq_deactivate_request(struct request_queue *q, struct request *rq)
cfq-iosched.c:2325:static void cfq_remove_request(struct request *rq)
cfq-iosched.c:2432:static inline void cfq_del_timer(struct cfq_data *cfqd, struct cfq_queue *cfqq)
cfq-iosched.c:2515:static inline void cfq_slice_expired(struct cfq_data *cfqd, bool timed_out)
cfq-iosched.c:2694:static bool cfq_should_idle(struct cfq_data *cfqd, struct cfq_queue *cfqq)
cfq-iosched.c:2725:static void cfq_arm_slice_timer(struct cfq_data *cfqd)
cfq-iosched.c:2798:static void cfq_dispatch_insert(struct request_queue *q, struct request *rq)
cfq-iosched.c:2852:static int cfqq_process_refs(struct cfq_queue *cfqq)
cfq-iosched.c:2862:static void cfq_setup_merge(struct cfq_queue *cfqq, struct cfq_queue *new_cfqq)
cfq-iosched.c:3022:static void cfq_choose_cfqg(struct cfq_data *cfqd)
cfq-iosched.c:3154:static int __cfq_forced_dispatch_cfqq(struct cfq_queue *cfqq)
cfq-iosched.c:3174:static int cfq_forced_dispatch(struct cfq_data *cfqd)
cfq-iosched.c:3205:static bool cfq_may_dispatch(struct cfq_data *cfqd, struct cfq_queue *cfqq)
cfq-iosched.c:3294:static bool cfq_dispatch_request(struct cfq_data *cfqd, struct cfq_queue *cfqq)
cfq-iosched.c:3329:static int cfq_dispatch_requests(struct request_queue *q, int force)
cfq-iosched.c:3375:static void cfq_put_queue(struct cfq_queue *cfqq)
cfq-iosched.c:3401:static void cfq_put_cooperator(struct cfq_queue *cfqq)
cfq-iosched.c:3422:static void cfq_exit_cfqq(struct cfq_data *cfqd, struct cfq_queue *cfqq)
cfq-iosched.c:3434:static void cfq_init_icq(struct io_cq *icq)
cfq-iosched.c:3441:static void cfq_exit_icq(struct io_cq *icq)
cfq-iosched.c:3457:static void cfq_init_prio_data(struct cfq_queue *cfqq, struct cfq_io_cq *cic)
cfq-iosched.c:3499:static void check_ioprio_changed(struct cfq_io_cq *cic, struct bio *bio)
cfq-iosched.c:3551:static void check_blkcg_changed(struct cfq_io_cq *cic, struct bio *bio)
cfq-iosched.c:3857:static void cfq_preempt_queue(struct cfq_data *cfqd, struct cfq_queue *cfqq)
cfq-iosched.c:3937:static void cfq_insert_request(struct request_queue *q, struct request *rq)
cfq-iosched.c:3957:static void cfq_update_hw_tag(struct cfq_data *cfqd)
cfq-iosched.c:3990:static bool cfq_should_wait_busy(struct cfq_data *cfqd, struct cfq_queue *cfqq)
cfq-iosched.c:4027:static void cfq_completed_request(struct request_queue *q, struct request *rq)
cfq-iosched.c:4115:static inline int __cfq_may_queue(struct cfq_queue *cfqq)
cfq-iosched.c:4125:static int cfq_may_queue(struct request_queue *q, int rw)
cfq-iosched.c:4155:static void cfq_put_request(struct request *rq)
cfq-iosched.c:4261:static void cfq_kick_queue(struct work_struct *work)
cfq-iosched.c:4275:static void cfq_idle_slice_timer(unsigned long data)
cfq-iosched.c:4328:static void cfq_shutdown_timer_wq(struct cfq_data *cfqd)
cfq-iosched.c:4334:static void cfq_put_async_queues(struct cfq_data *cfqd)
cfq-iosched.c:4349:static void cfq_exit_queue(struct elevator_queue *e)
cfq-iosched.c:4375:static int cfq_init_queue(struct request_queue *q, struct elevator_type *e)
blk-mq-cpumap.c:12:static void show_map(unsigned int *map, unsigned int nr)
blk-mq-cpumap.c:27:static int get_first_sibling(unsigned int cpu)
blk-mq-cpumap.c:38:int blk_mq_update_queue_map(unsigned int *map, unsigned int nr_queues)
blk-mq-cpumap.c:93:unsigned int *blk_mq_make_queue_map(struct blk_mq_reg *reg)
blk-sysfs.c:42:static ssize_t queue_requests_show(struct request_queue *q, char *page)
blk-sysfs.c:101:static ssize_t queue_ra_show(struct request_queue *q, char *page)
blk-sysfs.c:123:static ssize_t queue_max_sectors_show(struct request_queue *q, char *page)
blk-sysfs.c:130:static ssize_t queue_max_segments_show(struct request_queue *q, char *page)
blk-sysfs.c:135:static ssize_t queue_max_integrity_segments_show(struct request_queue *q, char *page)
blk-sysfs.c:140:static ssize_t queue_max_segment_size_show(struct request_queue *q, char *page)
blk-sysfs.c:148:static ssize_t queue_logical_block_size_show(struct request_queue *q, char *page)
blk-sysfs.c:153:static ssize_t queue_physical_block_size_show(struct request_queue *q, char *page)
blk-sysfs.c:158:static ssize_t queue_io_min_show(struct request_queue *q, char *page)
blk-sysfs.c:163:static ssize_t queue_io_opt_show(struct request_queue *q, char *page)
blk-sysfs.c:168:static ssize_t queue_discard_granularity_show(struct request_queue *q, char *page)
blk-sysfs.c:173:static ssize_t queue_discard_max_show(struct request_queue *q, char *page)
blk-sysfs.c:179:static ssize_t queue_discard_zeroes_data_show(struct request_queue *q, char *page)
blk-sysfs.c:184:static ssize_t queue_write_same_max_show(struct request_queue *q, char *page)
blk-sysfs.c:212:static ssize_t queue_max_hw_sectors_show(struct request_queue *q, char *page)
blk-sysfs.c:252:static ssize_t queue_nomerges_show(struct request_queue *q, char *page)
blk-sysfs.c:279:static ssize_t queue_rq_affinity_show(struct request_queue *q, char *page)
blk-sysfs.c:503:static void blk_free_queue_rcu(struct rcu_head *rcu_head)
blk-sysfs.c:525:static void blk_release_queue(struct kobject *kobj)
blk-sysfs.c:570:int blk_register_queue(struct gendisk *disk)
blk-sysfs.c:616:void blk_unregister_queue(struct gendisk *disk)
blk-throttle.c:259:static void tg_stats_init(struct tg_stats_cpu *tg_stats)
blk-throttle.c:270:static void tg_stats_alloc_fn(struct work_struct *work)
blk-throttle.c:306:static void throtl_qnode_init(struct throtl_qnode *qn, struct throtl_grp *tg)
blk-throttle.c:401:static void throtl_service_queue_exit(struct throtl_service_queue *sq)
blk-throttle.c:406:static void throtl_pd_init(struct blkcg_gq *blkg)
blk-throttle.c:463:static void tg_update_has_rules(struct throtl_grp *tg)
blk-throttle.c:473:static void throtl_pd_online(struct blkcg_gq *blkg)
blk-throttle.c:482:static void throtl_pd_exit(struct blkcg_gq *blkg)
blk-throttle.c:496:static void throtl_pd_reset_stats(struct blkcg_gq *blkg)
blk-throttle.c:568:static void rb_erase_init(struct rb_node *n, struct rb_root *root)
blk-throttle.c:583:static void update_min_dispatch_time(struct throtl_service_queue *parent_sq)
blk-throttle.c:594:static void tg_service_queue_add(struct throtl_grp *tg)
blk-throttle.c:622:static void __throtl_enqueue_tg(struct throtl_grp *tg)
blk-throttle.c:629:static void throtl_enqueue_tg(struct throtl_grp *tg)
blk-throttle.c:635:static void __throtl_dequeue_tg(struct throtl_grp *tg)
blk-throttle.c:641:static void throtl_dequeue_tg(struct throtl_grp *tg)
blk-throttle.c:715:static inline void throtl_start_new_slice(struct throtl_grp *tg, bool rw)
blk-throttle.c:744:static bool throtl_slice_used(struct throtl_grp *tg, bool rw)
blk-throttle.c:753:static inline void throtl_trim_slice(struct throtl_grp *tg, bool rw)
blk-throttle.c:985:static void throtl_charge_bio(struct throtl_grp *tg, struct bio *bio)
blk-throttle.c:1044:static void tg_update_disptime(struct throtl_grp *tg)
blk-throttle.c:1078:static void tg_dispatch_one_bio(struct throtl_grp *tg, bool rw)
blk-throttle.c:1120:static int throtl_dispatch_tg(struct throtl_grp *tg)
blk-throttle.c:1153:static int throtl_select_dispatch(struct throtl_service_queue *parent_sq)
blk-throttle.c:1196:static void throtl_pending_timer_fn(unsigned long arg)
blk-throttle.c:1261:void blk_throtl_dispatch_work_fn(struct work_struct *work)
blk-throttle.c:1469:static void throtl_shutdown_wq(struct request_queue *q)
blk-throttle.c:1486:bool blk_throtl_bio(struct request_queue *q, struct bio *bio)
blk-throttle.c:1607:static void tg_drain_bios(struct throtl_service_queue *parent_sq)
blk-throttle.c:1630:void blk_throtl_drain(struct request_queue *q)
blk-throttle.c:1666:int blk_throtl_init(struct request_queue *q)
blk-throttle.c:1688:void blk_throtl_exit(struct request_queue *q)
blk-integrity.c:44:int blk_rq_count_integrity_sg(struct request_queue *q, struct bio *bio)
blk-integrity.c:142:int blk_integrity_compare(struct gendisk *gd1, struct gendisk *gd2)
blk-integrity.c:252:static ssize_t integrity_format_show(struct blk_integrity *bi, char *page)
blk-integrity.c:260:static ssize_t integrity_tag_size_show(struct blk_integrity *bi, char *page)
blk-integrity.c:282:static ssize_t integrity_read_show(struct blk_integrity *bi, char *page)
blk-integrity.c:301:static ssize_t integrity_write_show(struct blk_integrity *bi, char *page)
blk-integrity.c:350:static void blk_integrity_release(struct kobject *kobj)
blk-integrity.c:364:bool blk_integrity_is_initialized(struct gendisk *disk)
blk-integrity.c:384:int blk_integrity_register(struct gendisk *disk, struct blk_integrity *template)
blk-integrity.c:436:void blk_integrity_unregister(struct gendisk *disk)
blk-cgroup.h:242:static inline int blkg_path(struct blkcg_gq *blkg, char *buf, int buflen)
blk-cgroup.h:258:static inline void blkg_get(struct blkcg_gq *blkg)
blk-cgroup.h:273:static inline void blkg_put(struct blkcg_gq *blkg)
blk-cgroup.h:364:static inline void blk_put_rl(struct request_list *rl)
blk-cgroup.h:379:static inline void blk_rq_set_rl(struct request *rq, struct request_list *rl)
blk-cgroup.h:405:static inline void blkg_stat_init(struct blkg_stat *stat)
blk-cgroup.h:418:static inline void blkg_stat_add(struct blkg_stat *stat, uint64_t val)
blk-cgroup.h:432:static inline uint64_t blkg_stat_read(struct blkg_stat *stat)
blk-cgroup.h:449:static inline void blkg_stat_reset(struct blkg_stat *stat)
blk-cgroup.h:461:static inline void blkg_stat_merge(struct blkg_stat *to, struct blkg_stat *from)
blk-cgroup.h:466:static inline void blkg_rwstat_init(struct blkg_rwstat *rwstat)
blk-cgroup.h:526:static inline uint64_t blkg_rwstat_total(struct blkg_rwstat *rwstat)
blk-cgroup.h:537:static inline void blkg_rwstat_reset(struct blkg_rwstat *rwstat)
blk-mq-cpu.c:61:void blk_mq_register_cpu_notifier(struct blk_mq_cpu_notifier *notifier)
blk-mq-cpu.c:70:void blk_mq_unregister_cpu_notifier(struct blk_mq_cpu_notifier *notifier)
blk-timeout.c:22:int blk_should_fake_timeout(struct request_queue *q)
blk-timeout.c:78:void blk_delete_timer(struct request *req)
blk-timeout.c:83:static void blk_rq_timed_out(struct request *req)
blk-timeout.c:137:void blk_rq_timed_out_timer(unsigned long data)
blk-timeout.c:164:void blk_abort_request(struct request *req)
blk-timeout.c:173:void __blk_add_timer(struct request *req, struct list_head *timeout_list)
blk-timeout.c:215:void blk_add_timer(struct request *req)
deadline-iosched.c:116:static void deadline_remove_request(struct request_queue *q, struct request *rq)
deadline-iosched.c:226:static inline int deadline_check_fifo(struct deadline_data *dd, int ddir)
deadline-iosched.c:243:static int deadline_dispatch_requests(struct request_queue *q, int force)
deadline-iosched.c:327:static void deadline_exit_queue(struct elevator_queue *e)
deadline-iosched.c:340:static int deadline_init_queue(struct request_queue *q, struct elevator_type *e)
partitions/sysv68.c:49:int sysv68_partition(struct parsed_partitions *state)
partitions/ultrix.c:12:int ultrix_partition(struct parsed_partitions *state)
partitions/check.c:135:void free_partitions(struct parsed_partitions *state)
partitions/msdos.c:37:static inline sector_t nr_sects(struct partition *p)
partitions/msdos.c:42:static inline sector_t start_sect(struct partition *p)
partitions/msdos.c:47:static inline int is_extended_partition(struct partition *p)
partitions/msdos.c:68:static int aix_magic_present(struct parsed_partitions *state, unsigned char *p)
partitions/msdos.c:446:int msdos_partition(struct parsed_partitions *state)
partitions/karma.c:12:int karma_partition(struct parsed_partitions *state)
partitions/sun.c:13:int sun_partition(struct parsed_partitions *state)
partitions/osf.c:15:int osf_partition(struct parsed_partitions *state)
partitions/mac.c:22:static inline void mac_fix_string(char *stg, int len)
partitions/mac.c:30:int mac_partition(struct parsed_partitions *state)
partitions/sgi.c:30:int sgi_partition(struct parsed_partitions *state)
partitions/cmdline.c:25:static int add_part(int slot, struct cmdline_subpart *subpart, void *param)
partitions/cmdline.c:67:int cmdline_partition(struct parsed_partitions *state)
partitions/aix.c:78:static u64 last_lba(struct block_device *bdev)
partitions/aix.c:170:int aix_partition(struct parsed_partitions *state)
partitions/ibm.c:30:static sector_t cchh2blk(struct vtoc_cchh *ptr, struct hd_geometry *geo)
partitions/ibm.c:48:static sector_t cchhb2blk(struct vtoc_cchhb *ptr, struct hd_geometry *geo)
partitions/ibm.c:289:int ibm_partition(struct parsed_partitions *state)
partitions/atari.c:26:static inline int OK_id(char *s)
partitions/atari.c:33:int atari_partition(struct parsed_partitions *state)
partitions/efi.c:148:static u64 last_lba(struct block_device *bdev)
partitions/efi.c:156:static inline int pmbr_part_valid(gpt_mbr_record *part)
partitions/efi.c:188:static int is_pmbr_valid(legacy_mbr *mbr, sector_t total_sectors)
partitions/efi.c:683:int efi_partition(struct parsed_partitions *state)
partitions/amiga.c:26:int amiga_partition(struct parsed_partitions *state)
partitions/acorn.c:165:int adfspart_check_CUMANA(struct parsed_partitions *state)
partitions/acorn.c:256:int adfspart_check_ADFS(struct parsed_partitions *state)
partitions/acorn.c:333:static inline int valid_ics_sector(const unsigned char *data)
partitions/acorn.c:356:int adfspart_check_ICS(struct parsed_partitions *state)
partitions/acorn.c:424:static inline int valid_ptec_sector(const unsigned char *data)
partitions/acorn.c:452:int adfspart_check_POWERTEC(struct parsed_partitions *state)
partitions/acorn.c:513:int adfspart_check_EESOX(struct parsed_partitions *state)
partitions/ldm.c:52:static __printf(3, 4)
partitions/ldm.c:53:void _ldm_printk(const char *level, const char *function, const char *fmt, ...)
partitions/ldm.c:77:static int ldm_parse_hexbyte (const u8 *src)
partitions/ldm.c:105:static bool ldm_parse_guid (const u8 *src, u8 *dest)
partitions/ldm.c:133:static bool ldm_parse_privhead(const u8 *data, struct privhead *ph)
partitions/ldm.c:192:static bool ldm_parse_tocblock (const u8 *data, struct tocblock *toc)
partitions/ldm.c:238:static bool ldm_parse_vmdb (const u8 *data, struct vmdb *vm)
partitions/ldm.c:558:static bool ldm_validate_partition_table(struct parsed_partitions *state)
partitions/ldm.c:687:static int ldm_relative(const u8 *buffer, int buflen, int base, int offset)
partitions/ldm.c:723:static u64 ldm_get_vnum (const u8 *block)
partitions/ldm.c:758:static int ldm_get_vstr (const u8 *block, u8 *buffer, int buflen)
partitions/ldm.c:786:static bool ldm_parse_cmp3 (const u8 *buffer, int buflen, struct vblk *vb)
partitions/ldm.c:837:static int ldm_parse_dgr3 (const u8 *buffer, int buflen, struct vblk *vb)
partitions/ldm.c:881:static bool ldm_parse_dgr4 (const u8 *buffer, int buflen, struct vblk *vb)
partitions/ldm.c:925:static bool ldm_parse_dsk3 (const u8 *buffer, int buflen, struct vblk *vb)
partitions/ldm.c:964:static bool ldm_parse_dsk4 (const u8 *buffer, int buflen, struct vblk *vb)
partitions/ldm.c:997:static bool ldm_parse_prt3(const u8 *buffer, int buflen, struct vblk *vb)
partitions/ldm.c:1073:static bool ldm_parse_vol5(const u8 *buffer, int buflen, struct vblk *vb)
partitions/ldm.c:1182:static bool ldm_parse_vblk (const u8 *buf, int len, struct vblk *vb)
partitions/ldm.c:1234:static bool ldm_ldmdb_add (u8 *data, int len, struct ldmdb *ldb)
partitions/ldm.c:1296:static bool ldm_frag_add (const u8 *data, int size, struct list_head *frags)
partitions/ldm.c:1366:static void ldm_frag_free (struct list_head *list)
partitions/ldm.c:1387:static bool ldm_frag_commit (struct list_head *frags, struct ldmdb *ldb)
partitions/ldm.c:1481:static void ldm_free_vblks (struct list_head *lh)
partitions/ldm.c:1509:int ldm_partition(struct parsed_partitions *state)
blk-ioc.c:24:void get_io_context(struct io_context *ioc)
blk-ioc.c:31:static void icq_free_icq_rcu(struct rcu_head *head)
blk-ioc.c:39:static void ioc_exit_icq(struct io_cq *icq)
blk-ioc.c:53:static void ioc_destroy_icq(struct io_cq *icq)
blk-ioc.c:88:static void ioc_release_fn(struct work_struct *work)
blk-ioc.c:129:void put_io_context(struct io_context *ioc)
blk-ioc.c:167:void put_io_context_active(struct io_context *ioc)
blk-ioc.c:202:void exit_io_context(struct task_struct *task)
blk-ioc.c:221:void ioc_clear_queue(struct request_queue *q)
blk-ioc.c:236:int create_task_io_context(struct task_struct *task, gfp_t gfp_flags, int node)
blk-ioc.c:289:struct io_context *get_task_io_context(struct task_struct *task, gfp_t gfp_flags, int node)
blk-ioc.c:318:struct io_cq *ioc_lookup_icq(struct io_context *ioc, struct request_queue *q)
blk-ioc.c:358:struct io_cq *ioc_create_icq(struct io_context *ioc, struct request_queue *q, gfp_t gfp_mask)
blk-tag.c:23:struct request *blk_queue_find_tag(struct request_queue *q, int tag)
blk-tag.c:36:static int __blk_free_tags(struct blk_queue_tag *bqt)
blk-tag.c:65:void __blk_queue_free_tags(struct request_queue *q)
blk-tag.c:86:void blk_free_tags(struct blk_queue_tag *bqt)
blk-tag.c:101:void blk_queue_free_tags(struct request_queue *q)
blk-tag.c:163:struct blk_queue_tag *blk_init_tags(int depth)
blk-tag.c:218:int blk_queue_resize_tags(struct request_queue *q, int new_depth)
blk-tag.c:280:void blk_queue_end_tag(struct request_queue *q, struct request *rq)
blk-tag.c:328:int blk_queue_start_tag(struct request_queue *q, struct request *rq)
blk-tag.c:397:void blk_queue_invalidate_tags(struct request_queue *q)
ioctl.c:12:static int blkpg_ioctl(struct block_device *bdev, struct blkpg_ioctl_arg __user *arg)
ioctl.c:153:static int blkdev_reread_part(struct block_device *bdev)
ioctl.c:204:static int put_ushort(unsigned long arg, unsigned short val)
ioctl.c:209:static int put_int(unsigned long arg, int val)
ioctl.c:214:static int put_uint(unsigned long arg, unsigned int val)
ioctl.c:219:static int put_long(unsigned long arg, long val)
ioctl.c:224:static int put_ulong(unsigned long arg, unsigned long val)
ioctl.c:229:static int put_u64(unsigned long arg, u64 val)
ioctl.c:264:static inline int is_unrecognized_ioctl(int ret)
blk-mq-tag.c:23:void blk_mq_wait_for_tags(struct blk_mq_tags *tags)
blk-mq-tag.c:29:bool blk_mq_has_free_tags(struct blk_mq_tags *tags)
blk-mq-tag.c:61:unsigned int blk_mq_get_tag(struct blk_mq_tags *tags, gfp_t gfp, bool reserved)
blk-mq-tag.c:69:static void __blk_mq_put_tag(struct blk_mq_tags *tags, unsigned int tag)
blk-mq-tag.c:84:void blk_mq_put_tag(struct blk_mq_tags *tags, unsigned int tag)
blk-mq-tag.c:92:static int __blk_mq_tag_iter(unsigned id, void *data)
blk-mq-tag.c:175:void blk_mq_free_tags(struct blk_mq_tags *tags)
blk-mq-tag.c:182:ssize_t blk_mq_tag_sysfs_show(struct blk_mq_tags *tags, char *page)
blk-cgroup.c:47:static void blkg_free(struct blkcg_gq *blkg)
blk-cgroup.c:163:struct blkcg_gq *blkg_lookup(struct blkcg *blkcg, struct request_queue *q)
blk-cgroup.c:310:static void blkg_destroy(struct blkcg_gq *blkg)
blk-cgroup.c:364:static void blkg_destroy_all(struct request_queue *q)
blk-cgroup.c:387:void __blkg_release_rcu(struct rcu_head *rcu_head)
blk-cgroup.c:534:u64 __blkg_prfill_u64(struct seq_file *sf, struct blkg_policy_data *pd, u64 v)
blk-cgroup.c:588:u64 blkg_prfill_stat(struct seq_file *sf, struct blkg_policy_data *pd, int off)
blk-cgroup.c:620:u64 blkg_stat_recursive_sum(struct blkg_policy_data *pd, int off)
blk-cgroup.c:752:void blkg_conf_finish(struct blkg_conf_ctx *ctx)
blk-cgroup.c:780:static void blkcg_css_offline(struct cgroup_subsys_state *css)
blk-cgroup.c:804:static void blkcg_css_free(struct cgroup_subsys_state *css)
blk-cgroup.c:848:int blkcg_init_queue(struct request_queue *q)
blk-cgroup.c:861:void blkcg_drain_queue(struct request_queue *q)
blk-cgroup.c:874:void blkcg_exit_queue(struct request_queue *q)
blk-cgroup.c:1086:int blkcg_policy_register(struct blkcg_policy *pol)
blk-cgroup.c:1123:void blkcg_policy_unregister(struct blkcg_policy *pol)
cmdline-parser.c:11:static int parse_subpart(struct cmdline_subpart **subpart, char *partdef)
cmdline-parser.c:79:static void free_subpart(struct cmdline_parts *parts)
cmdline-parser.c:90:static int parse_parts(struct cmdline_parts **parts, const char *bdevdef)
cmdline-parser.c:151:void cmdline_parts_free(struct cmdline_parts **parts)
cmdline-parser.c:163:int cmdline_parts_parse(struct cmdline_parts **parts, const char *cmdline)
scsi_ioctl.c:54:static int sg_get_version(int __user *p)
scsi_ioctl.c:60:static int scsi_get_idlun(struct request_queue *q, int __user *p)
scsi_ioctl.c:65:static int scsi_get_bus(struct request_queue *q, int __user *p)
scsi_ioctl.c:70:static int sg_get_timeout(struct request_queue *q)
scsi_ioctl.c:75:static int sg_set_timeout(struct request_queue *q, int __user *p)
scsi_ioctl.c:85:static int sg_get_reserved_size(struct request_queue *q, int __user *p)
scsi_ioctl.c:92:static int sg_set_reserved_size(struct request_queue *q, int __user *p)
scsi_ioctl.c:112:static int sg_emulated_host(struct request_queue *q, int __user *p)
scsi_ioctl.c:117:static void blk_set_cmd_filter_defaults(struct blk_cmd_filter *filter)
scsi_ioctl.c:200:int blk_verify_command(unsigned char *cmd, fmode_t has_write_perm)
scsi_ioctl.c:676:int scsi_verify_blk_ioctl(struct block_device *bd, unsigned int cmd)
blk-settings.c:33:void blk_queue_prep_rq(struct request_queue *q, prep_rq_fn *pfn)
blk-settings.c:50:void blk_queue_unprep_rq(struct request_queue *q, unprep_rq_fn *ufn)
blk-settings.c:72:void blk_queue_merge_bvec(struct request_queue *q, merge_bvec_fn *mbfn)
blk-settings.c:78:void blk_queue_softirq_done(struct request_queue *q, softirq_done_fn *fn)
blk-settings.c:84:void blk_queue_rq_timeout(struct request_queue *q, unsigned int timeout)
blk-settings.c:90:void blk_queue_rq_timed_out(struct request_queue *q, rq_timed_out_fn *fn)
blk-settings.c:96:void blk_queue_lld_busy(struct request_queue *q, lld_busy_fn *fn)
blk-settings.c:109:void blk_set_default_limits(struct queue_limits *lim)
blk-settings.c:139:void blk_set_stacking_limits(struct queue_limits *lim)
blk-settings.c:175:void blk_queue_make_request(struct request_queue *q, make_request_fn *mfn)
blk-settings.c:207:void blk_queue_bounce_limit(struct request_queue *q, u64 max_addr)
blk-settings.c:251:void blk_limits_max_hw_sectors(struct queue_limits *limits, unsigned int max_hw_sectors)
blk-settings.c:273:void blk_queue_max_hw_sectors(struct request_queue *q, unsigned int max_hw_sectors)
blk-settings.c:312:void blk_queue_max_segments(struct request_queue *q, unsigned short max_segments)
blk-settings.c:333:void blk_queue_max_segment_size(struct request_queue *q, unsigned int max_size)
blk-settings.c:355:void blk_queue_logical_block_size(struct request_queue *q, unsigned short size)
blk-settings.c:377:void blk_queue_physical_block_size(struct request_queue *q, unsigned int size)
blk-settings.c:400:void blk_queue_alignment_offset(struct request_queue *q, unsigned int offset)
blk-settings.c:419:void blk_limits_io_min(struct queue_limits *limits, unsigned int min)
blk-settings.c:445:void blk_queue_io_min(struct request_queue *q, unsigned int min)
blk-settings.c:464:void blk_limits_io_opt(struct queue_limits *limits, unsigned int opt)
blk-settings.c:483:void blk_queue_io_opt(struct request_queue *q, unsigned int opt)
blk-settings.c:494:void blk_queue_stack_limits(struct request_queue *t, struct request_queue *b)
blk-settings.c:690:void blk_queue_dma_pad(struct request_queue *q, unsigned int mask)
blk-settings.c:706:void blk_queue_update_dma_pad(struct request_queue *q, unsigned int mask)
blk-settings.c:755:void blk_queue_segment_boundary(struct request_queue *q, unsigned long mask)
blk-settings.c:777:void blk_queue_dma_alignment(struct request_queue *q, int mask)
blk-settings.c:797:void blk_queue_update_dma_alignment(struct request_queue *q, int mask)
blk-settings.c:815:void blk_queue_flush(struct request_queue *q, unsigned int flush)
blk-settings.c:826:void blk_queue_flush_queueable(struct request_queue *q, bool queueable)
blk-core.c:65:void blk_queue_congestion_threshold(struct request_queue *q)
blk-core.c:89:struct backing_dev_info *blk_get_backing_dev_info(struct block_device *bdev)
blk-core.c:100:void blk_rq_init(struct request_queue *q, struct request *rq)
blk-core.c:138:void blk_dump_rq_flags(struct request *rq, char *msg)
blk-core.c:161:static void blk_delay_work(struct work_struct *work)
blk-core.c:181:void blk_delay_queue(struct request_queue *q, unsigned long msecs)
blk-core.c:198:void blk_start_queue(struct request_queue *q)
blk-core.c:221:void blk_stop_queue(struct request_queue *q)
blk-core.c:246:void blk_sync_queue(struct request_queue *q)
blk-core.c:289:void __blk_run_queue(struct request_queue *q)
blk-core.c:306:void blk_run_queue_async(struct request_queue *q)
blk-core.c:321:void blk_run_queue(struct request_queue *q)
blk-core.c:331:void blk_put_queue(struct request_queue *q)
blk-core.c:346:static void __blk_drain_queue(struct request_queue *q, bool drain_all)
blk-core.c:427:void blk_queue_bypass_start(struct request_queue *q)
blk-core.c:453:void blk_queue_bypass_end(struct request_queue *q)
blk-core.c:470:void blk_cleanup_queue(struct request_queue *q)
blk-core.c:520:int blk_init_rl(struct request_list *rl, struct request_queue *q, gfp_t gfp_mask)
blk-core.c:540:void blk_exit_rl(struct request_list *rl)
blk-core.c:546:struct request_queue *blk_alloc_queue(gfp_t gfp_mask)
blk-core.c:552:struct request_queue *blk_alloc_queue_node(gfp_t gfp_mask, int node_id)
blk-core.c:666:struct request_queue *blk_init_queue(request_fn_proc *rfn, spinlock_t *lock)
blk-core.c:672:struct request_queue *blk_init_queue_node(request_fn_proc *rfn, spinlock_t *lock, int node_id)
blk-core.c:688:struct request_queue *blk_init_allocated_queue(struct request_queue *q, request_fn_proc *rfn, spinlock_t *lock)
blk-core.c:727:bool blk_get_queue(struct request_queue *q)
blk-core.c:738:static inline void blk_free_request(struct request_list *rl, struct request *rq)
blk-core.c:753:static inline int ioc_batching(struct request_queue *q, struct io_context *ioc)
blk-core.c:774:static void ioc_set_batching(struct request_queue *q, struct io_context *ioc)
blk-core.c:783:static void __freed_request(struct request_list *rl, int sync)
blk-core.c:807:static void freed_request(struct request_list *rl, unsigned int flags)
blk-core.c:827:static bool blk_rq_should_init_elevator(struct bio *bio)
blk-core.c:1106:struct request *blk_get_request(struct request_queue *q, int rw, gfp_t gfp_mask)
blk-core.c:1146:struct request *blk_make_request(struct request_queue *q, struct bio *bio, gfp_t gfp_mask)
blk-core.c:1179:void blk_requeue_request(struct request_queue *q, struct request *rq)
blk-core.c:1194:static void add_acct_request(struct request_queue *q, struct request *rq, int where)
blk-core.c:1200:static void part_round_stats_single(int cpu, struct hd_struct *part, unsigned long now)
blk-core.c:1229:void part_round_stats(int cpu, struct hd_struct *part)
blk-core.c:1240:static void blk_pm_put_request(struct request *rq)
blk-core.c:1252:void __blk_put_request(struct request_queue *q, struct request *req)
blk-core.c:1282:void blk_put_request(struct request *req)
blk-core.c:1311:void blk_add_request_payload(struct request *rq, struct page *page, unsigned int len)
blk-core.c:1329:bool bio_attempt_back_merge(struct request_queue *q, struct request *req, struct bio *bio)
blk-core.c:1350:bool bio_attempt_front_merge(struct request_queue *q, struct request *req, struct bio *bio)
blk-core.c:1396:bool blk_attempt_plug_merge(struct request_queue *q, struct bio *bio, unsigned int *request_count)
blk-core.c:1440:void init_request_from_bio(struct request *req, struct bio *bio)
blk-core.c:1454:void blk_queue_bio(struct request_queue *q, struct bio *bio)
blk-core.c:1566:static inline void blk_partition_remap(struct bio *bio)
blk-core.c:1582:static void handle_bad_sector(struct bio *bio)
blk-core.c:1606:static bool should_fail_request(struct hd_struct *part, unsigned int bytes)
blk-core.c:1634:static inline int bio_check_eod(struct bio *bio, unsigned int nr_sectors)
blk-core.c:1775:void generic_make_request(struct bio *bio)
blk-core.c:1835:void submit_bio(int rw, struct bio *bio)
blk-core.c:1898:int blk_rq_check_limits(struct request_queue *q, struct request *rq)
blk-core.c:1929:int blk_insert_cloned_request(struct request_queue *q, struct request *rq)
blk-core.c:1981:unsigned int blk_rq_err_bytes(const struct request *rq)
blk-core.c:2009:void blk_account_io_completion(struct request *req, unsigned int bytes)
blk-core.c:2023:void blk_account_io_done(struct request *req)
blk-core.c:2069:void blk_account_io_start(struct request *rq, bool new_io)
blk-core.c:2121:struct request *blk_peek_request(struct request_queue *q)
blk-core.c:2210:void blk_dequeue_request(struct request *rq)
blk-core.c:2244:void blk_start_request(struct request *req)
blk-core.c:2276:struct request *blk_fetch_request(struct request_queue *q)
blk-core.c:2309:bool blk_update_request(struct request *req, int error, unsigned int nr_bytes)
blk-core.c:2425:static bool blk_update_bidi_request(struct request *rq, int error, unsigned int nr_bytes, unsigned int bidi_bytes)
blk-core.c:2451:void blk_unprep_request(struct request *req)
blk-core.c:2464:static void blk_finish_request(struct request *req, int error)
blk-core.c:2508:static bool blk_end_bidi_request(struct request *rq, int error, unsigned int nr_bytes, unsigned int bidi_bytes)
blk-core.c:2538:bool __blk_end_bidi_request(struct request *rq, int error, unsigned int nr_bytes, unsigned int bidi_bytes)
blk-core.c:2562:bool blk_end_request(struct request *rq, int error, unsigned int nr_bytes)
blk-core.c:2576:void blk_end_request_all(struct request *rq, int error)
blk-core.c:2601:bool blk_end_request_cur(struct request *rq, int error)
blk-core.c:2619:bool blk_end_request_err(struct request *rq, int error)
blk-core.c:2639:bool __blk_end_request(struct request *rq, int error, unsigned int nr_bytes)
blk-core.c:2653:void __blk_end_request_all(struct request *rq, int error)
blk-core.c:2679:bool __blk_end_request_cur(struct request *rq, int error)
blk-core.c:2698:bool __blk_end_request_err(struct request *rq, int error)
blk-core.c:2705:void blk_rq_bio_prep(struct request_queue *q, struct request *rq, struct bio *bio)
blk-core.c:2729:void rq_flush_dcache_pages(struct request *rq)
blk-core.c:2759:int blk_lld_busy(struct request_queue *q)
blk-core.c:2775:void blk_rq_unprep_clone(struct request *rq)
blk-core.c:2791:static void __blk_rq_prep_clone(struct request *dst, struct request *src)
blk-core.c:2862:int kblockd_schedule_work(struct request_queue *q, struct work_struct *work)
blk-core.c:2891:void blk_start_plug(struct blk_plug *plug)
blk-core.c:2914:static int plug_rq_cmp(void *priv, struct list_head *a, struct list_head *b)
blk-core.c:2929:static void queue_unplugged(struct request_queue *q, unsigned int depth, bool from_schedule)
blk-core.c:2941:static void flush_plug_callbacks(struct blk_plug *plug, bool from_schedule)
blk-core.c:2983:void blk_flush_plug_list(struct blk_plug *plug, bool from_schedule)
blk-core.c:3056:void blk_finish_plug(struct blk_plug *plug)
blk-core.c:3087:void blk_pm_runtime_init(struct request_queue *q, struct device *dev)
blk-core.c:3117:int blk_pre_runtime_suspend(struct request_queue *q)
blk-core.c:3146:void blk_post_runtime_suspend(struct request_queue *q, int err)
blk-core.c:3170:void blk_pre_runtime_resume(struct request_queue *q)
blk-core.c:3192:void blk_post_runtime_resume(struct request_queue *q, int err)
genhd.c:60:struct hd_struct *disk_get_part(struct gendisk *disk, int partno)
genhd.c:127:struct hd_struct *disk_part_iter_next(struct disk_part_iter *piter)
genhd.c:187:void disk_part_iter_exit(struct disk_part_iter *piter)
genhd.c:194:static inline int sector_in_part(struct hd_struct *part, sector_t sector)
genhd.c:215:struct hd_struct *disk_map_sector_rcu(struct gendisk *disk, sector_t sector)
genhd.c:250:static inline int major_to_index(unsigned major)
genhd.c:256:void blkdev_show(struct seq_file *seqf, off_t offset)
genhd.c:285:int register_blkdev(unsigned int major, const char *name)
genhd.c:341:void unregister_blkdev(unsigned int major, const char *name)
genhd.c:378:static int blk_mangle_minor(int minor)
genhd.c:411:int blk_alloc_devt(struct hd_struct *part, dev_t *devt)
genhd.c:442:void blk_free_devt(dev_t devt)
genhd.c:456:static char *bdevt_str(dev_t devt, char *buf)
genhd.c:482:void blk_unregister_region(dev_t devt, unsigned long range)
genhd.c:496:static int exact_lock(dev_t devt, void *data)
genhd.c:505:static void register_disk(struct gendisk *disk)
genhd.c:580:void add_disk(struct gendisk *disk)
genhd.c:633:void del_gendisk(struct gendisk *disk)
genhd.c:680:struct gendisk *get_gendisk(dev_t devt, int *partno)
genhd.c:719:struct block_device *bdget_disk(struct gendisk *disk, int partno)
genhd.c:790:static void *disk_seqf_start(struct seq_file *seqf, loff_t *pos)
genhd.c:811:static void *disk_seqf_next(struct seq_file *seqf, void *v, loff_t *pos)
genhd.c:823:static void disk_seqf_stop(struct seq_file *seqf, void *v)
genhd.c:834:static void *show_partition_start(struct seq_file *seqf, loff_t *pos)
genhd.c:844:static int show_partition(struct seq_file *seqf, void *v)
genhd.c:877:static int partitions_open(struct inode *inode, struct file *file)
genhd.c:1067:int disk_expand_part_tbl(struct gendisk *disk, int partno)
genhd.c:1097:static void disk_release(struct device *dev)
genhd.c:1139:static int diskstats_show(struct seq_file *seqf, void *v)
genhd.c:1189:static int diskstats_open(struct inode *inode, struct file *file)
genhd.c:1210:dev_t blk_lookup_devt(const char *name, int partno)
genhd.c:1245:struct gendisk *alloc_disk(int minors)
genhd.c:1251:struct gendisk *alloc_disk_node(int minors, int node_id)
genhd.c:1291:struct kobject *get_disk(struct gendisk *disk)
genhd.c:1312:void put_disk(struct gendisk *disk)
genhd.c:1320:static void set_disk_ro_uevent(struct gendisk *gd, int ro)
genhd.c:1330:void set_device_ro(struct block_device *bdev, int flag)
genhd.c:1337:void set_disk_ro(struct gendisk *disk, int flag)
genhd.c:1355:int bdev_read_only(struct block_device *bdev)
genhd.c:1364:int invalidate_partition(struct gendisk *disk, int partno)
genhd.c:1445:void disk_block_events(struct gendisk *disk)
genhd.c:1470:static void __disk_unblock_events(struct gendisk *disk, bool check_now)
genhd.c:1510:void disk_unblock_events(struct gendisk *disk)
genhd.c:1528:void disk_flush_events(struct gendisk *disk, unsigned int mask)
genhd.c:1554:unsigned int disk_clear_events(struct gendisk *disk, unsigned int mask)
genhd.c:1602:static void disk_events_workfn(struct work_struct *work)
genhd.c:1658:static ssize_t __disk_events_show(unsigned int events, char *buf)
genhd.c:1773:static void disk_alloc_events(struct gendisk *disk)
genhd.c:1797:static void disk_add_events(struct gendisk *disk)
genhd.c:1818:static void disk_del_events(struct gendisk *disk)
genhd.c:1832:static void disk_release_events(struct gendisk *disk)
blk-mq-sysfs.c:16:static void blk_mq_sysfs_release(struct kobject *kobj)
blk-mq-sysfs.c:125:static ssize_t blk_mq_sysfs_dispatched_show(struct blk_mq_ctx *ctx, char *page)
blk-mq-sysfs.c:131:static ssize_t blk_mq_sysfs_merged_show(struct blk_mq_ctx *ctx, char *page)
blk-mq-sysfs.c:136:static ssize_t blk_mq_sysfs_completed_show(struct blk_mq_ctx *ctx, char *page)
blk-mq-sysfs.c:142:static ssize_t sysfs_list_show(char *page, struct list_head *list, char *msg)
blk-mq-sysfs.c:155:static ssize_t blk_mq_sysfs_rq_list_show(struct blk_mq_ctx *ctx, char *page)
blk-mq-sysfs.c:172:static ssize_t blk_mq_hw_sysfs_run_show(struct blk_mq_hw_ctx *hctx, char *page)
blk-mq-sysfs.c:206:static ssize_t blk_mq_hw_sysfs_ipi_show(struct blk_mq_hw_ctx *hctx, char *page)
blk-mq-sysfs.c:242:static ssize_t blk_mq_hw_sysfs_tags_show(struct blk_mq_hw_ctx *hctx, char *page)
blk-mq-sysfs.c:335:void blk_mq_unregister_disk(struct gendisk *disk)
blk-mq-sysfs.c:358:int blk_mq_register_disk(struct gendisk *disk)
blk-flush.c:117:static void blk_flush_restore_request(struct request *rq)
blk-flush.c:133:static void mq_flush_data_run(struct work_struct *work)
blk-flush.c:143:static void blk_mq_flush_data_insert(struct request *rq)
blk-flush.c:225:static void flush_end_io(struct request *flush_rq, int error)
blk-flush.c:280:static void mq_flush_work(struct work_struct *work)
blk-flush.c:304:static void mq_run_flush(struct request_queue *q)
blk-flush.c:322:static bool blk_kick_flush(struct request_queue *q)
blk-flush.c:358:static void flush_data_end_io(struct request *rq, int error)
blk-flush.c:370:static void mq_flush_data_end_io(struct request *rq, int error)
blk-flush.c:402:void blk_insert_flush(struct request *rq)
blk-flush.c:477:void blk_abort_flushes(struct request_queue *q)
blk-flush.c:558:void blk_mq_init_flush(struct request_queue *q)
blk-lib.c:18:static void bio_batch_end_io(struct bio *bio, int err)
bsg.c:91:static void bsg_free_command(struct bsg_command *bc)
bsg.c:139:static int bsg_io_schedule(struct bsg_device *bd)
bsg.c:336:static void bsg_rq_end_io(struct request *rq, int uptodate)
bsg.c:483:static int bsg_complete_all_commands(struct bsg_device *bd)
bsg.c:575:static inline void bsg_set_block(struct bsg_device *bd, struct file *file)
bsg.c:586:static inline int err_block_err(int ret)
bsg.c:717:static void bsg_kref_release_function(struct kref *kref)
bsg.c:729:static int bsg_put_device(struct bsg_device *bd)
bsg.c:846:static int bsg_open(struct inode *inode, struct file *file)
bsg.c:859:static int bsg_release(struct inode *inode, struct file *file)
bsg.c:885:static long bsg_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
bsg.c:976:void bsg_unregister_queue(struct request_queue *q)
bsg.c:1063:static char *bsg_devnode(struct device *dev, umode_t *mode)
